[{"authors":["david-xiao"],"categories":null,"content":"David Xiao is a senior cloud engineer at Toronto Stock Exchange.\n","date":1586995200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1586995200,"objectID":"3cd11a3614f5641f8703d8da70c09029","permalink":"https://davidxiao.me/author/david-xiao/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/david-xiao/","section":"authors","summary":"David Xiao is a senior cloud engineer at Toronto Stock Exchange.","tags":null,"title":"David Xiao","type":"authors"},{"authors":null,"categories":null,"content":"Last Updated: May 19, 2020\nThis Privacy Policy (\u0026ldquo;Policy\u0026rdquo;) outlines the personal information handling practices on davidxiao.me (\u0026ldquo;this site\u0026rdquo;, \u0026ldquo;I,\u0026quot;, \u0026ldquo;me,\u0026rdquo; and \u0026ldquo;my\u0026rdquo;).\nBefore you post any comments on this site, please carefully review this Privacy Policy. By posting comments on this site, you understand that your information will be collected, used, and disclosed as outlined in this Privacy Policy.\nIF YOU DO NOT AGREE TO THIS PRIVACY POLICY, PLEASE DO NOT POST ANY COMMENTS ON THIS SITE.\nTypes and Uses of Personal Information If you are browsing this site but not posting any comments on this site, no personal information is collected.\nHowever, if you wish to post comments on this site, you would first need to complete Social Login on this site with one of the following Identity Providers: Google, Twitter, Facebook, Github.\nYour name, language preference, and profile pictures will be shared with this site\u0026rsquo;s comment engine by the identity provider upon completion of the social login.\nComment Engine I use Remark42 as this site\u0026rsquo;s comment engine. It is open source and privacy focused. It saves the minimum amount of information required to be able to show comments. Such information includes name, avatar (to be shown with comment message) and your id in service you used to login (to understand it\u0026rsquo;s still you when you log in next time). Id is hashed, there\u0026rsquo;s no easy way for me to identify the profile you used for login.\nFind more details about Remark42\u0026rsquo;s privacy in here and be sure to check its source code in case you have further questions.\nAggregate Information (non-personally identifiable) This site uses Google Analytics to collect aggregated information including browser information and site traffic statistics. Find more detail about Google Analytics privacy information here.\nThis site does not use any Web Banner or Online advertising.\nCookies A cookie is a small text file that is stored on a user\u0026rsquo;s computer for record-keeping purposes.\nThis website uses cookies to work properly. Cookies are small pieces of information your browser sends to server with every request. Here\u0026rsquo;s the list of cookies used on this website:\n Google Analytics uses cookies for its analytics purposes. When logging in to post a comment, comment engine requests two cookies: one to determine it\u0026rsquo;s still you; the other one is added as an information security measure against Cross-site request forgery.  If you reject cookies, you may still visit this site, but your ability to use some areas of this site, such as comments, will require logging in.\nLinks to Other Sites This site contains links to other sites that are not owned or controlled by davidxiao.me. Please be aware that I am not responsible for the privacy practices of such other sites. This privacy statement applies only to information collected by this site.\nChanges in This Privacy Statement If this privacy policy needs to be updated, the updated version will be posted to this privacy statement, the homepage, and other places I deem appropriate.\nQuestions If you have any questions about this Privacy Policy or our privacy practices, you can contact me at: root@davidxiao.me\n ","date":1589846400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589846400,"objectID":"18d05a63a1c8d7ed973cc51838494e41","permalink":"https://davidxiao.me/privacy/","publishdate":"2020-05-19T00:00:00Z","relpermalink":"/privacy/","section":"","summary":"Last Updated: May 19, 2020\nThis Privacy Policy (\u0026ldquo;Policy\u0026rdquo;) outlines the personal information handling practices on davidxiao.me (\u0026ldquo;this site\u0026rdquo;, \u0026ldquo;I,\u0026quot;, \u0026ldquo;me,\u0026rdquo; and \u0026ldquo;my\u0026rdquo;).\nBefore you post any comments on this site, please carefully review this Privacy Policy.","tags":null,"title":"Privacy Policy","type":"page"},{"authors":["David Xiao"],"categories":[],"content":"In this post I will talk about how I built this website from the ground up using Hugo as site generator and Firebase as hosting provider. I wish you\u0026rsquo;ll find it helpful.\n Web development has come a long way. Back in the late 90\u0026rsquo;s when I first came across Internet, anyone who knows anything about HTML would be considered very technical.\nFast forward into 2020, social media and smart phone is ubiquitous, web hosting services such as Wix and Wordpress have made content creation possible for anyone who wishes to create a website without much headache.\nWhy should you building a website from the ground up as opposed to using a web hosting service?\nMaybe it\u0026rsquo;s for you Building a website with a static site generator is not for everyone. George Cushen who is Hugo theme Academic\u0026rsquo;s main contributor once put:\n \u0026hellip;(it would) require a basic understanding of using the command line in the Terminal (Mac/Linux) or Command Prompt (Windows) app on your computer. If you are not interested in this, perhaps this is not for you\u0026hellip;\n Original post\n But if going beyond content creation and learning more about building a website that is lightweight and secure, cost effective yet no vendor lock-in is your thing, then let\u0026rsquo;s dive right in.\nOverview First and foremost, let\u0026rsquo;s take a look on what will be covered in the post.\n  Register a domain name.\n  Set up Hugo as static site generator.\n  Use a kick-starter theme to get going quickly.\n  Deploy the site to Firebase.\n  Add your domain to the new site.\n  1. Register a domain name It\u0026rsquo;s pretty straightforward. You come up with a great domain name. It is better to be concise and easy to remember. Be creative \u0026lt;3.\nThen complete the domain registration on any Domain Name Registrar you prefer. I use Google Domains but there are other good choices such as Namecheap and Go Daddy.\n  Register a domain name on Google Domains   2. Setting up Hugo  Hugo is a static site generator. There are many other site generators, I picked Hugo for a few reasons:\n It\u0026rsquo;s open source and backed by an active developer team and support community. It\u0026rsquo;s a monolithic program with no external dependencies. It\u0026rsquo;s production ready.  In a nutshell, Hugo renders content into HTML files and uploads the files onto your choice of hosting provider. Your content is what you write as content creator. Hugo takes content files written in Markdown (.md), a format that is intended to be used by technical and non-technical writers alike. Since inception, Markdown has become the de facto format in content creation and blogging.\nIf you need to learn about Markdown syntax, there are good guides such as Markdown Guide.\nInstalling Hugo On macOS, I recommend using a package manager such as Homebrew to manage third-party packages. With Homebrew installed, to install Hugo, just run:\n$ brew install hugo ;  All set. In case you need to check which Hugo version is installed, run hugo version. On my mac it returns Hugo Static Site Generator v0.70.0/extended darwin/amd64\nFor installing Hugo on Windows or Linux, refer to Hugo\u0026rsquo;s documentation.\n3. Use a kick-starter theme Hugo has built-in theme mechanism that allows developers to quickly run a theme and see the results. It also provides all the necessary building blocks for user to personalize the theme. There are many themes available on Hugo, for my own website I use Academic Theme. It also comes with a academic-kickstart repo on github for teasers.\nThe easy way to get started is to just fork the repo, download the code and run it.\n  Fork the kickstart into your own repo   Download the code:\n$ git clone \u0026lt;replace-it-with-your-own-repo-url\u0026gt; ; $ cd \u0026lt;your-repo-root-dir\u0026gt; ; $ git submodule update --init --recursive ; # get the latest Academic theme  Run Hugo to serve the test site:\n$ hugo server -D ;  Now visit http://127.0.0.1:1313/ on your web browser and you should see the homepage.\nCongrats! You\u0026rsquo;ve got your first Hugo website up and running on your local environment!\n Hugo only binds to local network address for security by default. If you need to test the site on another computer in your local network, run:\n$ hugo server -D --bind=0.0.0.0 ;    4. Deploy the new site to Firebase There are many out there: Google Firebase, GitHub Pages, Netlify and AWS Amplify to name a few. Each one has its own offering. I picked Firebase as my hosting provider because they seem to offer a bit more on their free tier.\nFirst, install Firebase CLI and (optional) Google Cloud SDK CLI.\n  Firebase CLI. The recommended way is to run npm i -g firebase-tools ; See its github repo for more detail. If you don\u0026rsquo;t have npm installed yet, run: brew install node ;. npm will be installed alongside node.js.\n  Google Cloud SDK CLI. Run brew cask install google-cloud-sdk ;\n  Next, go to Firebase to set up an account and create a new Firebase project. Make sure it uses the default free tier plan which is called Spark. Be noted you need to specify GCP resource location under Project Overview in Firebase Dashboard after project is created. The location can not be changed afterwards, so choose something close to you would be wise.\n  Specify resource location under Project Overview in Firebase Dashboard   Set up service account authenication on Firebase Authenticating with a service account allows you to use Firebase CLI to manage your Firebase project. Google has provided a step by step guide here.\nWhen authentication is set up, go to your project root directory and follow the recorded screens below to initialize firebase and deploy the very first version of your site onto firebase.\n Congratulations! Your website is online! You should find your Hosting URL at the end of the Firebase deploy output, it\u0026rsquo;s typically something like: https://your-project-id.web.app\n5. Add your domain to the new site Go to Hosting on Firebase, click on \u0026ldquo;Add custom domain\u0026rdquo;. Typically you wanted to add your root domain name and a sub domain name such as \u0026ldquo;www\u0026rdquo;. For example, I added \u0026ldquo;davidxiao.me\u0026rdquo; for my website and added another entry for redirecting www.davidxiao.me to davidxiao.me\nWhen it\u0026rsquo;s complete, you will be able to visit your website by your custom domain regsitered on step 1.\n  Add custom domain to your website    Comments   var remark_config = { host: \"https://api8964.duckdns.org:8964/remark42\", site_id: 'davidxiao', components: ['embed'], url: \"https://davidxiao.me/post/building-a-website-in-2020/\", max_shown_comments: 10, theme: 'dark', locale: 'en' }; (function(c) { for(var i = 0; i ","date":1586995200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1586995200,"objectID":"e68706bd91a6931f00b0ba34bb78d1e0","permalink":"https://davidxiao.me/post/building-a-website-in-2020/","publishdate":"2020-04-16T00:00:00Z","relpermalink":"/post/building-a-website-in-2020/","section":"post","summary":"Create a static website with Hugo from the ground up","tags":[],"title":"Building a website in 2020","type":"post"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Math Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file.\nTo render inline or block math, wrap your LaTeX math with $...$ or $$...$$, respectively.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left |\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right |^2}$$\nExample inline math $\\nabla F(\\mathbf{x}_{n})$ renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the \\\\\\\\ math linebreak:\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\\\\\ 1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$  renders as\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\\n1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ```  renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2]  An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ```  renders as\ngantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d  An example class diagram:\n```mermaid classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() } ```  renders as\nclassDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() }  An example state diagram:\n```mermaid stateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] ```  renders as\nstateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*]  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Asides Academic supports a shortcode for asides, also referred to as notices, hints, or alerts. By wrapping a paragraph in {{% alert note %}} ... {{% /alert %}}, it will render as an aside.\n{{% alert note %}} A Markdown aside is useful for displaying notices, hints, or definitions to your readers. {{% /alert %}}  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.   Icons Academic enables you to use a wide range of icons from Font Awesome and Academicons in addition to emojis.\nHere are some examples using the icon shortcode to render icons:\n{{\u0026lt; icon name=\u0026quot;terminal\u0026quot; pack=\u0026quot;fas\u0026quot; \u0026gt;}} Terminal {{\u0026lt; icon name=\u0026quot;python\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} Python {{\u0026lt; icon name=\u0026quot;r-project\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} R  renders as\n  Terminal\n Python\n R\nDid you find this page helpful? Consider sharing it 🙌 ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://davidxiao.me/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":["admin"],"categories":[],"content":"from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and JupyterLab  Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb  The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata ( front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post's title date: 2019-09-01 # Put any other Academic metadata here... ---  Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.  Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://davidxiao.me/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":["admin"],"categories":["Cat1","Cat2"],"content":"Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 widgets, themes, and language packs included!\n Check out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\n 👉 Get Started 📚 View the documentation 💬 Ask a question on the forum 👥 Chat with the community 🐦 Twitter: @source_themes @GeorgeCushen #MadeWithAcademic 💡 Request a feature or report a bug ⬆️ Updating? View the Update Guide and Release Notes ❤️ Support development of Academic:  ☕️ Donate a coffee 💵 Become a backer on Patreon 🖼️ Decorate your laptop or journal with an Academic sticker 👕 Wear the T-shirt 👩‍💻 Contribute      Academic is mobile first with a responsive design to ensure that your site looks stunning on every device.   Key features:\n Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 15+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Academic comes with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the sun/moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\n Choose a stunning theme and font for your site. Themes are fully customizable.\nEcosystem   Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site  Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n  one-click install using your web browser (recommended)  install on your computer using Git with the Command Prompt/Terminal app  install on your computer by downloading the ZIP files  install on your computer with RStudio  Then personalize and deploy your new site.\nUpdating  View the Update Guide.\nFeel free to star the project on Github to help keep track of updates.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555459200,"objectID":"0f2f0c8acf8b98f5df290ce375bc6e1b","permalink":"https://davidxiao.me/post/academic-getting-started/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/post/academic-getting-started/","section":"post","summary":"Create a beautifully simple website in under 10 minutes.","tags":["Academic","OpenSource"],"title":"Academic: the website builder for Hugo","type":"post"}]