<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Site-Building | DAVID&#39;S GARAGE</title>
    <link>https://davidxiao.me/category/site-building/</link>
      <atom:link href="https://davidxiao.me/category/site-building/index.xml" rel="self" type="application/rss+xml" />
    <description>Site-Building</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â©2020 David Xiao</copyright><lastBuildDate>Thu, 11 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://davidxiao.me/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Site-Building</title>
      <link>https://davidxiao.me/category/site-building/</link>
    </image>
    
    <item>
      <title>Secure Your HTTPS / SSL / TLS</title>
      <link>https://davidxiao.me/post/secure-your-https-ssl-tls/</link>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/secure-your-https-ssl-tls/</guid>
      <description>&lt;p&gt;If you own a personal site and like to make both your site and visitors secure, read this: Just because you&amp;rsquo;ve enabled HTTPS does not mean it&amp;rsquo;s sound and secure.&lt;/p&gt;
&lt;p&gt;TLS v1.0 and v1.1 are known to be vulnerable and should not be allowed on your site. It is a security best practice to make TLS v1.2 the minimum version allowed on your site.&lt;/p&gt;
&lt;p&gt;For more detail, check out 
&lt;a href=&#34;https://security.googleblog.com/2018/10/modernizing-transport-security.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this post&lt;/a&gt; on Google Security Blog and 
&lt;a href=&#34;https://developers.google.com/web/updates/2020/02/chrome-81-deps-rems#remove_tls_10_and_tls_11&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this post&lt;/a&gt; on Google Chrome Browser Updates.&lt;/p&gt;
&lt;h2 id=&#34;get-a-test-on-your-site&#34;&gt;Get a Test on your Site&lt;/h2&gt;
&lt;p&gt;You can use 
&lt;a href=&#34;https://www.ssllabs.com/ssltest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SSLLabs&lt;/a&gt; to conduct a quick test on your site.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-initial-test-results&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport1_hu4983f44c036a3ff7c6c18a3e1d69f764_337807_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Initial test results&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport1_hu4983f44c036a3ff7c6c18a3e1d69f764_337807_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2230&#34; height=&#34;1516&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Initial test results
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Click on any of the server will give you a brief explaination on the findings.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-see-explaination-here&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport2_hu3b6b7884631da49756285134b8c40644_167991_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;See explaination here&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport2_hu3b6b7884631da49756285134b8c40644_167991_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2236&#34; height=&#34;1184&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    See explaination here
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;I&amp;rsquo;m using Cloudflare as CDN for api.davidxiao.me, so I went on to the Cloudflare portal and updated the &amp;ldquo;Minimum TLS Version&amp;rdquo; to &amp;ldquo;TLS 1.2&amp;rdquo;.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-updating-minimum-tls-version-to-12&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/tls_hu8dc6d5d801d6201179ba0c66dc555f46_76902_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Updating minimum TLS version to 1.2&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/tls_hu8dc6d5d801d6201179ba0c66dc555f46_76902_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2072&#34; height=&#34;806&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Updating minimum TLS version to 1.2
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Then performed a re-scan. It looks much better this time.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-the-new-results&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport3_hu06b46150dc388fe5c30dd7fb161e2545_330910_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;The new results&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport3_hu06b46150dc388fe5c30dd7fb161e2545_330910_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2232&#34; height=&#34;1512&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    The new results
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Hope this is helpful!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dynamic DNS on Cloudflare in 5 Minutes</title>
      <link>https://davidxiao.me/post/dynamic-dns-on-cloudflare/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/dynamic-dns-on-cloudflare/</guid>
      <description>&lt;p&gt;You will need the following to get dynamic DNS working on Cloudflare:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cloudflare as your DNS provider. Migrating from your current DNS provider over to Cloudflare is easy and free whether you are using Godaddy, Namecheap or another one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get API token set up on Cloudflare.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install 
&lt;a href=&#34;https://github.com/danielpigott/cloudflare-cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cloudflare-cli&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;





  
  











&lt;figure id=&#34;figure-cloudflare-api-token&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/dynamic-dns-on-cloudflare/token_hucd115d0ccd33b06635afdf2056bad027_83044_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Cloudflare API token&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/dynamic-dns-on-cloudflare/token_hucd115d0ccd33b06635afdf2056bad027_83044_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2076&#34; height=&#34;548&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Cloudflare API token
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Cloudflare Token is preferred way over API key as token enables added security by allowing to specify access level with permissions and resources.&lt;/p&gt;
&lt;p&gt;Token can be disabled when not in use.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;When those are met, a one-liner like the following will update A record &lt;code&gt;api.davidxiao.me&lt;/code&gt; with your public internet IP.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTE: If you are only using DDNS on Cloudflare and not using its CDN, remove &lt;code&gt;--activate&lt;/code&gt; from the command below.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    $ env CF_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your-own-cloudflare-token-NOT-api-key&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;        CF_API_DOMAIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your-own-TLD-such-as-davidxiao.me&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;        cfcli --activate --type A edit your-subdomain-such-as-api.davidxiao.me &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;curl -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://ip.seeip.org/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, put the code it into crontab will automate the process.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hosting Multiple Apps With Nginx Rewrite Rules</title>
      <link>https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/</guid>
      <description>&lt;p&gt;&lt;span class=&#34;my-dropcap&#34;&gt;S&lt;/span&gt;uppose you plan on hosting multiple API endpoints on one domain, make it &lt;code&gt;api.your-domain.com&lt;/code&gt;, one way to do it is to put each endpoint under a distinctive path, each one would look like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    https://api.your-domain.com/myapp1/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




  
  











&lt;figure id=&#34;figure-tunneling-through-a-nginx-reverse-proxy&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/rewrite_hube19bdb3e2a40b92a2fbfcd1b97b96f6_90876_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Tunneling through a Nginx reverse proxy&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/rewrite_hube19bdb3e2a40b92a2fbfcd1b97b96f6_90876_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;860&#34; height=&#34;984&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Tunneling through a Nginx reverse proxy
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Configure a reverse proxy such as Nginx and set up rewrite rules can get it done quickly.&lt;/p&gt;
&lt;p&gt;See below my example:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/c4f16ebbcdb2ec0701bcaad24640d12c.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Depending on your Linux distro and Nginx, most would need to put the conf file under &lt;code&gt;/etc/nginx/sites-available/&lt;/code&gt; directory and create a symbol link in &lt;code&gt;/etc/nginx/sites-enabled/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Restart nginx service by &lt;code&gt;sudo systemctl restart nginx ;&lt;/code&gt; and it&amp;rsquo;s working!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Integrating a Self-Hosting Commenting System to Your Site</title>
      <link>https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/</guid>
      <description>&lt;p&gt;TLDR;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;ð This post talks about hosting remark42 commenting system as Docker container; Leveraging Cloudflare to protect the remark42 endpoint; Integrating remark42 to a static site which is built on Hugo and academic theme.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Before getting started, take a look at the posts on my blog at 
&lt;a href=&#34;https://davidxiao.me/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;davidxiao.me&lt;/a&gt; and see the way commenting works.&lt;/p&gt;
&lt;h2 id=&#34;what-will-be-covered-in-this-post&#34;&gt;What Will be Covered in This Post&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Deploy remark42 container on Docker&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Protect your remark42 endpoint with Cloudflare CDN&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integrate remark42 to your Hugo site&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-1-deploy-remark42-on-your-host&#34;&gt;Step 1. Deploy Remark42 on your Host&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://remark42.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Remark42&lt;/a&gt; is an open source commenting system that can be deployed as container. It&amp;rsquo;s self-contained with little external dependencies. You can find deployement guide on its Remark42&amp;rsquo;s git repo.&lt;/p&gt;
&lt;p&gt;Feel free to do container your way but if you are interested in what tool I use for docker management, it&amp;rsquo;s 
&lt;a href=&#34;https://github.com/portainer/portainer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Portainer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have the following parameters on my remark42 container:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;REMARK_URL              make sure it has the full path if you are using reverse proxy and rewrites, e.g. https://api.davidxiao.me/remark42
SITE	                site id. For example: davidxiao
SECRET	                required. can be a long and hard-to-guess string
DEBUG	                true
AUTH_GOOGLE_CID         your own value
AUTH_GOOGLE_CSEC        your own value
AUTH_FACEBOOK_CID       your own value
AUTH_FACEBOOK_CSEC      your own value
AUTH_TWITTER_CID        your own value
AUTH_TWITTER_CSEC       your own value
AUTH_GITHUB_CID         your own value
AUTH_GITHUB_CSEC        your own value
ADMIN_SHARED_EMAIL      mail address that will receive notifications such as new comments
NOTIFY_EMAIL_ADMIN	    true
NOTIFY_TYPE	            email
NOTIFY_EMAIL_FROM	    mail address that is in the same domain see Mailgun settings. For example, mine is remark42@davidxiao.me
AUTH_EMAIL_FROM	        your own value
ADMIN_SHARED_ID	        OAuth authenticated user id that has admin access. see https://github.com/umputun/remark42#admin-users
SMTP_HOST	            smtp.mailgun.org
SMTP_PORT	            465
SMTP_TLS	            true
SMTP_USERNAME	        SMTP credential from Mailgun
SMTP_PASSWORD	        your own credential
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For more detail on how to configure email configuration on Remark42, check 
&lt;a href=&#34;https://github.com/umputun/remark42/blob/master/docs/email.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this&lt;/a&gt; out.&lt;/p&gt;
&lt;h3 id=&#34;app-registration-on-the-oauth-providers&#34;&gt;App Registration on the OAuth Providers&lt;/h3&gt;
&lt;p&gt;Before registering you Remark42 app on google, facebook, twitter and github (the 
&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_OAuth_providers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OAuth providers&lt;/a&gt; Remark42 supports), you would need to determine the domain name of your Remark42 api endpoint.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-my-app-registration-page-on-facebook-as-an-example&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/facebook_hu9747433adb773f60d55694d972e5edfc_320108_2000x2000_fit_q90_lanczos.jpg&#34; data-caption=&#34;My app registration page on facebook as an example&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/facebook_hu9747433adb773f60d55694d972e5edfc_320108_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2682&#34; height=&#34;1342&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    My app registration page on facebook as an example
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;DDNS(Dynamic DNS) comes in handy whether you are hosting Remark42 container on cloud such as AWS EC2 or on your homelab, since it allows you to update DNS A records whenever your endpoint IP changes.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Selecting a DDNS provider is important for a few reasons.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Protection of your host&amp;rsquo;s public IP is important for self-hosting web apps. Using DDNS alone means your domain name gets resolved to your public IP.  DDNS + CDN is a better approach.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each OAuth provider has its own rules over whether an given OAuth redirect URI is allowed. For example, facebook does not allow any &lt;code&gt;duckdns.org&lt;/code&gt; as part of redirect URI at time of writing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Service availability concern. Your app will become inaccessible when the DDNS it relies on stops working.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The security posture of the DDNS provider. If the service provider gets compromised, you DDNS domain name can be &amp;ldquo;hijacked&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;My approach:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Set up your public endpoint leveraging a DNS provider such as Cloudflare that has large operating scale, supports DDNS management over API and offers CDN protection over your private endpoint. See 
&lt;a href=&#34;https://davidxiao.me/post/dynamic-dns-on-cloudflare/&#34;&gt;here&lt;/a&gt; for more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On your private endpoint, Use a reverse proxy such as Nginx to rewrite URLs so that multiple apps can be &amp;ldquo;tunneled through&amp;rdquo; a single domain name when needed. See 
&lt;a href=&#34;https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/&#34;&gt;here&lt;/a&gt; for more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use Nginx control policy to restrict access to only Cloudflare IPs and local trusted networks.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-2-protecttunnel-your-endpoint&#34;&gt;Step 2. Protect(tunnel) your Endpoint&lt;/h2&gt;
&lt;p&gt;You need to use Cloudflare as DNS provider before enabling Cloudflare CDN.&lt;/p&gt;
&lt;p&gt;To enable CDN, first go to Cloudflare portal and enable CDN for your remark42 subdomain. In my case it&amp;rsquo;s &lt;code&gt;api.davidxiao.me&lt;/code&gt;.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-enabling-proxy-by-clicking-on-the-proxy-status-icon&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/cdn_hu16e75ec25f0125b652450b7f91b4df42_98125_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Enabling Proxy by clicking on the Proxy status icon&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/cdn_hu16e75ec25f0125b652450b7f91b4df42_98125_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2096&#34; height=&#34;758&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Enabling Proxy by clicking on the Proxy status icon
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Second, modify caching level to &amp;ldquo;No query string&amp;rdquo;. No Query String means it only delivers files from cache when there is no query string. It&amp;rsquo;s the caching behavior we expect for an API endpoint, isn&amp;rsquo;t it?&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-enabling-proxied-by-clicking-on-proxy-status-icon&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/caching_hu1b96b407d2d894423ea0f28de5f404e7_230832_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Enabling Proxied by clicking on Proxy status icon&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/caching_hu1b96b407d2d894423ea0f28de5f404e7_230832_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2126&#34; height=&#34;1352&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Enabling Proxied by clicking on Proxy status icon
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h2 id=&#34;step-21-enable-end-to-end-https-with-cloudflare&#34;&gt;Step 2.1 Enable End-to-end HTTPS with Cloudflare&lt;/h2&gt;
&lt;p&gt;There are several SSL options provided by Cloudflare. Check 
&lt;a href=&#34;https://support.cloudflare.com/hc/en-us/articles/200170416-End-to-end-HTTPS-with-Cloudflare-Part-3-SSL-options#h_845b3d60-9a03-4db0-8de6-20edc5b11057&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this&lt;/a&gt; out to understand the difference.&lt;/p&gt;
&lt;p&gt;Based on my own needs, I&amp;rsquo;ve set up a &amp;ldquo;Full&amp;rdquo; mode in Cloudflare, which ensures a secure connection between both the web browser and Cloudflare and between Cloudflare and my endpoint. This option uses a self-signed certificate at the my endpoint web server.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-enabling-ssl-in-full-mode&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/ssl1_hu718aada9808213d1863d35c04aab4c8f_284146_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Enabling SSL in Full mode&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/ssl1_hu718aada9808213d1863d35c04aab4c8f_284146_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2178&#34; height=&#34;1348&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Enabling SSL in Full mode
  &lt;/figcaption&gt;


&lt;/figure&gt;






  
  











&lt;figure id=&#34;figure-generate-and-download-cloudflares-self-signed-certificates&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/ssl2_hu40bb48d6d163b284766543eb6db65c71_208391_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Generate and download Cloudflare&amp;rsquo;s self-signed certificates&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/ssl2_hu40bb48d6d163b284766543eb6db65c71_208391_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2140&#34; height=&#34;1128&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Generate and download Cloudflare&amp;rsquo;s self-signed certificates
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Save the origin certificat as &lt;code&gt;origin-cert.pem&lt;/code&gt; and the private key as &lt;code&gt;priv.key&lt;/code&gt;, place both files on your host and make sure they both have ownership of &lt;code&gt;root&lt;/code&gt; and have &lt;code&gt;0600&lt;/code&gt; permissions.&lt;/p&gt;
&lt;p&gt;Then you just need to add the file locations in your nginx configuration file. See below my configruation files for example:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/c4f16ebbcdb2ec0701bcaad24640d12c.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;step-3-integrate-remark42-to-your-hugo-site&#34;&gt;Step 3. Integrate Remark42 to Your Hugo Site&lt;/h2&gt;
&lt;p&gt;Override the &lt;code&gt;comments.html&lt;/code&gt; template by:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ cp your-project-root/themes/academic/layouts/partials/comments.html your-project-root/layouts/partials/comments.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and modify the new one as you see fit.&lt;/p&gt;
&lt;p&gt;The following is my modified version of &lt;code&gt;comments.html&lt;/code&gt;.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/2c4373dbbf55823ccb3460cd79b37ee5.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Congrats! You&amp;rsquo;ve got the remark42 commenting system integrated to your Hugo site.&lt;/p&gt;
&lt;p&gt;Comments and Feedback are welcome!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building a website in 2020</title>
      <link>https://davidxiao.me/post/building-a-website-in-2020/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/building-a-website-in-2020/</guid>
      <description>&lt;p&gt;In this post I will talk about how I built this website from the ground up using Hugo as site generator and Firebase as hosting provider. I wish you&amp;rsquo;ll find it helpful.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;span class=&#34;my-dropcap&#34;&gt;W&lt;/span&gt;eb development has come a long way. Back in the late 90&amp;rsquo;s when I first came across Internet, anyone who knows anything about 
&lt;a href=&#34;https://en.wikipedia.org/wiki/HTML&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTML&lt;/a&gt; would be considered very technical.&lt;/p&gt;
&lt;p&gt;Fast forward into 2020, social media and smart phone is ubiquitous, 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Web_hosting_service&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;web hosting services&lt;/a&gt; such as 
&lt;a href=&#34;https://www.wix.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wix&lt;/a&gt; and 
&lt;a href=&#34;https://wordpress.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wordpress&lt;/a&gt; have made 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Content_creation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;content creation&lt;/a&gt; possible for anyone who wishes to create a website without much headache.&lt;/p&gt;
&lt;p&gt;Why should you building a website from the ground up as opposed to using a web hosting service?&lt;/p&gt;
&lt;h2 id=&#34;maybe-its-for-you&#34;&gt;Maybe it&amp;rsquo;s for you&lt;/h2&gt;
&lt;p&gt;Building a website with a static site generator is not for everyone. George Cushen who is Hugo theme Academic&amp;rsquo;s main contributor once put:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;hellip;(it would) require a basic understanding of using the command line in the Terminal (Mac/Linux) or Command Prompt (Windows) app on your computer. If you are not interested in this, perhaps this is not for you&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Original post&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But if going beyond content creation and learning more about building a website that is lightweight and secure, cost effective yet no 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Vendor_lock-in&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;vendor lock-in&lt;/a&gt; is your thing, then let&amp;rsquo;s dive right in.&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;First and foremost, let&amp;rsquo;s take a look on what will be covered in the post.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Register a domain name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up Hugo as static site generator.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a kick-starter theme to get going quickly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deploy the site to Firebase.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add your domain to the new site.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;1-register-a-domain-name&#34;&gt;1. Register a domain name&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s pretty straightforward. You come up with a great domain name. It is better to be concise and easy to remember. Be creative &amp;lt;3.&lt;/p&gt;
&lt;p&gt;Then complete the domain registration on any 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain_name_registrar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Domain Name Registrar&lt;/a&gt; you prefer. &lt;del&gt;I use Google Domains but there are other good choices such as Namecheap and GoDaddy.&lt;/del&gt;&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-register-a-domain-name-on-google-domains&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-a-website-in-2020/googledomain_hua80840076dd6af33bd83daa8ff78b57a_385165_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Register a domain name on Google Domains&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-a-website-in-2020/googledomain_hua80840076dd6af33bd83daa8ff78b57a_385165_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2812&#34; height=&#34;1530&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Register a domain name on Google Domains
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;June 2020: For a few reasons, one being Google domains does not provide API for dynamic DNS (A records), I&amp;rsquo;ve changed my domain name registrar to 
&lt;a href=&#34;https://www.namecheap.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Namecheap&lt;/a&gt;, my DNS provider to 
&lt;a href=&#34;https://www.cloudflare.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloudflare&lt;/a&gt;].&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-setting-up-hugo&#34;&gt;2. Setting up Hugo&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; is a 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Web_template_system#Static_site_generators&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;static site generator&lt;/a&gt;. There are many other site generators, I picked Hugo for a few reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Open_source&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;open source&lt;/a&gt; and backed by an active developer team and support community.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s a monolithic program with no external dependencies.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s production ready.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In a nutshell, Hugo renders content into HTML files and uploads the files onto your choice of hosting provider. Your content is what you write as content creator. Hugo takes content files written in 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown&lt;/a&gt; (&lt;code&gt;.md&lt;/code&gt;), a format that is intended to be used by technical and non-technical writers alike. Since inception, Markdown has become the &lt;em&gt;de facto&lt;/em&gt; format in content creation and blogging.&lt;/p&gt;
&lt;p&gt;If you need to learn about Markdown syntax, there are good guides such as 
&lt;a href=&#34;https://www.markdownguide.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;installing-hugo&#34;&gt;Installing Hugo&lt;/h3&gt;
&lt;p&gt;On macOS, I recommend using a package manager such as 
&lt;a href=&#34;https://brew.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Homebrew&lt;/a&gt; to manage third-party packages. With Homebrew installed, to install Hugo, just run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew install hugo ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All set. In case you need to check which Hugo version is installed, run &lt;code&gt;hugo version&lt;/code&gt;. On my mac it returns &lt;code&gt;Hugo Static Site Generator v0.70.0/extended darwin/amd64&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For installing Hugo on Windows or Linux, refer to Hugo&amp;rsquo;s documentation.&lt;/p&gt;
&lt;h2 id=&#34;3-use-a-kick-starter-theme&#34;&gt;3. Use a kick-starter theme&lt;/h2&gt;
&lt;p&gt;Hugo has built-in theme mechanism that allows developers to quickly run a theme and see the results. It also provides all the necessary building blocks for user to personalize the theme. There are many themes available on Hugo, for my own website I use Academic Theme. It also comes with a 
&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;academic-kickstart repo&lt;/a&gt; on github for teasers.&lt;/p&gt;
&lt;p&gt;The easy way to get started is to just fork the repo, download the code and run it.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-fork-the-kickstart-into-your-own-repo&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-a-website-in-2020/forkrepo_hub00e36fa908e191c517c523b2f035a7a_337164_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Fork the kickstart into your own repo&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-a-website-in-2020/forkrepo_hub00e36fa908e191c517c523b2f035a7a_337164_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2068&#34; height=&#34;1406&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Fork the kickstart into your own repo
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Download the code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone &amp;lt;replace-it-with-your-own-repo-url&amp;gt; ;
$ cd &amp;lt;your-repo-root-dir&amp;gt; ;
$ git submodule update --init --recursive ; # get the latest Academic theme
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run Hugo to serve the test site:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo server -D ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now visit 
&lt;a href=&#34;http://127.0.0.1:1313/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://127.0.0.1:1313/&lt;/a&gt; on your web browser and you should see the homepage.&lt;/p&gt;
&lt;p&gt;Congrats! You&amp;rsquo;ve got your first Hugo website up and running on your local environment!&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Hugo only binds to local network address for &lt;a href=&#34;https://en.wikipedia.org/wiki/Secure_by_default&#34;&gt;security by default&lt;/a&gt;. If you need to test the site on another computer in your local network, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo server -D --bind=0.0.0.0 ;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;4-deploy-the-new-site-to-firebase&#34;&gt;4. Deploy the new site to Firebase&lt;/h2&gt;
&lt;p&gt;There are many out there: 
&lt;a href=&#34;https://http://firebase.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Firebase&lt;/a&gt;, 
&lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Pages&lt;/a&gt;, 
&lt;a href=&#34;https://www.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify&lt;/a&gt; and 
&lt;a href=&#34;http://aws.amazon.com/amplify/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS Amplify&lt;/a&gt; to name a few. Each one has its own offering. I picked Firebase as my hosting provider because they seem to offer a bit more on their free tier.&lt;/p&gt;
&lt;p&gt;First, install Firebase CLI and (optional) Google Cloud SDK CLI.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Firebase CLI. The recommended way is to run &lt;code&gt;npm i -g firebase-tools ;&lt;/code&gt; See its 
&lt;a href=&#34;https://github.com/firebase/firebase-tools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github repo&lt;/a&gt; for more detail. If you don&amp;rsquo;t have &lt;code&gt;npm&lt;/code&gt; installed yet, run: &lt;code&gt;brew install node ;&lt;/code&gt;. npm will be installed alongside node.js.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google Cloud SDK CLI. Run &lt;code&gt;brew cask install google-cloud-sdk ;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, go to 
&lt;a href=&#34;https://firebase.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Firebase&lt;/a&gt; to set up an account and create a new Firebase project. Make sure it uses the default free tier plan which is called &lt;code&gt;Spark&lt;/code&gt;. Be noted you need to specify GCP resource location under &lt;strong&gt;Project Overview&lt;/strong&gt; in Firebase Dashboard after project is created. The location can not be changed afterwards, so choose something close to you would be wise.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-specify-resource-location-under-project-overview-in-firebase-dashboard&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-a-website-in-2020/gcplocation_hud9b4ca14f10cd788bd7fa102c656d069_282084_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Specify resource location under Project Overview in Firebase Dashboard&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-a-website-in-2020/gcplocation_hud9b4ca14f10cd788bd7fa102c656d069_282084_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2356&#34; height=&#34;1516&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Specify resource location under Project Overview in Firebase Dashboard
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;set-up-service-account-authenication-on-firebase&#34;&gt;Set up service account authenication on Firebase&lt;/h3&gt;
&lt;p&gt;Authenticating with a service account allows you to use Firebase CLI to manage your Firebase project. Google has provided a step by step guide 
&lt;a href=&#34;https://firebase.google.com/docs/app-distribution/authenticate-service-account.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When authentication is set up, go to your project root directory and follow the recorded screens below to initialize firebase and deploy the very first version of your site onto firebase.&lt;/p&gt;
&lt;script id=&#34;asciicast-331048&#34; src=&#34;https://asciinema.org/a/331048.js&#34; async&gt;&lt;/script&gt;

&lt;p&gt;Congratulations! Your website is online! You should find your Hosting URL at the end of the Firebase deploy output, it&amp;rsquo;s typically something like: &lt;code&gt;https://your-project-id.web.app&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-add-your-domain-to-the-new-site&#34;&gt;5. Add your domain to the new site&lt;/h2&gt;
&lt;p&gt;Go to &lt;strong&gt;Hosting&lt;/strong&gt; on Firebase, click on &amp;ldquo;Add custom domain&amp;rdquo;. Typically you wanted to add your root domain name and a sub domain name such as &amp;ldquo;www&amp;rdquo;. For example, I added &amp;ldquo;davidxiao.me&amp;rdquo; for my website and added another entry for redirecting &lt;code&gt;www.davidxiao.me&lt;/code&gt; to &lt;code&gt;davidxiao.me&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When it&amp;rsquo;s complete, you will be able to visit your website by your custom domain regsitered on step 1.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-add-custom-domain-to-your-website&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-a-website-in-2020/customdomain_hu5078b5b3d5bdae7e24676b63cc4c7b97_300325_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Add custom domain to your website&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-a-website-in-2020/customdomain_hu5078b5b3d5bdae7e24676b63cc4c7b97_300325_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2318&#34; height=&#34;1026&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Add custom domain to your website
  &lt;/figcaption&gt;


&lt;/figure&gt;

</description>
    </item>
    
  </channel>
</rss>
