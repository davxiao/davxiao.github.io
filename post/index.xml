<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | DAVID&#39;S GARAGE</title>
    <link>https://davidxiao.me/post/</link>
      <atom:link href="https://davidxiao.me/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â©2020 David Xiao</copyright><lastBuildDate>Fri, 02 Oct 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://davidxiao.me/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Posts</title>
      <link>https://davidxiao.me/post/</link>
    </image>
    
    <item>
      <title>Python3 CheatSheet</title>
      <link>https://davidxiao.me/post/python3-cheatsheet/</link>
      <pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/python3-cheatsheet/</guid>
      <description>&lt;p&gt;TLDR;&lt;/p&gt;
&lt;p&gt;This post is my tiny collection of python3 code snippets. It comes in handy when manipulating string and list.&lt;/p&gt;
&lt;h2 id=&#34;single-or-double-quoted-string&#34;&gt;single or double quoted string&lt;/h2&gt;
&lt;p&gt;In Python, such sequence of characters is included inside single or double quotes. There is no difference in single or double quoted string. Both can be used interchangeably.&lt;/p&gt;
&lt;h2 id=&#34;remove-a-few-elements-from-the-beginning&#34;&gt;Remove a few elements from the beginning&lt;/h2&gt;
&lt;p&gt;Slice out the first 2 elements and return the rest.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;abcdef&amp;#39;&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:]
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;cdef&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;remove-a-few-elements-from-the-end&#34;&gt;Remove a few elements from the end&lt;/h2&gt;
&lt;p&gt;Slice out the last 3 elements and return the rest.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;abcdef&amp;#39;&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s[:&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;abc&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;retrieve-the-first-few-elements-only&#34;&gt;Retrieve the first few elements only&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;abcdef&amp;#39;&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s[:&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;abc&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;retrieve-the-last-few-elements-only&#34;&gt;Retrieve the last few elements only&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;abcdef&amp;#39;&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:]
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;def&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;retrieve-elements-from-the-middle&#34;&gt;Retrieve elements from the middle&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0123456789&amp;#39;&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;]
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;3456&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;remove-single-element-by-zero-index&#34;&gt;Remove single element by zero-index&lt;/h2&gt;
&lt;p&gt;Remove &amp;rsquo;d&amp;rsquo; by its index: 3&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If one-based position is given instead of zero-based index, convert from position to index. e.g. &lt;code&gt;index = position - 1&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;abcdef&amp;#39;&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s[:&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;s[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:]
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;abcef&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;remove-multiple-elements-by-zero-index&#34;&gt;Remove multiple elements by zero-index&lt;/h2&gt;
&lt;p&gt;Remove 4 element by its index starting from index 3&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0123456789&amp;#39;&lt;/span&gt;]
start_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
to_cut &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s[:start_index]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;s[start_index&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;to_cut:]
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;012789&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# zero-index 4 to 7 are removed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;removereplace-element-by-value&#34;&gt;Remove/Replace element by value&lt;/h2&gt;
&lt;p&gt;string version&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;abcdef&amp;#39;&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# replace &amp;#39;c&amp;#39; with &amp;#39;w&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;abwdef&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;list version&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;f&amp;#39;&lt;/span&gt;]
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s
&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:  
  pos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; res&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
  pos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (pos &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
  res&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pop(pos) &lt;span style=&#34;color:#75715e&#34;&gt;#remove &amp;#39;c&amp;#39;&lt;/span&gt;
  res&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insert(pos, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;#replace with &amp;#39;w&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# res = [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;w&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;f&amp;#39;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;convert-string-to-list-character-wise&#34;&gt;convert string to list character-wise&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;abcdef&amp;#39;&lt;/span&gt;
res&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
res[:&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;s
&lt;span style=&#34;color:#75715e&#34;&gt;# res = [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;f&amp;#39;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;convert-list-to-string&#34;&gt;convert list to string&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;f&amp;#39;&lt;/span&gt;]
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(s)
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;abcdef&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;split-string-into-word-list&#34;&gt;Split string into word list&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;welcome  to the  jungle&amp;#39;&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split()
&lt;span style=&#34;color:#75715e&#34;&gt;# res = [&amp;#39;welcome&amp;#39;, &amp;#39;to&amp;#39;, &amp;#39;the&amp;#39;, &amp;#39;jungle&amp;#39;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;join-words-into-a-string-with-whitespace&#34;&gt;Join words into a string with whitespace&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;welcome&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;to&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;the&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jungle&amp;#39;&lt;/span&gt;]
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(s)
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;welcome to the jungle&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;iterate-list-items-to-generate-a-new-list&#34;&gt;iterate list items to generate a new list&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;welcome&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;to&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;the&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jungle&amp;#39;&lt;/span&gt;]
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; s]
&lt;span style=&#34;color:#75715e&#34;&gt;#res = [&amp;#39;welcomewelcome&amp;#39;, &amp;#39;toto&amp;#39;, &amp;#39;thethe&amp;#39;, &amp;#39;junglejungle&amp;#39;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;swap-case-of-a-string-uppercase-to-lowercase-and-vice-versa&#34;&gt;swap case of a string (uppercase to lowercase and vice versa)&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;python provides a string function that does exactly that:&lt;/p&gt;
&lt;p&gt;res = s.swapcase()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;swapcase&lt;/span&gt;(c):
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isupper():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower()
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;islower():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upper()
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; c

s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Welcome   To The Jungle&amp;#39;&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [swapcase(x) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; s]
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(res)
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;wELCOME   tO tHE jUNGLE&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;produce-list-or-string-in-reverse-order&#34;&gt;produce list or string in reverse order&lt;/h2&gt;
&lt;p&gt;both string and list&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;welcome&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;to&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;the&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jungle&amp;#39;&lt;/span&gt;]
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s[::&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;span style=&#34;color:#75715e&#34;&gt;# res = [&amp;#39;jungle&amp;#39;, &amp;#39;the&amp;#39;, &amp;#39;to&amp;#39;, &amp;#39;welcome&amp;#39;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;find-all-occurances-in-a-string&#34;&gt;find all occurances in a string&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;welcome to to the jungle&amp;#39;&lt;/span&gt;
find_s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;to&amp;#39;&lt;/span&gt;
find_len &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(find_s)

pointer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; True:
  index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(find_s,pointer)
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; index &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;found at index &amp;#39;&lt;/span&gt;, index)
  pointer &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; index
  pointer &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; find_len
&lt;span style=&#34;color:#75715e&#34;&gt;# found at index 8&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# found at index 11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;replace-all-occurances-in-a-string&#34;&gt;replace all occurances in a string&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;welcome to to the jungle&amp;#39;&lt;/span&gt;
find_s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;to&amp;#39;&lt;/span&gt;
replace_s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;what&amp;#39;&lt;/span&gt;

res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(find_s, replace_s)
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;welcome what what the jungle&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;remove-duplicate-words-in-a-string&#34;&gt;remove duplicate words in a string&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;unique_list&lt;/span&gt;(l):
  ulist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
  [ulist&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(x) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; l &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; ulist]
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ulist

s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;calvin klein design dress calvin klein&amp;#39;&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(unique_list(s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split()))
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;calvin klein design dress&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;rot13-like-conversion-over-a-string&#34;&gt;ROT13-like conversion over a string&lt;/h2&gt;
&lt;p&gt;Be aware ASCII code can be outside of printable range.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;This is a plaintext message&amp;#39;&lt;/span&gt;
offset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join([chr(ord(c)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;offset) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; s])
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;Uijt!jt!b!qmbjoufyu!nfttbhf&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;use-regex-to-split-complicated-string-into-words&#34;&gt;Use regex to split complicated string into words&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re
s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Words, words, words.   &amp;#39;&lt;/span&gt;
res&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;([,. ]+)&amp;#39;&lt;/span&gt;, s) &lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;(...)&amp;#39; enables the matched separators included in the result list. Remove &amp;#39;()&amp;#39; so that separators will not be included.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# res = [&amp;#39;Words&amp;#39;, &amp;#39;, &amp;#39;, &amp;#39;words&amp;#39;, &amp;#39;, &amp;#39;, &amp;#39;words&amp;#39;, &amp;#39;.   &amp;#39;, &amp;#39;&amp;#39;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;use-regex-to-search-a-pattern&#34;&gt;Use regex to search a pattern&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re
s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Welcome to the jungle...&amp;#39;&lt;/span&gt;
match &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;search(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;to +the +(\w+)&amp;#39;&lt;/span&gt;, s)
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; match:
  res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; match&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;group(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# match &amp;#39;to +the +(\w+)&amp;#39; as a whole&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;to the jungle&amp;#39;&lt;/span&gt;
  res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; match&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;group(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# match &amp;#39;(\w+)&amp;#39; portion&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;jungle&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;no match found&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;count-number-of-occurances-of-substring&#34;&gt;count number of occurances of substring&lt;/h2&gt;
&lt;p&gt;string.count() approach&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jungle and jungle and another jungle...&amp;#39;&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jungle&amp;#39;&lt;/span&gt;))
&lt;span style=&#34;color:#75715e&#34;&gt;# res = 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;regular expression approach&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re
s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Welcome to the jungle. It is a big jungle with many animals. Lion is the king of the jungle.&amp;#39;&lt;/span&gt;
match &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jungle&amp;#39;&lt;/span&gt;, s)
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; match:
  res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(match) &lt;span style=&#34;color:#75715e&#34;&gt;# return a list of string&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;no match found&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;escape-string-into-html-text&#34;&gt;escape string into html text&lt;/h2&gt;
&lt;p&gt;For HTML, it needs to escape the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;&lt;/code&gt; to &lt;code&gt;&amp;amp;lt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; to &lt;code&gt;&amp;amp;amp;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;escape html string &amp;lt;body&amp;gt;&amp;amp;&amp;lt;/body&amp;gt;&amp;#39;&lt;/span&gt;
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;amp;&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;gt;&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;lt;&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# res = &amp;#39;escape html string &amp;amp;lt;body&amp;amp;gt;&amp;amp;amp;&amp;amp;lt;/body&amp;amp;gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;use-global-variable&#34;&gt;Use global variable&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;maxlen &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;wordlength&lt;/span&gt;(x):
  &lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; maxlen &lt;span style=&#34;color:#75715e&#34;&gt;# to access global variable within a function&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(x) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; maxlen:
    maxlen &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(x)

s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;unsafe html string &amp;lt;body&amp;gt;&amp;amp;&amp;lt;/body&amp;gt;&amp;#39;&lt;/span&gt;
words &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split()
[wordlength(x) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; words]
&lt;span style=&#34;color:#75715e&#34;&gt;# maxlen = 14&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Audit User Actions Using CloudTrail - Part 2</title>
      <link>https://davidxiao.me/post/how-to-audit-user-activities-using-aws-cloudtrail-part-2/</link>
      <pubDate>Thu, 17 Sep 2020 23:53:30 -0400</pubDate>
      <guid>https://davidxiao.me/post/how-to-audit-user-activities-using-aws-cloudtrail-part-2/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;When auditing system events or performing an investigation to understand what happened, it is imperative to identify the IAM principal, to establish traceability and timelines.&lt;/p&gt;
&lt;p&gt;In context of AWS CloudTrail, it means looking up events pertaining to the IAM principal and actions in question as well as looking for useful information inside such events.&lt;/p&gt;
&lt;p&gt;When a user assumes role cross-account in a multi-account environment, it can be done two ways: either programatically or via AWS management console.&lt;/p&gt;
&lt;p&gt;Since either way generates different CloudTrail events, I will disuss two examples in this post respectively.&lt;/p&gt;
&lt;h2 id=&#34;assume-role-programmatically-cross-account&#34;&gt;Assume Role Programmatically Cross-Account&lt;/h2&gt;
&lt;h2 id=&#34;assume-role-via-aws-console-cross-account&#34;&gt;Assume Role via AWS Console Cross-Account&lt;/h2&gt;
&lt;p&gt;A typical investigation flow that involves cross-account assumerole goes like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Step 1: Identify an event on CloudTrail that needs investigation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Step 2: Identify the closest &lt;code&gt;AssumeRole&lt;/code&gt; event that happens before the event in question&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Step 3: Locate the closest &lt;code&gt;SwitchRole&lt;/code&gt; event that happens at the same time of &lt;code&gt;AssumeRole&lt;/code&gt;. If found, it indicates the user session was established via AWS Console&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Step 4: If you have access to the Identity Account, locate the AssumeRole&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the following example, we investigate a &amp;ldquo;suspicious&amp;rdquo; &lt;code&gt;CreateUser&lt;/code&gt; event.&lt;/p&gt;
&lt;p&gt;Identity Account: &lt;code&gt;203016562928&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;IAM username: &lt;code&gt;bob@example.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Role Account: &lt;code&gt;776613361644&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Role Name: &lt;code&gt;assume-admin-role-example&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CreateUser&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.05&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userIdentity&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssumedRole&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;principalId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AROAJBP4A5WSXVNY72RLE:bob@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;arn&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:sts::776613361644:assumed-role/assume-admin-role-example/bob@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;accountId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;776613361644&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;accessKeyId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ASIA3JUODO7W6YEVI655&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sessionContext&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sessionIssuer&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Role&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;principalId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AROAJBP4A5WSXVNY72RLE&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;arn&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:iam::776613361644:role/assume-admin-role-example&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;accountId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;776613361644&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;assume-admin-role-example&amp;#34;&lt;/span&gt;
      },
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;webIdFederationData&amp;#34;&lt;/span&gt;: {},
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;attributes&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;mfaAuthenticated&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;creationDate&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-09-17T19:04:10Z&amp;#34;&lt;/span&gt;
      }
    }
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventTime&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-09-17T19:05:08Z&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventSource&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iam.amazonaws.com&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CreateUser&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;awsRegion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;us-east-1&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sourceIPAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;75.15.154.15&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userAgent&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;console.amazonaws.com&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;requestParameters&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test-no-permission&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tags&amp;#34;&lt;/span&gt;: []
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;responseElements&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test-no-permission&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AIDA3JUODO7W7VCWFDJMM&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;arn&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:iam::776613361644:user/test-no-permission&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;createDate&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sep 17, 2020 7:05:08 PM&amp;#34;&lt;/span&gt;
    }
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;requestID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cc58c060-fe96-4678-b0bf-b888f12bf008&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;38d0221b-61e0-47d6-9c45-7eb2dc55125b&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsApiCall&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;recipientAccountId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;776613361644&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;AssumeRole&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.05&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userIdentity&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AWSAccount&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;principalId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AIDAS6RF25DXSM2CA5KAD&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;accountId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;203016562928&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventTime&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-09-17T19:04:10Z&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventSource&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sts.amazonaws.com&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssumeRole&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;awsRegion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;us-east-1&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sourceIPAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AWS Internal&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userAgent&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AWS Internal&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;requestParameters&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;roleArn&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:iam::776613361644:role/assume-admin-role-example&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;roleSessionName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bob@example.com&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;responseElements&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;credentials&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;accessKeyId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ASIA3JUODO7WTIO2PI64&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;expiration&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sep 17, 2020 8:04:10 PM&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sessionToken&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;IQoJb3JpZ2luX2VjEAMaCXVzLWVhc3QtMSJIMEYCIQDsEwOWhE/9cNh+Xpg+V6r8ug3ULRnoOCPNCQhorh13xgIhAIfc+u8ttYNsjLQJRMvo7EnDXMkOAViMFuU7Mma8zjGEKqMCCBwQARoMNzc2NjEzMzYxNjQ1Igyt06eMsyzHkQJRK84qgAIF/jUW99caWE07piwWI2EGTHU2KMx6ioRz3uDbDS24GKy3XvQRalC+5YTZoOQDQvpziRmO33BEzM6Ws5TBTggo/yXGAJRQthB8IqiGkbsClbOG8cYsuhRXK3+yK8OHhCSfr0ehO2SYNiaqEClyT9n8QtEmkQawN56IiOoE9HBzTA7xxYbj7XULL/okog7D3l18NG32rxhHS1ACDN3ro9RGjrPicn9PHFfBqvK+uP3JJQVlcQZu6yGVvtH3rIiYdwAo5bSEc3G9G/LSEiwh47o7NrTOzrRsznARBgefSPs9K3qIgMpZHs3DgqJ0TID1k5y1w4KlPvL36C/+LEmxckNYMKrmjvsFOpwBGDQAVghEOsvntE328Yt2M9Yv0x55cZ5RPJ2pGtQW4geb8+aT2ThZ1zSGwlnvMM8TE+HAwUs0+GQwZbp5UpIiDYLzUeZ0pYWVBHmv/YzN3w0bSKTrC8Jc/0aAaUnxmKMkH5AWO6pBelw8KtVIvd9BwKgBQKVo+tsAVGEdKbVTlwOvLcuhWonCvjoxPCiPgNR05HF8QANbpWet0p+k&amp;#34;&lt;/span&gt;
    },
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;assumedRoleUser&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;assumedRoleId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AROAJBP4A5WSXVNY72RLE:bob@example.com&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;arn&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:sts::776613361644:assumed-role/assume-admin-role-example/bob@example.com&amp;#34;&lt;/span&gt;
    }
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;requestID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fdbb008c-63ce-4207-8171-b041d6f38672&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;40b4d219-0448-436f-9420-cdd3dc654b44&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;resources&amp;#34;&lt;/span&gt;: [
    {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;accountId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;776613361644&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AWS::IAM::Role&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ARN&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:iam::776613361644:role/assume-admin-role-example&amp;#34;&lt;/span&gt;
    }
  ],
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsApiCall&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;recipientAccountId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;776613361644&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sharedEventID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;19ee34b2-52bd-4dfa-8c8e-cf68344062a6&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SwitchRole&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.05&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userIdentity&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssumedRole&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;principalId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AROAJBP4A5WSXVNY72RLE:bob@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;arn&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:sts::776613361644:assumed-role/assume-admin-role-example/bob@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;accountId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;776613361644&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventTime&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-09-17T19:04:10Z&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventSource&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;signin.amazonaws.com&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SwitchRole&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;awsRegion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;us-east-1&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sourceIPAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;75.15.154.15&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userAgent&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;requestParameters&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;responseElements&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;SwitchRole&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Success&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;additionalEventData&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;SwitchFrom&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:iam::203016562928:user/bob@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;RedirectTo&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://console.aws.amazon.com/console/home&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;70627092-0c9c-4163-9975-42ffcc50a37a&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsConsoleSignIn&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;recipientAccountId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;776613361644&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;in the source account look up for AssumeRole around the same time with the same &amp;ldquo;sharedEventID&amp;rdquo;
AssumeRole&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.05&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userIdentity&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;IAMUser&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;principalId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AIDAS6RF25DXSM2CA5KAD&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;arn&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:iam::203016562928:user/bob@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;accountId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;203016562928&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;accessKeyId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ASIAS6RF25DXQR3PH2AX&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bob@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sessionContext&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sessionIssuer&amp;#34;&lt;/span&gt;: {},
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;webIdFederationData&amp;#34;&lt;/span&gt;: {},
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;attributes&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;mfaAuthenticated&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;creationDate&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-09-17T13:58:45Z&amp;#34;&lt;/span&gt;
      }
    },
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;invokedBy&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AWS Internal&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventTime&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-09-17T19:04:10Z&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventSource&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sts.amazonaws.com&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssumeRole&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;awsRegion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;us-east-1&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sourceIPAddress&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AWS Internal&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;userAgent&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AWS Internal&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;requestParameters&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;roleArn&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:iam::776613361644:role/assume-admin-role-example&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;roleSessionName&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bob@example.com&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;responseElements&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;credentials&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;accessKeyId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ASIA3JUODO7WTIO2PI64&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;expiration&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sep 17, 2020 8:04:10 PM&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sessionToken&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;IQoJb3JpZ2luX2VjEAMaCXVzLWVhc3QtMSJIMEYCIQDsEwOWhE/9cNh+Xpg+V6r8ug3ULRnoOCPNCQhorh13xgIhAIfc+u8ttYNsjLQJRMvo7EnDXMkOAViMFuU7Mma8zjGEKqMCCBwQARoMNzc2NjEzMzYxNjQ1Igyt06eMsyzHkQJRK84qgAIF/jUW99caWE07piwWI2EGTHU2KMx6ioRz3uDbDS24GKy3XvQRalC+5YTZoOQDQvpziRmO33BEzM6Ws5TBTggo/yXGAJRQthB8IqiGkbsClbOG8cYsuhRXK3+yK8OHhCSfr0ehO2SYNiaqEClyT9n8QtEmkQawN56IiOoE9HBzTA7xxYbj7XULL/okog7D3l18NG32rxhHS1ACDN3ro9RGjrPicn9PHFfBqvK+uP3JJQVlcQZu6yGVvtH3rIiYdwAo5bSEc3G9G/LSEiwh47o7NrTOzrRsznARBgefSPs9K3qIgMpZHs3DgqJ0TID1k5y1w4KlPvL36C/+LEmxckNYMKrmjvsFOpwBGDQAVghEOsvntE328Yt2M9Yv0x55cZ5RPJ2pGtQW4geb8+aT2ThZ1zSGwlnvMM8TE+HAwUs0+GQwZbp5UpIiDYLzUeZ0pYWVBHmv/YzN3w0bSKTrC8Jc/0aAaUnxmKMkH5AWO6pBelw8KtVIvd9BwKgBQKVo+tsAVGEdKbVTlwOvLcuhWonCvjoxPCiPgNR05HF8QANbpWet0p+k&amp;#34;&lt;/span&gt;
    },
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;assumedRoleUser&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;assumedRoleId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AROAJBP4A5WSXVNY72RLE:bob@example.com&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;arn&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:sts::776613361644:assumed-role/assume-admin-role-example/bob@example.com&amp;#34;&lt;/span&gt;
    }
  },
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;requestID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fdbb008c-63ce-4207-8171-b041d6f38672&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;14fb06e3-5649-4fc3-a274-226ba85c8be6&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;resources&amp;#34;&lt;/span&gt;: [
    {
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;accountId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;776613361644&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AWS::IAM::Role&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ARN&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:iam::776613361644:role/assume-admin-role-example&amp;#34;&lt;/span&gt;
    }
  ],
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eventType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsApiCall&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;recipientAccountId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;203016562928&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;sharedEventID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;19ee34b2-52bd-4dfa-8c8e-cf68344062a6&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://aws.amazon.com/blogs/security/how-to-audit-cross-account-roles-using-aws-cloudtrail-and-amazon-cloudwatch-events/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to Audit Cross-Account Roles Using AWS CloudTrail and Amazon CloudWatch Events&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Audit User Activities Using Aws Cloudtrail Part 1</title>
      <link>https://davidxiao.me/post/how-to-audit-user-activities-using-aws-cloudtrail-part-1/</link>
      <pubDate>Thu, 17 Sep 2020 23:53:23 -0400</pubDate>
      <guid>https://davidxiao.me/post/how-to-audit-user-activities-using-aws-cloudtrail-part-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Extract User Identity from AWS Cloudtrail</title>
      <link>https://davidxiao.me/post/extract-user-identity-from-aws-cloudtrail/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/extract-user-identity-from-aws-cloudtrail/</guid>
      <description>&lt;h2 id=&#34;why-do-i-care&#34;&gt;Why Do I Care&lt;/h2&gt;
&lt;p&gt;Cloudtrail is an essential service in AWS that provides the source of truth on what has happened at API and event level.&lt;/p&gt;
&lt;p&gt;Whether you are troubleshooting or investigating something on AWS, being able to look up user identity across the Cloudtrail event logs can be very helpful.&lt;/p&gt;
&lt;p&gt;By default AWS provides 90 days of event history and you can look up on key fields such as &lt;code&gt;User name&lt;/code&gt;, &lt;code&gt;event time&lt;/code&gt; or &lt;code&gt;event id&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In some cases that&amp;rsquo;s all you need.&lt;/p&gt;
&lt;p&gt;But there are cases where you need to go beyond the 90 days and want to be able to extract user identity information from Cloudtrail logs directly.&lt;/p&gt;
&lt;p&gt;For example, you may wish to write a Lambda function to auto-tag any new EC2 instances with username of the creator, eventid, eventtime when a user is creating new EC2 instances.&lt;/p&gt;
&lt;p&gt;For another example, you may need to search history go past 90 days to look for information like &lt;code&gt;WHO did WHAT and WHEN&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In those cases, understand the JSON structure of Cloudtrail log and specifically the identity related portion comes handy.&lt;/p&gt;
&lt;h2 id=&#34;eventtype&#34;&gt;eventType&lt;/h2&gt;
&lt;p&gt;Cloudtrail records various types of events. In each JSON record, &lt;code&gt;eventType&lt;/code&gt; indicates the type of the event. Each event type has a different JSON structure.&lt;/p&gt;
&lt;p&gt;The following types cover the most cases I&amp;rsquo;m aware of but the list is not intended to be exhaustivee - I will add to it as I learn.&lt;/p&gt;
&lt;h3 id=&#34;awsapicall&#34;&gt;AwsApiCall&lt;/h3&gt;
&lt;p&gt;API call is the most common event type. It represents an API call on an AWS service.&lt;/p&gt;
&lt;p&gt;The great thing about this event type is it can be triggered on CloudWatch event. &lt;em&gt;update: recently CloudWatch Event is renamed to AWS EventBridge&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;awsconsolesignin&#34;&gt;AwsConsoleSignIn&lt;/h3&gt;
&lt;p&gt;This type of event is generated when a user signed in on AWS management console.&lt;/p&gt;
&lt;h3 id=&#34;awsserviceevent&#34;&gt;AwsServiceEvent&lt;/h3&gt;
&lt;p&gt;Services such as AWS SSO generates such type of event when authenticating or federating a user.&lt;/p&gt;
&lt;h2 id=&#34;useridentitytype&#34;&gt;userIdentity.type&lt;/h2&gt;
&lt;p&gt;On each record, the userIdentity block represents the identity information. Various types of userIdentity exists. The most common ones are: &lt;code&gt;IAMUser&lt;/code&gt;, &lt;code&gt;AssumedRole&lt;/code&gt;, &lt;code&gt;AWSService&lt;/code&gt;, &lt;code&gt;SAMLUser&lt;/code&gt; and &lt;code&gt;Unknown&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;iamuser&#34;&gt;IAMUser&lt;/h3&gt;
&lt;p&gt;The below json is extracted from a Cloudtrail event that represents an API call made by an IAM user. User name can be extracted from the &lt;code&gt;userIdentity.userName&lt;/code&gt; field.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventVersion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.05&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userIdentity&amp;#34;: &lt;/span&gt;{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;type&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;IAMUser&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;principalId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AIDAUWQOET4WMTL6OV3SZ&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;arn&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:iam::323225952045:user/tool-poc&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;accountId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;323225952045&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;accessKeyId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AKIAUWQOET4WFCRTJDF5&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userName&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tool-poc&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventID&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1e85a381-9e58-4612-a8d5-abc30ff95f65&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventType&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsApiCall&amp;#34;&lt;/span&gt;,
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In another example, the eventType is different but userIdentity block structure looks similar.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventVersion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.05&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userIdentity&amp;#34;: &lt;/span&gt;{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;type&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;IAMUser&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;principalId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AIDAVBHXPSQ567GPQHO75&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;arn&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:iam::346263884858:user/admin&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;accountId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;346263884858&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userName&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventTime&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-09-12T18:05:04Z&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventSource&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;signin.amazonaws.com&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventName&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ConsoleLogin&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;awsRegion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;us-east-1&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventID&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0b8f0958-8507-4526-b8f5-d56741ccae77&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventType&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsConsoleSignIn&amp;#34;&lt;/span&gt;,
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;assumedrole&#34;&gt;AssumedRole&lt;/h3&gt;
&lt;p&gt;AssumedRole is when an identity assumes an AWS role. The identity could be IAM user in the same account, user from another AWS account, AWS service or a SAML provider.&lt;/p&gt;
&lt;p&gt;Below are a few examples.&lt;/p&gt;
&lt;p&gt;User name: &lt;a href=&#34;mailto:alice@example.com&#34;&gt;alice@example.com&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventVersion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.05&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userIdentity&amp;#34;: &lt;/span&gt;{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;type&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssumedRole&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;principalId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AROAJKUFA6XAMROQBJRNA:alice@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;arn&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:sts::323225952045:assumed-role/assume-admin-role-an-account/alice@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;accountId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;323225952045&amp;#34;&lt;/span&gt;,
    ...
  },
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventID&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e7f3be2f-a81b-4a87-975f-eaac58faca9e&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventType&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsApiCall&amp;#34;&lt;/span&gt;,
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;User name: AutoScaling&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventVersion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.05&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userIdentity&amp;#34;: &lt;/span&gt;{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;type&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssumedRole&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;principalId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AROAJ6TYGYS2TFMOQYEY2:AutoScaling&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;arn&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:sts::323225952045:assumed-role/AWSServiceRoleForAutoScaling/AutoScaling&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;accountId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;323225952045&amp;#34;&lt;/span&gt;,
    ...
  },
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventID&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b67837c3-f90c-49c9-8750-02adef205f64&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventType&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsApiCall&amp;#34;&lt;/span&gt;,
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;User name: &lt;a href=&#34;mailto:bob@example.com&#34;&gt;bob@example.com&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventVersion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.05&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userIdentity&amp;#34;: &lt;/span&gt;{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;type&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssumedRole&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;principalId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AROAI4O72XO7XFD2BHDUA:bob@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;arn&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:sts::323225952045:assumed-role/Sandbox-SSO-PowerUser/bob@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;accountId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;323225952045&amp;#34;&lt;/span&gt;,
    ...
  },
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventID&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5921eee9-7a54-4672-84d5-9a64a81822e4&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventType&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsApiCall&amp;#34;&lt;/span&gt;,
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;User name: &lt;a href=&#34;mailto:test@example.com&#34;&gt;test@example.com&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventVersion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.05&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userIdentity&amp;#34;: &lt;/span&gt;{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;type&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssumedRole&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;principalId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AROAVBHXPSQ577YYUL4QC:test@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;arn&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:sts::346263884858:assumed-role/AWSReservedSSO_AWSAdministratorAccess_33ca3b9a1184d671/test@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;accountId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;346263884858&amp;#34;&lt;/span&gt;,
    ...
  },
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventID&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a1b2f460-0288-4937-b850-12b521a10230&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventType&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsApiCall&amp;#34;&lt;/span&gt;,
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;User name: AssumeRoleSession&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventVersion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.07&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userIdentity&amp;#34;: &lt;/span&gt;{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;type&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssumedRole&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;principalId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AROAIUHYOXFSUYZJIJQUM:AssumeRoleSession&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;arn&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:sts::323225952045:assumed-role/CloudHealth/AssumeRoleSession&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;accountId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;323225952045&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;accessKeyId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ASIAUWQOET4WKMRLT5G6&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;sessionContext&amp;#34;: &lt;/span&gt;{
      &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;sessionIssuer&amp;#34;: &lt;/span&gt;{
        &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;type&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Role&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;principalId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AROAIUHYOXFSUYZJIJQUM&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;arn&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arn:aws:iam::323225952045:role/CloudHealth&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;accountId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;323225952045&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userName&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CloudHealth&amp;#34;&lt;/span&gt;
      },
      &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;attributes&amp;#34;: &lt;/span&gt;{
        &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;creationDate&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-09-15T13:53:25Z&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;mfaAuthenticated&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;
      }
    }
  },
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventTime&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-09-15T14:08:27Z&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventSource&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dynamodb.amazonaws.com&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventName&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ListTables&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;awsRegion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;us-east-1&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;sourceIPAddress&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;34.230.249.2&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventID&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;de0f486d-c1ff-4032-9e86-17ba166f687e&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventType&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsApiCall&amp;#34;&lt;/span&gt;,
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;samluser&#34;&gt;SAMLUser&lt;/h3&gt;
&lt;p&gt;This type of userIdentity are most commonly seen in &lt;code&gt;AssumeRoleWithSAML&lt;/code&gt; event.&lt;/p&gt;
&lt;p&gt;User name: &lt;a href=&#34;mailto:bob@example.com&#34;&gt;bob@example.com&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventVersion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.05&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userIdentity&amp;#34;: &lt;/span&gt;{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;type&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SAMLUser&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;principalId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6DLJuKNu+27u3kwvB9BKCv71kco=:bob@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userName&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bob@example.com&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;identityProvider&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6DLJuKNu+27u3kwvB9BKCv71kco=&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventTime&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-09-08T13:22:03Z&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventSource&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sts.amazonaws.com&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventName&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssumeRoleWithSAML&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;awsRegion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;us-east-1&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;sourceIPAddress&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;72.21.217.22&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventID&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;892c55be-2ab1-4e0e-a80f-5e04f05b625d&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventType&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsApiCall&amp;#34;&lt;/span&gt;,
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;awsservice&#34;&gt;AWSService&lt;/h3&gt;
&lt;p&gt;For this type of userIdentity, it simply does not have a real user. Instead, it&amp;rsquo;s AWS service that is performing an action.&lt;/p&gt;
&lt;p&gt;User name     (blank)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventVersion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.05&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userIdentity&amp;#34;: &lt;/span&gt;{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;type&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AWSService&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;invokedBy&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;elasticbeanstalk.amazonaws.com&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventTime&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-09-15T13:43:16Z&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventSource&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sts.amazonaws.com&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventName&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AssumeRole&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;awsRegion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;us-east-1&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;sourceIPAddress&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;elasticbeanstalk.amazonaws.com&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventID&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;93fd006e-a58f-4304-a9a1-04136ca8a1c3&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventType&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsApiCall&amp;#34;&lt;/span&gt;,
  ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;unknown&#34;&gt;Unknown&lt;/h3&gt;
&lt;p&gt;This is commonly seen in &lt;code&gt;AwsServiceEvent&lt;/code&gt; event. I&amp;rsquo;ve seen AWS SSO produces this type of event but I&amp;rsquo;m not aware of what else AWS services produce it.&lt;/p&gt;
&lt;p&gt;User name: &lt;a href=&#34;mailto:test@example.com&#34;&gt;test@example.com&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventVersion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.05&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userIdentity&amp;#34;: &lt;/span&gt;{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;type&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unknown&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;principalId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;90677f325d-ffd9565d-ac85-4753-8dc6-502c67f1c727&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;accountId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;346263884858&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;userName&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test@example.com&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventTime&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2020-09-15T13:35:04Z&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventSource&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sso.amazonaws.com&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventName&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Authenticate&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;awsRegion&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;us-east-1&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;sourceIPAddress&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;75.15.150.17&amp;#34;&lt;/span&gt;,
  ...
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventID&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;63e0001b-e2fa-49b0-bf29-b7c92d977266&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;eventType&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AwsServiceEvent&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#34;recipientAccountId&amp;#34;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;346263884858&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>One Time Password, HOTP and TOTP</title>
      <link>https://davidxiao.me/post/one-time-password-and-hotp-totp/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/one-time-password-and-hotp-totp/</guid>
      <description>&lt;p&gt;OTP is very common in today&amp;rsquo;s MFA implementation.&lt;/p&gt;
&lt;h2 id=&#34;hotp&#34;&gt;HOTP&lt;/h2&gt;
&lt;p&gt;HOTP stands for HMAC-based One-time Password algorithm. It computes the value with the following inputs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A cryptographic hash method, H (default is SHA-1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A secret key, K, which is an arbitrary byte string, and must remain private&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A counter, C, which counts the number of iterations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A HOTPâvalue length, d (6â10, default is 6, and 6â8 is recommended)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;totp&#34;&gt;TOTP&lt;/h2&gt;
&lt;p&gt;TOTP stands for Time-based One-time Password algorithm (TOTP). It is an extension of HOTP that generates a one-time password (OTP) by instead taking uniqueness from the current time.&lt;/p&gt;
&lt;p&gt;More often than not, time is downsampled into larger durations (e.g., 30 seconds) to allow for validity between the parties.&lt;/p&gt;
&lt;p&gt;To establish TOTP authentication, the authenticatee and authenticator must pre-establish both the HOTP parameters and the following TOTP parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;T0, the Unix time from which to start counting time steps (default is 0)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TX, an interval which will be used to calculate the value of the counter CT (default is 30 seconds)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Threat Modeling and STRIDE Model</title>
      <link>https://davidxiao.me/post/threat-modeling-and-stride-model/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/threat-modeling-and-stride-model/</guid>
      <description>&lt;p&gt;TLDR: This post is my collection of articles related to threat modeling and Microsoft STRIDE threat model.&lt;/p&gt;
&lt;h2 id=&#34;what-is-threat-modeling&#34;&gt;What Is Threat Modeling&lt;/h2&gt;
&lt;p&gt;At a high level, threat modeling is a process of putting the &amp;ldquo;bad guy&amp;rdquo; hat on and conducting an security assessment over a system (such as a website or a mobile app) to identify and prioritize threats and mitigations.&lt;/p&gt;
&lt;p&gt;A more complete definition can be found on 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Threat_model&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are many ways to do threat modeling. Depending on the types of system and workloads that are in scope, the applicable threats can vary a lot.&lt;/p&gt;
&lt;p&gt;For example, threat modeling over a set of highly scalable workloads deployed on MS Azure might start from a threat library that includes portential threats relevant to Azure services in use, while assessing over a simple web application hosted on on-prem data center might start from a different set of threats relevant to host based security and OWASP Top 10.&lt;/p&gt;
&lt;h2 id=&#34;what-is-stride&#34;&gt;What Is STRIDE&lt;/h2&gt;
&lt;p&gt;STRIDE is both a threat model framework and a methodology that developed and adopted in Microsoft over the years.&lt;/p&gt;
&lt;p&gt;STRIDE stands for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Spoofing&lt;/strong&gt;: Impersonating something or someone else.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tampering&lt;/strong&gt;: Modifying data or code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Repudiation&lt;/strong&gt;: Claiming to have not performed an action.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Information Disclosure&lt;/strong&gt;: Exposing information to someone not authorized to see it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Denial of Service&lt;/strong&gt;: Deny or degrade service to users.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Elevation of Privilege&lt;/strong&gt;: Gain capabilities without proper authorization.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Microsoft suggests the following approach when conducting a threat modeling:&lt;/p&gt;















&lt;figure id=&#34;figure-threat-modeling-process&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://docs.microsoft.com/en-us/azure/security/develop/media/threat-modeling-tool-getting-started/sdlapproach.png&#34; data-caption=&#34;Threat Modeling Process&#34;&gt;


  &lt;img src=&#34;https://docs.microsoft.com/en-us/azure/security/develop/media/threat-modeling-tool-getting-started/sdlapproach.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Threat Modeling Process
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h2 id=&#34;most-current-articles&#34;&gt;Most Current Articles&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.microsoft.com/en-us/securityengineering/sdl/threatmodeling&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Threat Modeling&lt;/a&gt;. A high level overview.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/security/develop/threat-modeling-tool&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Azure Threat Modeling Tool&lt;/a&gt;, the framework and the tool. 02/16/2017&lt;/p&gt;
&lt;h2 id=&#34;older-references&#34;&gt;Older References&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.microsoft.com/security/blog/2007/09/11/stride-chart/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;STRIDE chart&lt;/a&gt; 09/11/2007&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://docs.microsoft.com/en-us/archive/blogs/larryosterman/threat-modeling-once-again&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Threat Modeling, once again&lt;/a&gt; 08/30/2007&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://docs.microsoft.com/en-us/archive/blogs/larryosterman/threat-modeling-again-drawing-the-diagram&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Threat Modeling again. Drawing the diagram&lt;/a&gt; 08/31/2007&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://docs.microsoft.com/en-us/archive/blogs/larryosterman/threat-modeling-again-stride&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Threat Modeling Again, STRIDE&lt;/a&gt; 09/04/2007&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://docs.microsoft.com/en-us/archive/blogs/larryosterman/threat-modeling-again-stride-mitigations&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Threat Modeling Again, STRIDE Mitigations&lt;/a&gt; 09/05/2007&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://docs.microsoft.com/en-us/archive/blogs/larryosterman/threat-modeling-again-what-does-stride-have-to-do-with-threat-modeling&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Threat Modeling Again, What does STRIDE have to do with threat modeling&lt;/a&gt; 09/07/2007&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://docs.microsoft.com/en-us/archive/blogs/larryosterman/threat-modeling-again-stride-per-element&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Threat Modeling Again, STRIDE per Element&lt;/a&gt; 09/10/2007&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://docs.microsoft.com/en-us/archive/blogs/larryosterman/threat-modeling-again-threat-modeling-playsound&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Threat Modeling Again, Threat Modeling PlaySound&lt;/a&gt; 09/11/2007&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSH and TLS: Differences and Similarities</title>
      <link>https://davidxiao.me/post/ssh-and-tls/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/ssh-and-tls/</guid>
      <description>&lt;p&gt;Both TLS and SSH are security protocols aimed to solve a specific set of problems.&lt;/p&gt;
&lt;p&gt;TLS is the transport layer of HTTPS protocol while SSH is designed to replace plaintext Telnet protocol.&lt;/p&gt;
&lt;p&gt;Architecture wise, TLS is relatively simple: It has a handshake protocol that does the authentication and agrees on a session key that will be used to encrypt the rest of the communication.&lt;/p&gt;
&lt;p&gt;SSH is more 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Secure_Shell#Architecture&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;complicated&lt;/a&gt; than TLS. It has the following main components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;transport layer;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;user authentication layer;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;connection layer;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Six SSH related RFC are published in relate to SSH: 4251, 4252, 4253, 4254, 425 and 4256.&lt;/p&gt;
&lt;h2 id=&#34;ssh-transport-layer&#34;&gt;SSH Transport Layer&lt;/h2&gt;
&lt;p&gt;Transport layer handles key exchange, server authentication and sets up encryption, compression and integrity verification. It exposes to the upper layer an programmatic interface for sending and receiving plaintext data. The transport layer also arranges for key re-exchange, usually after 1 GB of data has been transferred or after 1 hour has passed, whichever occurs first.&lt;/p&gt;
&lt;h2 id=&#34;user-authentication-layer&#34;&gt;User Authentication Layer&lt;/h2&gt;
&lt;p&gt;It handles client authentication and provides a number of authentication methods. Widely used user-authentication methods include password, publickey, keyboard-interactive, GSSAPI authentication which allows SSH to authenticate using external mechanisms such as Kerberos 5 or NTLM, providing single sign-on capability to SSH sessions.&lt;/p&gt;
&lt;h2 id=&#34;connection-layer&#34;&gt;Connection Layer&lt;/h2&gt;
&lt;p&gt;It defines the concept of channels in SSH. A single SSH connection can host multiple channels simultaneously, each transferring data in both directions. Standard channel types include: shell for terminal shells; SFTP and exec requests (including SCP transfers); direct-tcpip for client-to-server forwarded connections; forwarded-tcpip for server-to-client forwarded connections etc.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TLS Handshake in a Nutshell</title>
      <link>https://davidxiao.me/post/tls-handshake-in-a-nutshell/</link>
      <pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/tls-handshake-in-a-nutshell/</guid>
      <description>&lt;p&gt;At a high level, the following occurs during a TLS handshake:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TD;
    A[Client establishes a TCP connection to the server] --&amp;gt;B[Client sends Hello and list of cipher suites including TLS version] --&amp;gt;C[Server sends Hello, selected suite and certificate] --&amp;gt; D[Client validates certificate]
    D --&amp;gt; E[Client and server starts key exchange process. &amp;lt;br/&amp;gt;RSA and Diffie-Hellman are two common KEP algogirhtms]
    E --&amp;gt; F{Key Exchange Protocol}
    F --&amp;gt;|RSA| G[When both client and server have &amp;lt;br/&amp;gt;the client random, the server random, &amp;lt;br/&amp;gt;and the premaster secret, each side &amp;lt;br/&amp;gt;independently combine these three inputs&amp;lt;br/&amp;gt; to come up with the session keys. &amp;lt;br/&amp;gt;They should both arrive at the same value]
    F --&amp;gt;|DH| H[Both client and server independently &amp;lt;br/&amp;gt;agree on the same secret value using DH algorithm&amp;lt;br/&amp;gt; usually accompanied by RSA signature]
    G --&amp;gt;I[Regardless of which KEP was used, &amp;lt;br/&amp;gt;the rest of the session uses the agreed key, an ephemeral symmetric key, &amp;lt;br/&amp;gt;to encrypt the communication both ways going forward]
    H --&amp;gt;I
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Read more about DH 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange#Cryptographic_explanation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;key-takeaways-about-the-keps&#34;&gt;Key Takeaways About the KEPs&lt;/h2&gt;
&lt;p&gt;ð DH achieves forward secrecy while RSA does not.&lt;/p&gt;
&lt;p&gt;ð DH handshake takes longer than RSA.&lt;/p&gt;
&lt;h2 id=&#34;what-else-you-need-to-know-about-tls&#34;&gt;What Else You Need To Know about TLS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;TLS 1.0 and TLS 1.1 are no longer secure and should be avoided. A best practice is to use TLS version is 1.2 or later at the time of writing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTPS means &amp;ldquo;HTTP over TLS&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both SSH and TLS are purpose-built for secure communication over the Internet, but they are very different in many ways. Check out 
&lt;a href=&#34;https://davidxiao.me/post/ssh-and-tls/&#34;&gt;my another post&lt;/a&gt; where I explain the differences between the two.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;glossary&#34;&gt;Glossary&lt;/h2&gt;
&lt;h3 id=&#34;cipher-suite&#34;&gt;Cipher Suite&lt;/h3&gt;
&lt;p&gt;A cipher suite is a set of algorithms. It usually contain include: a key exchange algorithm, a bulk encryption algorithm, and a message authentication code (MAC) algorithm.&lt;/p&gt;
&lt;p&gt;For example, &lt;code&gt;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256&lt;/code&gt; means:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ECDHE_RSA indicates the key exchange algorithm being used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AES_128_GCM indicates the block cipher being used to encrypt the message stream, together with the block cipher mode of operation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SHA256 indicates the message authentication algorithm which is used to authenticate a message.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ecdhe_rsa-key-exchange-algorithm&#34;&gt;ECDHE_RSA key exchange algorithm&lt;/h3&gt;
&lt;p&gt;In a nutshell, it is ECDHE signed by RSA. Signing defeats man-in-the-middle attack. See detail 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Elliptic-curve_Diffie-Hellman&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A New Pilot in the Making</title>
      <link>https://davidxiao.me/post/pilot-in-the-making/</link>
      <pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/pilot-in-the-making/</guid>
      <description>&lt;h2 id=&#34;primer&#34;&gt;Primer&lt;/h2&gt;
&lt;p&gt;PPL stands for Private Pilot License. In Canada and US, PPL holders can fly an airplane under VFR rules.&lt;/p&gt;
&lt;p&gt;The type of airplane PPL holder can legally fly depends on a few things. Usually one can legally fly small/light airplanes that he is most familiar with, such as Cessna 172 trainer.&lt;/p&gt;
&lt;p&gt;To fly complex, high performance or tailwheel airplanes, one need to obtain respective &lt;code&gt;endorsement&lt;/code&gt; from a certified instructor first.&lt;/p&gt;
&lt;p&gt;For heavier airplane or those equipped with turbojet powerplant, &lt;code&gt;type rating&lt;/code&gt; is required before he can legally fly one.&lt;/p&gt;
&lt;p&gt;Above all, PPL holder needs to stay current and competent before he decides to fly as pilot. The old aviation proverb says, &amp;ldquo;Takeoffs are optional, landings are mandatory&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;regulatory-body-and-laws--regulations&#34;&gt;Regulatory Body and Laws / Regulations&lt;/h2&gt;
&lt;p&gt;In Canada, Transport Canada governs general aviation.&lt;/p&gt;
&lt;p&gt;In US, FAA governs general aviation.&lt;/p&gt;
&lt;p&gt;CARs: Canadian Aviation Regulations. 
&lt;a href=&#34;https://www.tc.gc.ca/en/transport-canada/corporate/acts-regulations/regulations/sor-96-433.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Link on Transport Canada&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;cruising-altitudes&#34;&gt;Cruising Altitudes&lt;/h2&gt;
&lt;p&gt;When flying VFR above 3,000 AGL, remember &amp;ldquo;East is Odd, West is Even Odder&amp;rdquo; on Magnetic Track (not Magnetic Heading)&lt;/p&gt;
&lt;p&gt;602.34 
&lt;a href=&#34;https://laws-lois.justice.gc.ca/eng/regulations/SOR-96-433/FullText.html#h-993895&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cruising Altitudes and Cruising Flight Levels&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;cessna-172m-procedures&#34;&gt;Cessna 172M procedures&lt;/h2&gt;
&lt;h3 id=&#34;precautionary-landing&#34;&gt;Precautionary Landing&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;COWLS check&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Civilization (nearby population)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Obstacle (tower, treeline, powerline)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wind (headwind on final)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Length of the surface (2000 ft would be minimal for C172 considering obstacle clearance, touchdown area and distance required for T/O)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Surface condition (too soft, too much rough, uneven terrain)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;High Pass and Low Pass&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;High pass is completed at circuit altitude: 60kt with flaps 20&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If satisfied with the surface, a low pass is completed at 500 AGL with same speed and configuration&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In both high pass and low pass, the key is to trim for straight and level flight at the correct speed and altitude before abeam threshold.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the same pitch for speed and power for decent technique. For C172, 1900rpm is rule of thumb that can keep 60kt without decending.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the downwind for landing, complete 3P: Prelanding checklist, Pan call, and Pax - passenger briefing)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;enroute-climb&#34;&gt;Enroute Climb&lt;/h3&gt;
&lt;p&gt;Lookout to clear the climb&lt;/p&gt;
&lt;p&gt;APT - Attitude, Power (control the adverse yaw), Trim&lt;/p&gt;
&lt;p&gt;Level off from climbing - The same APT procedure applies.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.studyflight.com/climbing/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Reference&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Climb&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Pitch up and hold the nose on the horizon

Peek at A/S as it decreases to 75

Full Power, Mix Rich. Carb Off. Right rudder when needed

Trim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Level Off from enroute climb&lt;/p&gt;
&lt;p&gt;Starts at 50-100ft below target altitude. Gradually push the nose down to cruise attitude.&lt;/p&gt;
&lt;p&gt;Reduce Power to Cruise setting: 2300rpm. Left Rudder when needed&lt;/p&gt;
&lt;h3 id=&#34;enroute-decent&#34;&gt;Enroute Decent&lt;/h3&gt;
&lt;p&gt;Lookout to clear the decent&lt;/p&gt;
&lt;p&gt;PAT - Power (control the adverse yaw), Attitude, Trim&lt;/p&gt;
&lt;p&gt;Level off from climbing - The same APT applies.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.studyflight.com/descending/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Reference&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;normal-takeoff&#34;&gt;Normal Takeoff&lt;/h3&gt;
&lt;p&gt;Take-off Distance is the lump sum of the following three:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Takeoff roll (ground roll)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lift-off&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Initial Climb until clear 50ft obstacle&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Confirm Wind Input before takeoff. Use Cross-wind Take-off Checklist if needed.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Elevator neutral. Aileron neutral. No flaps.

Full Power. Mix Rich. Carb Cold. Call &amp;#34;Power Set&amp;#34;.

Stay on the centerline, use Right Rudder as needed.

Check and call &amp;#34;Engine gauges green&amp;#34;.

Check and call &amp;#34;Airspeed alive&amp;#34;.

Wings level. Rotate at 55. Right Rudder! Call &amp;#34;Rotate&amp;#34;.

Nose on the Horizon.

Call &amp;#34;____, &amp;lt;callsign&amp;gt; airborne Rwy __&amp;#34;

Climb out at 70. Trim.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;normal-landing&#34;&gt;Normal Landing&lt;/h3&gt;
&lt;p&gt;Important: Set your mindset as &amp;ldquo;keep it flying without landing&amp;rdquo;&lt;/p&gt;
&lt;p&gt;On Down Wind:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Set Power to 2300rpm.

Fly parallel to the landing Runway. Use a Crab angle when needed

Pre-landing checklist.
(Primer locked, Master ON, Magneto on Both, Circuit Breakers
Check, Landing Lights ON, Carb ON, Mix Rich, Engine Green,
Fuel on Both, Doors and Windows Locked, Seatbelts fastened,
Brakes Check)

&amp;#34;Pre-landing Checklist Complete&amp;#34;

&amp;#34;Aiming to touch down at one third of the Rwy&amp;#34;

At 45 degrees beyond threshold (turn early when having a
tailwind), reduce power to 1500rpm, holding the
altitude while making a turn to base.

Call &amp;#34;___, &amp;lt;callsign&amp;gt;, turning base for Rwy __&amp;#34; (optional)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On Base Leg:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Holding the altitude while bleeding off A/S until it reaches
75 knots

Apply flaps 20 (be careful not to ballon up) and trim for 75

Anticipate a 500fpm decent.

Look out for Wind

  *** When having tail winds, turn early and anticipate a bit high

Turning Final and call &amp;#34;___, &amp;lt;callsign&amp;gt;, turning final
on Rwy __. [Tough-n-Go / Full Stop]&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On Final:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Apply full flaps.

A/S 65. Trim.

Line up early on the extended runway centerline.

Fly with a crab angle initially to correct for drift.

Pitch for Airspeed, Power for altitude

Transition to Sideslip.

When getting the vision of &amp;#34;exploding&amp;#34; runway:
  Power to Idle, Hold control column and gradually level off.
  Judge the sink rate using peripheral vision.
  When sinking, do baby steps of &amp;#34;pull-pause-pull&amp;#34; to
  keep the nose slight below horizon.
  When not sinking, hold the control column but no pulling.

When touches down completely:
  Wind input -
    Aileron fully deflected into the wind
    Opposite Rudder to stay on the centerline
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;short-field-landing&#34;&gt;Short Field Landing&lt;/h3&gt;
&lt;p&gt;On Down wind:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;#34;Aiming to touch down at second dash&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On Final:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Approach speed: 60

&amp;#34;There is an 50ft obstacle before threshold&amp;#34;

When obstacle is cleared, power to idle and maintain 60

After touching down, HOLD control full back, RETRACT flaps
and APPLY maximum brake pressure

(from C172 POH)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;soft-field-landing&#34;&gt;Soft Field Landing&lt;/h3&gt;
&lt;p&gt;On Down wind:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;#34;Aiming to touch down at one third of the Rwy&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On Final:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Perform a 60kt approach on final

Power to Idle and enter cruising attitude as normal landing

Immediately after entering cruising attitude but before it
starts sinking:
  Apply small amount of power (100 to 200rpm is enough)

Touching down at a more nose up attitude than normal landing
(textbook says roughtly the attitude of a power-off stall)

During the flaring control column likely has more back travel
than normal landing. It can be close to the belly when
touching down

After touchdown, HOLD control full back and DO NOT apply heavy
brake pressure
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;power-off-stall-entry-and-recovery&#34;&gt;Power-off Stall Entry and Recovery&lt;/h3&gt;
&lt;p&gt;On straight and level flight&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;HASEL CHECK

(Carb ON, Mix Rich)

Power to Idle smoothly while controlling yaw

Hold back control pressure to keep airplane straight and level

Watch A/S decreases into slow flight range.

Call out immiment stall by &amp;#34;STALL&amp;#34; when hearing horn and losing
altitude

Call out &amp;#34;RECOVER&amp;#34; and immediately nose down and apply full power
and control yaw

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;power-on-stall-entry-and-recovery&#34;&gt;Power-on Stall Entry and Recovery&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Entry:

Power to 1700rpm

everything else is similiar to that of a power off stall.

Expect more challenging yaw control due to slipstream and asymmetric thrust

use RUDDER to control yaw

Stall will happen in a more hose-up position

it will be judged if heading can be kept during recovery

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>What I have Been Reading</title>
      <link>https://davidxiao.me/post/what-ive-been-reading/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/what-ive-been-reading/</guid>
      <description>&lt;p&gt;A Conflict of Visions: Ideological Origins of Political Struggles by Thomas Sowell. 2007. 
&lt;a href=&#34;https://www.amazon.com/dp/B06XBV7WHL&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;On Amazon&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Notes from My Journey Learning Javascript and React.js</title>
      <link>https://davidxiao.me/post/notes-from-my-journey-in-reactjs/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/notes-from-my-journey-in-reactjs/</guid>
      <description>&lt;p&gt;TLDR&lt;/p&gt;
&lt;p&gt;As a recovering C++ developer learning React, I put together some notes along the journey.&lt;/p&gt;
&lt;p&gt;Some of the notes and example code were extracted from the materials listed in the reference. I&amp;rsquo;ve tried to include links but feel free to let me know if I missed something.&lt;/p&gt;
&lt;p&gt;Credit goes to the original authors.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://reactjs.org/docs/hello-world.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Step-by-step guide&lt;/a&gt;. Great learning material.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-is-reactjs&#34;&gt;What is React.js&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;React is a declarative, efficient, and flexible JavaScript library for building user interfaces. It has a few building blocks such as elements, components etc.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://reactjs.org/tutorial/tutorial.html#what-is-react&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Reactjs.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;elements&#34;&gt;Elements&lt;/h2&gt;
&lt;p&gt;An element describes what you want to see on the screen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Hello&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;world&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;div1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; /&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;components&#34;&gt;Components&lt;/h2&gt;
&lt;p&gt;Elements such as &lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt; are defined in 
&lt;a href=&#34;https://developer.mozilla.org/docs/Web/HTML/Element/div&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTML5&lt;/a&gt;. React extends it by introducing user-defined elements such as&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Welcome&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sara&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Welcome&lt;/code&gt; is a user-defined component. In React, always start component names with a capital letter to follow the naming convention.&lt;/p&gt;
&lt;h3 id=&#34;why-components&#34;&gt;Why Components&lt;/h3&gt;
&lt;p&gt;Components let you split the UI into independent, reusable pieces, and think about each piece in isolation.&lt;/p&gt;
&lt;p&gt;React component can be declared as a JS function or a JS class. Either way, it accepts input (called âpropsâ) and return React elements describing what should appear on the screen.&lt;/p&gt;
&lt;p&gt;When React sees an element representing a user-defined component, it wraps up JSX attributes and children and passes it as a single object (called &lt;code&gt;props&lt;/code&gt;) to the component implicitly without user code.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;props&lt;/code&gt;stands for properties.&lt;/p&gt;
&lt;h3 id=&#34;react-function&#34;&gt;React function&lt;/h3&gt;
&lt;p&gt;An example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Welcome&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Hello&lt;/span&gt;, {&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;;
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;element&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Welcome&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sara&amp;#34;&lt;/span&gt; /&amp;gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;ReactDOM&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;(
  &lt;span style=&#34;color:#a6e22e&#34;&gt;element&lt;/span&gt;,
  document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;JS code starts at the top of the file. It gets executed from top to bottom. There is no entry point such as what &amp;ldquo;main()&amp;rdquo; has to do in C++.&lt;/p&gt;
&lt;p&gt;What happens in the example above is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;React calls ReactDOM.render() with the &lt;code&gt;&amp;lt;Welcome name=&amp;quot;Sara&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;React sees &lt;code&gt;Welcome&lt;/code&gt; is a user-defined component and calls its corresponding function with &lt;code&gt;{name: &#39;Sara&#39;}&lt;/code&gt; as the props.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Welcome component returns &lt;code&gt;&amp;lt;h1&amp;gt;Hello, Sara&amp;lt;/h1&amp;gt;&lt;/code&gt; as the result.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;React takes care of updating the DOM with &lt;code&gt;&amp;lt;h1&amp;gt;Hello, Sara&amp;lt;/h1&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;react-class&#34;&gt;React class&lt;/h3&gt;
&lt;p&gt;The function component example above can be equivalently rewritten as a class component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Welcome&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;React&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Component&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Hello&lt;/span&gt;, {&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;React class component always &amp;ldquo;inherited&amp;rdquo; from &lt;code&gt;React.Component&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;render()&lt;/code&gt; is the only method that any class &amp;ldquo;inherited&amp;rdquo; from &lt;code&gt;React.Component&lt;/code&gt; must declare.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Think of &lt;code&gt;render()&lt;/code&gt; as a C++ pure virtual function in &lt;code&gt;React.Component&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A derived class would have to implement it before the class can be instantiated.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;calling-a-component-in-another-component&#34;&gt;Calling a component in another component&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s take function component as an example.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TD;
  Comment--&amp;gt;UserInfo--&amp;gt;Avatar;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Comment passed the value of its own &lt;code&gt;props.author&lt;/code&gt; to UserInfo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Comment&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Comment&amp;#34;&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;UserInfo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;author&lt;/span&gt;} /&amp;gt;
      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Comment-text&amp;#34;&lt;/span&gt;&amp;gt;
        {&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;text&lt;/span&gt;}
      &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Comment-date&amp;#34;&lt;/span&gt;&amp;gt;
        {&lt;span style=&#34;color:#a6e22e&#34;&gt;formatDate&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;)}
      &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;UserInfo&amp;rsquo;s props contains a key value pair &amp;ldquo;user=&amp;hellip;&amp;rdquo; received from Comment. The value then gets passed down to Avatar.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserInfo&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UserInfo&amp;#34;&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Avatar&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;} /&amp;gt;
      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UserInfo-name&amp;#34;&lt;/span&gt;&amp;gt;
        {&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;}
      &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;props&#34;&gt;Props&lt;/h2&gt;
&lt;p&gt;Props gets passed to the constructor of class and stored as a class variable. Any method thereafer can reference it using &lt;code&gt;this.props&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;In a class component, think of &lt;code&gt;this.props&lt;/code&gt; as a const reference member variable in C++.&lt;/p&gt;
&lt;p&gt;It is initiated within &lt;code&gt;constructor(props)&lt;/code&gt; where &lt;code&gt;super(props)&lt;/code&gt; is called, the superclass always being &lt;code&gt;React.Component&lt;/code&gt;.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We recommend naming props from the componentâs own point of view rather than the context in which it is being used. The rationale being: It doesnât need to know context such as where it is being rendered.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s a sort of isolation that helps in producing clear code.&lt;/p&gt;
&lt;h3 id=&#34;props-are-immutable&#34;&gt;Props are Immutable&lt;/h3&gt;
&lt;p&gt;Whether you declare a component as a function or a class, it must never modify its own props.&lt;/p&gt;
&lt;p&gt;The following code is valid in javascript syntax but should not be used as React component as it changes its own input:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;withdraw&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;account&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt;) {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;account&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;total&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;amount&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Think of JS function parameter as pass by reference in C++.&lt;/p&gt;
&lt;p&gt;In React, treat &lt;code&gt;props&lt;/code&gt; as if it is const reference in C++.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;class-state-and-lifecycle&#34;&gt;Class, State and Lifecycle&lt;/h2&gt;
&lt;p&gt;One difference between class and function is that class has a special object called &lt;code&gt;this.states&lt;/code&gt;. states acts as a &amp;ldquo;container&amp;rdquo; that preserves variables between calls. In other words, class oject is &amp;ldquo;stateful&amp;rdquo; while function is &amp;ldquo;stateless&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;A class has a few built-in methods including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;constructor()&lt;/code&gt;. See 
&lt;a href=&#34;https://reactjs.org/docs/react-component.html#constructor&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;componentDidMount()&lt;/code&gt;. It is called when the object is rendered to the DOM for the first time. See 
&lt;a href=&#34;https://reactjs.org/docs/react-component.html#componentdidmount&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;componentWillUnmount()&lt;/code&gt;. It is called when the DOM produced by the object is removed. See 
&lt;a href=&#34;https://reactjs.org/docs/react-component.html#componentwillunmount&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A diagram to help understand lifecycle:&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-react-lifecycle-methods-diagram&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/notes-from-my-journey-in-reactjs/lifecycle_hu99707c804d36455f483469849bfa5c31_220852_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;React lifecycle methods diagram&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/notes-from-my-journey-in-reactjs/lifecycle_hu99707c804d36455f483469849bfa5c31_220852_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2278&#34; height=&#34;1072&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    React lifecycle methods diagram
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;For a visual reference, click 
&lt;a href=&#34;https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;state&lt;/code&gt; is a built-in object in class.&lt;/p&gt;
&lt;details&gt;
  &lt;summary&gt;Click to see code example and explainations&lt;/summary&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Clock&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;React&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Component&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;constructor&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;) {
    &lt;span style=&#34;color:#75715e&#34;&gt;// for a React.Component subclass, you should call 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// super(props) before any other statement
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;);
    &lt;span style=&#34;color:#75715e&#34;&gt;// in constructor, you should not call setState(),
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// instead, assign the initial state to this.state directly
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Date()};
  }

  &lt;span style=&#34;color:#a6e22e&#34;&gt;componentDidMount&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;timerID&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setInterval&lt;/span&gt;(
      () =&amp;gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;tick&lt;/span&gt;(),
      &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;
    );
  }

  &lt;span style=&#34;color:#a6e22e&#34;&gt;componentWillUnmount&lt;/span&gt;() {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;clearInterval&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;timerID&lt;/span&gt;);
  }

  &lt;span style=&#34;color:#a6e22e&#34;&gt;tick&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setState&lt;/span&gt;({
      &lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Date()
    });
  }

  &lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;() {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (
      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Hello&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;world&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;It&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is&lt;/span&gt; {&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toLocaleTimeString&lt;/span&gt;()}.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;
      &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
    );
  }
}

&lt;span style=&#34;color:#a6e22e&#34;&gt;ReactDOM&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;(
  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Clock&lt;/span&gt; /&amp;gt;,
  document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;)
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When &lt;code&gt;&amp;lt;Clock /&amp;gt;&lt;/code&gt; is passed to &lt;code&gt;ReactDOM.render()&lt;/code&gt;, React calls the constructor of the Clock component. Since Clock needs to display the current time, it initializes &lt;code&gt;this.state&lt;/code&gt; with an object including the current time. We will later update this state.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;React then calls the Clock componentâs &lt;code&gt;render()&lt;/code&gt; method. This is how React learns what should be displayed on the screen. React then updates the DOM to match the Clockâs render output.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When the Clock output is inserted in the DOM, React calls the &lt;code&gt;componentDidMount()&lt;/code&gt; lifecycle method. Inside it, the Clock component asks the browser to set up a timer to call the componentâs &lt;code&gt;tick()&lt;/code&gt; method once a second.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Every second the browser calls the &lt;code&gt;tick()&lt;/code&gt; method. Inside it, the Clock component schedules a UI update by calling &lt;code&gt;setState()&lt;/code&gt; with an object containing the current time.&lt;/p&gt;
&lt;p&gt;ð Important: Thanks to the &lt;code&gt;setState()&lt;/code&gt; call, React knows the state has changed, and calls the render() method again to learn what should be on the screen. This time, &lt;code&gt;this.state.date&lt;/code&gt; in the &lt;code&gt;render()&lt;/code&gt; method will be different, and so the render output will include the updated time. React updates the DOM accordingly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the Clock component is ever removed from the DOM, React calls the &lt;code&gt;componentWillUnmount()&lt;/code&gt; lifecycle method so the timer is stopped.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/details&gt;
&lt;h2 id=&#34;props-vs-state&#34;&gt;Props vs State&lt;/h2&gt;
&lt;p&gt;This is a growing list.&lt;/p&gt;
&lt;h3 id=&#34;rendered-value&#34;&gt;&amp;ldquo;rendered&amp;rdquo; value&lt;/h3&gt;
&lt;p&gt;In React, both this.props and this.state represent the rendered values, i.e. whatâs currently on the screen.&lt;/p&gt;
&lt;h3 id=&#34;both-props-and-state-can-be-accessed-by-this&#34;&gt;Both props and state can be accessed by &amp;ldquo;this&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;Both &lt;code&gt;this.state&lt;/code&gt; and &lt;code&gt;this.props&lt;/code&gt; are valid within the class scope.&lt;/p&gt;
&lt;h3 id=&#34;props-are-immutable-1&#34;&gt;Props are immutable&lt;/h3&gt;
&lt;p&gt;It is not supposed to be modified in any way. If the component needs to be &amp;ldquo;stateful&amp;rdquo; during the calls, always use state.&lt;/p&gt;
&lt;h3 id=&#34;avoid-copying-props-into-state&#34;&gt;Avoid Copying Props into State&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;constructor&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;) {
&lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;);
&lt;span style=&#34;color:#75715e&#34;&gt;// Don&amp;#39;t do this!
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;color&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;color&lt;/span&gt; };
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;details&gt;
    &lt;summary&gt;This is a common mistake.&lt;/summary&gt;
&lt;p&gt;Itâs unnecessary (use &lt;code&gt;this.props.color&lt;/code&gt; instead) and prone to bugs (updates to the &lt;code&gt;color&lt;/code&gt; prop wonât be reflected in the state).&lt;/p&gt;
&lt;p&gt;Only use it if you want to disregard prop updates. &lt;del&gt;In that case, it makes sense to rename the prop to be called &lt;code&gt;initialColor&lt;/code&gt; or &lt;code&gt;defaultColor&lt;/code&gt;. You can then force a component to âresetâ its internal state by changing its key when necessary.&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;Read 
&lt;a href=&#34;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this post&lt;/a&gt; on avoiding derived state to learn about what to do if you think you need some state to depend on the props.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://reactjs.org/docs/react-component.html#constructor&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Reactjs.org&lt;/a&gt;&lt;/p&gt;
  &lt;/details&gt;
&lt;h3 id=&#34;state-updates-may-be-asynchronous&#34;&gt;State Updates May Be Asynchronous&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;setState()&lt;/code&gt; &amp;ldquo;schedules&amp;rdquo; an update to a componentâs state object. When state changes, the component responds by re-rendering.&lt;/p&gt;
&lt;p&gt;Consider using setState() that accepts a function rather than an object when you need to update state variables.&lt;/p&gt;
&lt;details&gt;
    &lt;summary&gt;React may batch multiple setState() calls into a single update for performance.&lt;/summary&gt;
&lt;p&gt;In React, &lt;code&gt;state&lt;/code&gt; must only be updated by &lt;code&gt;setState()&lt;/code&gt; (only exception is within &lt;code&gt;constructor()&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;This is because manual updates won&amp;rsquo;t trigger UI updates since React doesn&amp;rsquo;t know state has changed.&lt;/p&gt;
&lt;p&gt;To fix it, use a second form of setState() that accepts a &amp;ldquo;updater&amp;rdquo; function object as parameter.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Wrong. counter may not be updated immediately since setState() may be delayed in execution by React
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setState&lt;/span&gt;({
  &lt;span style=&#34;color:#a6e22e&#34;&gt;counter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;counter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;increment&lt;/span&gt;,
});

&lt;span style=&#34;color:#75715e&#34;&gt;// Correct. See explaination above
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setState&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;) =&amp;gt; ({
  &lt;span style=&#34;color:#a6e22e&#34;&gt;counter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;counter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;increment&lt;/span&gt;
}));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In React, &amp;ldquo;updater&amp;rdquo; function takes the following signature:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;) =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;stateChange&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The return value of the &lt;code&gt;updater&lt;/code&gt; is shallowly merged with state. For example, in the following code,  the return value of the function. will be assigned to &lt;code&gt;state.counter&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setState&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;) =&amp;gt; {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {&lt;span style=&#34;color:#a6e22e&#34;&gt;counter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;counter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;step&lt;/span&gt;};
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/details&gt;
&lt;h3 id=&#34;state-holds-all-its-variables&#34;&gt;State holds all its variables&lt;/h3&gt;
&lt;p&gt;React merges the object you provide into the current state.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;constructor&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;);
  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;posts&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [],
    &lt;span style=&#34;color:#a6e22e&#34;&gt;comments&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; []
  };
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When you update &lt;code&gt;comments&lt;/code&gt; with the following code, it leaves &lt;code&gt;this.state.posts&lt;/code&gt; intact, but completely replaces &lt;code&gt;this.state.comments&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;state-is-not-accessible-to-other-components&#34;&gt;State is not accessible to other components&lt;/h3&gt;
&lt;p&gt;State is not accessible to any component other than the one that owns and sets it.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Think of state as a &amp;ldquo;protected&amp;rdquo; member variable encapsulated in React.Component class. It can be accessed by its derived classed but not from outside.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It is the philosophy that neither parent nor child components can know if a certain component is stateful or stateless, and they shouldnât care its implementation details, such as whether it is defined as a function or a class.&lt;/p&gt;
&lt;p&gt;In React apps, whether a component is stateful or stateless is considered an implementation detail of the component that may change over time. You can use stateless components inside stateful components, and vice versa.&lt;/p&gt;
&lt;h3 id=&#34;be-cautious-about-using-this-in-a-class-method&#34;&gt;Be cautious about using &amp;ldquo;this&amp;rdquo; in a class method&lt;/h3&gt;
&lt;p&gt;Unlike in C++ where &lt;code&gt;this&lt;/code&gt; is accessible in any class method including in the constructor, in JS, &lt;code&gt;this&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt; until it is bound.&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s take a look at 
&lt;a href=&#34;https://codepen.io/davxiao/pen/PoZpajQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this example&lt;/a&gt; where I purposely made an attempt to access &lt;code&gt;this&lt;/code&gt; in constructor and get the following error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Uncaught ReferenceError: Must call super constructor in derived class before accessing &#39;this&#39; or returning from derived constructor
 at pen.js:-12
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Second, in member methods &lt;code&gt;this&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt; until it is bound.&lt;/p&gt;
&lt;p&gt;In the following example code, if you forget to bind &lt;code&gt;this.handleClick&lt;/code&gt; and pass it to &lt;code&gt;onClick&lt;/code&gt;, this will be undefined when the function is actually called.&lt;/p&gt;
&lt;p&gt;This is not React-specific; it is a part of 
&lt;a href=&#34;https://www.smashingmagazine.com/2014/01/understanding-javascript-function-prototype-bind/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;how functions work in JavaScript&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Generally, if you refer to a method without () after it, such as onClick={this.handleClick}, you should bind that method.&lt;/p&gt;
&lt;p&gt;There are two (recommended) ways to do it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// bind a method in constructor
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;constructor&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;props&lt;/span&gt;);
  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#a6e22e&#34;&gt;isToggleOn&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;};

  &lt;span style=&#34;color:#75715e&#34;&gt;// This binding is necessary to make `this` work in the callback
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;handleClick&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;handleClick&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;bind&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;);
}

&lt;span style=&#34;color:#75715e&#34;&gt;// or the following way
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;handleClick&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () =&amp;gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;this is:&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In either way, the method is bound and the render() will work:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;() {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;onClick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;handleClick&lt;/span&gt;}&amp;gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;Click&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;me&lt;/span&gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>My Awesome GitHub CheatSheet</title>
      <link>https://davidxiao.me/post/my-awesome-github-cheatsheet/</link>
      <pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/my-awesome-github-cheatsheet/</guid>
      <description>&lt;h2 id=&#34;onboarding-an-existing-project-to-github&#34;&gt;Onboarding an existing project to GitHub&lt;/h2&gt;
&lt;p&gt;If the project is not yet initialized by git, do the following first&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git init ;
&lt;span style=&#34;color:#75715e&#34;&gt;# then create a .gitignore file if needed&lt;/span&gt;
git add . ;
git status -u ; &lt;span style=&#34;color:#75715e&#34;&gt;# will show you all the files to be committed.&lt;/span&gt;
git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;init commit&amp;#34;&lt;/span&gt; ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then connect it to GitHub&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git remote add origin git@github.com:davxiao/my-proj.git ;
git branch --set-upstream-to&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;origin/master master ;
git pull origin master --allow-unrelated-histories ;
git push ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Secure Your HTTPS / SSL / TLS</title>
      <link>https://davidxiao.me/post/secure-your-https-ssl-tls/</link>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/secure-your-https-ssl-tls/</guid>
      <description>&lt;p&gt;If you own a personal site and like to make both your site and visitors secure, read this: Just because you&amp;rsquo;ve enabled HTTPS does not mean it&amp;rsquo;s sound and secure.&lt;/p&gt;
&lt;p&gt;TLS v1.0 and v1.1 are known to be vulnerable and should not be allowed on your site. It is a security best practice to make TLS v1.2 the minimum version allowed on your site.&lt;/p&gt;
&lt;p&gt;For more detail, check out 
&lt;a href=&#34;https://security.googleblog.com/2018/10/modernizing-transport-security.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this post&lt;/a&gt; on Google Security Blog and 
&lt;a href=&#34;https://developers.google.com/web/updates/2020/02/chrome-81-deps-rems#remove_tls_10_and_tls_11&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this post&lt;/a&gt; on Google Chrome Browser Updates.&lt;/p&gt;
&lt;h2 id=&#34;get-a-test-on-your-site&#34;&gt;Get a Test on your Site&lt;/h2&gt;
&lt;p&gt;You can use 
&lt;a href=&#34;https://www.ssllabs.com/ssltest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SSLLabs&lt;/a&gt; to conduct a quick test on your site.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-initial-test-results&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport1_hu4983f44c036a3ff7c6c18a3e1d69f764_337807_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Initial test results&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport1_hu4983f44c036a3ff7c6c18a3e1d69f764_337807_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2230&#34; height=&#34;1516&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Initial test results
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Click on any of the server will give you a brief explaination on the findings.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-see-explaination-here&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport2_hu3b6b7884631da49756285134b8c40644_167991_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;See explaination here&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport2_hu3b6b7884631da49756285134b8c40644_167991_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2236&#34; height=&#34;1184&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    See explaination here
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;I&amp;rsquo;m using Cloudflare as CDN for api.davidxiao.me, so I went on to the Cloudflare portal and updated the &amp;ldquo;Minimum TLS Version&amp;rdquo; to &amp;ldquo;TLS 1.2&amp;rdquo;.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-updating-minimum-tls-version-to-12&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/tls_hu8dc6d5d801d6201179ba0c66dc555f46_76902_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Updating minimum TLS version to 1.2&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/tls_hu8dc6d5d801d6201179ba0c66dc555f46_76902_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2072&#34; height=&#34;806&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Updating minimum TLS version to 1.2
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Then performed a re-scan. It looks much better this time.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-the-new-results&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport3_hu06b46150dc388fe5c30dd7fb161e2545_330910_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;The new results&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport3_hu06b46150dc388fe5c30dd7fb161e2545_330910_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2232&#34; height=&#34;1512&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    The new results
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Hope this is helpful!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dynamic DNS on Cloudflare in 5 Minutes</title>
      <link>https://davidxiao.me/post/dynamic-dns-on-cloudflare/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/dynamic-dns-on-cloudflare/</guid>
      <description>&lt;p&gt;You will need the following to get dynamic DNS working on Cloudflare:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cloudflare as your DNS provider. Migrating from your current DNS provider over to Cloudflare is easy and free whether you are using Godaddy, Namecheap or another one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get API token set up on Cloudflare.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install 
&lt;a href=&#34;https://github.com/danielpigott/cloudflare-cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cloudflare-cli&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;





  
  











&lt;figure id=&#34;figure-cloudflare-api-token&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/dynamic-dns-on-cloudflare/token_hucd115d0ccd33b06635afdf2056bad027_83044_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Cloudflare API token&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/dynamic-dns-on-cloudflare/token_hucd115d0ccd33b06635afdf2056bad027_83044_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2076&#34; height=&#34;548&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Cloudflare API token
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Cloudflare Token is preferred way over API key as token enables added security by allowing to specify access level with permissions and resources.&lt;/p&gt;
&lt;p&gt;Token can be disabled when not in use.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;When those are met, a one-liner like the following will update A record &lt;code&gt;api.davidxiao.me&lt;/code&gt; with your public internet IP.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTE: If you are only using DDNS on Cloudflare and not using its CDN, remove &lt;code&gt;--activate&lt;/code&gt; from the command below.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    $ env CF_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your-own-cloudflare-token-NOT-api-key&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;        CF_API_DOMAIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your-own-TLD-such-as-davidxiao.me&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;        cfcli --activate --type A edit your-subdomain-such-as-api.davidxiao.me &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;curl -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://ip.seeip.org/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, put the code it into crontab will automate the process.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hosting Multiple Apps With Nginx Rewrite Rules</title>
      <link>https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/</guid>
      <description>&lt;p&gt;&lt;span class=&#34;my-dropcap&#34;&gt;S&lt;/span&gt;uppose you plan on hosting multiple API endpoints on one domain, make it &lt;code&gt;api.your-domain.com&lt;/code&gt;, one way to do it is to put each endpoint under a distinctive path, each one would look like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    https://api.your-domain.com/myapp1/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




  
  











&lt;figure id=&#34;figure-tunneling-through-a-nginx-reverse-proxy&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/rewrite_hube19bdb3e2a40b92a2fbfcd1b97b96f6_90876_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Tunneling through a Nginx reverse proxy&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/rewrite_hube19bdb3e2a40b92a2fbfcd1b97b96f6_90876_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;860&#34; height=&#34;984&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Tunneling through a Nginx reverse proxy
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Configure a reverse proxy such as Nginx and set up rewrite rules can get it done quickly.&lt;/p&gt;
&lt;p&gt;See below my example:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/c4f16ebbcdb2ec0701bcaad24640d12c.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Depending on your Linux distro and Nginx, most would need to put the conf file under &lt;code&gt;/etc/nginx/sites-available/&lt;/code&gt; directory and create a symbol link in &lt;code&gt;/etc/nginx/sites-enabled/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Restart nginx service by &lt;code&gt;sudo systemctl restart nginx ;&lt;/code&gt; and it&amp;rsquo;s working!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Integrating a Self-Hosting Commenting System to Your Site</title>
      <link>https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/</guid>
      <description>&lt;p&gt;TLDR;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;ð This post talks about hosting remark42 commenting system as Docker container; Leveraging Cloudflare to protect the remark42 endpoint; Integrating remark42 to a static site which is built on Hugo and academic theme.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Before getting started, take a look at the posts on my blog at 
&lt;a href=&#34;https://davidxiao.me/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;davidxiao.me&lt;/a&gt; and see the way commenting works.&lt;/p&gt;
&lt;h2 id=&#34;what-will-be-covered-in-this-post&#34;&gt;What Will be Covered in This Post&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Deploy remark42 container on Docker&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Protect your remark42 endpoint with Cloudflare CDN&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integrate remark42 to your Hugo site&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-1-deploy-remark42-on-your-host&#34;&gt;Step 1. Deploy Remark42 on your Host&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://remark42.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Remark42&lt;/a&gt; is an open source commenting system that can be deployed as container. It&amp;rsquo;s self-contained with little external dependencies. You can find deployement guide on its Remark42&amp;rsquo;s git repo.&lt;/p&gt;
&lt;p&gt;Feel free to do container your way but if you are interested in what tool I use for docker management, it&amp;rsquo;s 
&lt;a href=&#34;https://github.com/portainer/portainer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Portainer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have the following parameters on my remark42 container:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;REMARK_URL              make sure it has the full path if you are using reverse proxy and rewrites, e.g. https://api.davidxiao.me/remark42
SITE	                site id. For example: davidxiao
SECRET	                required. can be a long and hard-to-guess string
DEBUG	                true
AUTH_GOOGLE_CID         your own value
AUTH_GOOGLE_CSEC        your own value
AUTH_FACEBOOK_CID       your own value
AUTH_FACEBOOK_CSEC      your own value
AUTH_TWITTER_CID        your own value
AUTH_TWITTER_CSEC       your own value
AUTH_GITHUB_CID         your own value
AUTH_GITHUB_CSEC        your own value
ADMIN_SHARED_EMAIL      mail address that will receive notifications such as new comments
NOTIFY_EMAIL_ADMIN	    true
NOTIFY_TYPE	            email
NOTIFY_EMAIL_FROM	    mail address that is in the same domain see Mailgun settings. For example, mine is remark42@davidxiao.me
AUTH_EMAIL_FROM	        your own value
ADMIN_SHARED_ID	        OAuth authenticated user id that has admin access. see https://github.com/umputun/remark42#admin-users
SMTP_HOST	            smtp.mailgun.org
SMTP_PORT	            465
SMTP_TLS	            true
SMTP_USERNAME	        SMTP credential from Mailgun
SMTP_PASSWORD	        your own credential
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For more detail on how to configure email configuration on Remark42, check 
&lt;a href=&#34;https://github.com/umputun/remark42/blob/master/docs/email.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this&lt;/a&gt; out.&lt;/p&gt;
&lt;h3 id=&#34;app-registration-on-the-oauth-providers&#34;&gt;App Registration on the OAuth Providers&lt;/h3&gt;
&lt;p&gt;Before registering you Remark42 app on google, facebook, twitter and github (the 
&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_OAuth_providers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OAuth providers&lt;/a&gt; Remark42 supports), you would need to determine the domain name of your Remark42 api endpoint.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-my-app-registration-page-on-facebook-as-an-example&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/facebook_hu9747433adb773f60d55694d972e5edfc_320108_2000x2000_fit_q90_lanczos.jpg&#34; data-caption=&#34;My app registration page on facebook as an example&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/facebook_hu9747433adb773f60d55694d972e5edfc_320108_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2682&#34; height=&#34;1342&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    My app registration page on facebook as an example
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;DDNS(Dynamic DNS) comes in handy whether you are hosting Remark42 container on cloud such as AWS EC2 or on your homelab, since it allows you to update DNS A records whenever your endpoint IP changes.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Selecting a DDNS provider is important for a few reasons.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Protection of your host&amp;rsquo;s public IP is important for self-hosting web apps. Using DDNS alone means your domain name gets resolved to your public IP.  DDNS + CDN is a better approach.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each OAuth provider has its own rules over whether an given OAuth redirect URI is allowed. For example, facebook does not allow any &lt;code&gt;duckdns.org&lt;/code&gt; as part of redirect URI at time of writing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Service availability concern. Your app will become inaccessible when the DDNS it relies on stops working.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The security posture of the DDNS provider. If the service provider gets compromised, you DDNS domain name can be &amp;ldquo;hijacked&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;My approach:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Set up your public endpoint leveraging a DNS provider such as Cloudflare that has large operating scale, supports DDNS management over API and offers CDN protection over your private endpoint. See 
&lt;a href=&#34;https://davidxiao.me/post/dynamic-dns-on-cloudflare/&#34;&gt;here&lt;/a&gt; for more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On your private endpoint, Use a reverse proxy such as Nginx to rewrite URLs so that multiple apps can be &amp;ldquo;tunneled through&amp;rdquo; a single domain name when needed. See 
&lt;a href=&#34;https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/&#34;&gt;here&lt;/a&gt; for more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use Nginx control policy to restrict access to only Cloudflare IPs and local trusted networks.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-2-protecttunnel-your-endpoint&#34;&gt;Step 2. Protect(tunnel) your Endpoint&lt;/h2&gt;
&lt;p&gt;You need to use Cloudflare as DNS provider before enabling Cloudflare CDN.&lt;/p&gt;
&lt;p&gt;To enable CDN, first go to Cloudflare portal and enable CDN for your remark42 subdomain. In my case it&amp;rsquo;s &lt;code&gt;api.davidxiao.me&lt;/code&gt;.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-enabling-proxy-by-clicking-on-the-proxy-status-icon&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/cdn_hu16e75ec25f0125b652450b7f91b4df42_98125_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Enabling Proxy by clicking on the Proxy status icon&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/cdn_hu16e75ec25f0125b652450b7f91b4df42_98125_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2096&#34; height=&#34;758&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Enabling Proxy by clicking on the Proxy status icon
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Second, modify caching level to &amp;ldquo;No query string&amp;rdquo;. No Query String means it only delivers files from cache when there is no query string. It&amp;rsquo;s the caching behavior we expect for an API endpoint, isn&amp;rsquo;t it?&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-enabling-proxied-by-clicking-on-proxy-status-icon&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/caching_hu1b96b407d2d894423ea0f28de5f404e7_230832_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Enabling Proxied by clicking on Proxy status icon&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/caching_hu1b96b407d2d894423ea0f28de5f404e7_230832_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2126&#34; height=&#34;1352&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Enabling Proxied by clicking on Proxy status icon
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h2 id=&#34;step-21-enable-end-to-end-https-with-cloudflare&#34;&gt;Step 2.1 Enable End-to-end HTTPS with Cloudflare&lt;/h2&gt;
&lt;p&gt;There are several SSL options provided by Cloudflare. Check 
&lt;a href=&#34;https://support.cloudflare.com/hc/en-us/articles/200170416-End-to-end-HTTPS-with-Cloudflare-Part-3-SSL-options#h_845b3d60-9a03-4db0-8de6-20edc5b11057&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this&lt;/a&gt; out to understand the difference.&lt;/p&gt;
&lt;p&gt;Based on my own needs, I&amp;rsquo;ve set up a &amp;ldquo;Full&amp;rdquo; mode in Cloudflare, which ensures a secure connection between both the web browser and Cloudflare and between Cloudflare and my endpoint. This option uses a self-signed certificate at the my endpoint web server.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-enabling-ssl-in-full-mode&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/ssl1_hu718aada9808213d1863d35c04aab4c8f_284146_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Enabling SSL in Full mode&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/ssl1_hu718aada9808213d1863d35c04aab4c8f_284146_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2178&#34; height=&#34;1348&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Enabling SSL in Full mode
  &lt;/figcaption&gt;


&lt;/figure&gt;






  
  











&lt;figure id=&#34;figure-generate-and-download-cloudflares-self-signed-certificates&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/ssl2_hu40bb48d6d163b284766543eb6db65c71_208391_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Generate and download Cloudflare&amp;rsquo;s self-signed certificates&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/ssl2_hu40bb48d6d163b284766543eb6db65c71_208391_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2140&#34; height=&#34;1128&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Generate and download Cloudflare&amp;rsquo;s self-signed certificates
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Save the origin certificat as &lt;code&gt;origin-cert.pem&lt;/code&gt; and the private key as &lt;code&gt;priv.key&lt;/code&gt;, place both files on your host and make sure they both have ownership of &lt;code&gt;root&lt;/code&gt; and have &lt;code&gt;0600&lt;/code&gt; permissions.&lt;/p&gt;
&lt;p&gt;Then you just need to add the file locations in your nginx configuration file. See below my configruation files for example:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/c4f16ebbcdb2ec0701bcaad24640d12c.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;step-3-integrate-remark42-to-your-hugo-site&#34;&gt;Step 3. Integrate Remark42 to Your Hugo Site&lt;/h2&gt;
&lt;p&gt;Override the &lt;code&gt;comments.html&lt;/code&gt; template by:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ cp your-project-root/themes/academic/layouts/partials/comments.html your-project-root/layouts/partials/comments.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and modify the new one as you see fit.&lt;/p&gt;
&lt;p&gt;The following is my modified version of &lt;code&gt;comments.html&lt;/code&gt;.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/2c4373dbbf55823ccb3460cd79b37ee5.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Congrats! You&amp;rsquo;ve got the remark42 commenting system integrated to your Hugo site.&lt;/p&gt;
&lt;p&gt;Comments and Feedback are welcome!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting Up a Mailgun Relay With Postfix</title>
      <link>https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/</link>
      <pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/</guid>
      <description>&lt;p&gt;&lt;span class=&#34;my-dropcap&#34;&gt;M&lt;/span&gt;ailgun is a SaaS that provides email services (both sending and receiving) through both conventional SMTP and RESTful APIs. Find more detail 
&lt;a href=&#34;https://www.mailgun.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this post we will cover the SMTP option as it can be easily integrated with Postfix.&lt;/p&gt;
&lt;h2 id=&#34;whats-required&#34;&gt;What&amp;rsquo;s Required&lt;/h2&gt;
&lt;p&gt;You would need the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A custom domain name, something like &lt;code&gt;yourcompany.com&lt;/code&gt;. You also need to have admin access to your DNS provider.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Mailgun account that allows you to send out mails using your custom domain name. Payment information is required when signing up but no charges will take place at the moment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Admin privilege on a Linux box to set up Postfix server. Outbound internet access is required.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;onboarding-mailgun&#34;&gt;Onboarding Mailgun&lt;/h2&gt;
&lt;p&gt;Make sure you fill out payment information when signing up a new account on Mailgun. There&amp;rsquo;s no charge for small volume mail delivery but it&amp;rsquo;s a Mailgun requirement if you plan on delivering emails with your custom mail address like &lt;code&gt;yourname@yourdomain.com&lt;/code&gt;.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-sign-up-on-mailgun&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/signup_hu867205e8853227b914c922186800e8cc_196605_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Sign up on Mailgun&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/signup_hu867205e8853227b914c922186800e8cc_196605_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1996&#34; height=&#34;1418&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Sign up on Mailgun
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Mailgun provides multiple plans, the &lt;code&gt;Flex Trial&lt;/code&gt; is essentially a pay-as-you-go option that works very well if you don&amp;rsquo;t need to deliver a large volume of emails everyday.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-flex-trial-is-pay-as-you-go&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/plan_hu43c153f088264a5e4e95f76b3262b01c_51876_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Flex Trial is pay-as-you-go&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/plan_hu43c153f088264a5e4e95f76b3262b01c_51876_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;612&#34; height=&#34;514&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Flex Trial is pay-as-you-go
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;dns-settings&#34;&gt;DNS Settings&lt;/h3&gt;
&lt;p&gt;For &lt;strong&gt;Sending&lt;/strong&gt; on Mailgun to work properly, you&amp;rsquo;ve got to update a few DNS settings. First, you&amp;rsquo;d have to add a subdomain to your domain for Mailgun MX. For example, I&amp;rsquo;ve added &lt;code&gt;mg.davidxiao.me&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then you&amp;rsquo;d have to add a few TXT records on DNS.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-adding-txt-records-for-sending-emails&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/dns_hub98922f910e183e0ae40b95602dd546f_374557_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Adding TXT records for sending emails&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/dns_hub98922f910e183e0ae40b95602dd546f_374557_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2878&#34; height=&#34;1304&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Adding TXT records for sending emails
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;what-about-receiving&#34;&gt;What About Receiving&lt;/h3&gt;
&lt;p&gt;Receiving and forwarding incoming mails is a premium feature on Mailgun that requires spending commitments.&lt;/p&gt;
&lt;p&gt;I will write another post talking about using a free-of-charge mail forwading service. Stay tuned.&lt;/p&gt;
&lt;h3 id=&#34;smtp-credential&#34;&gt;SMTP Credential&lt;/h3&gt;
&lt;p&gt;On Mailgun portal, under Settings/Domain Settings and click on SMTP credentials, you will be able to provision new SMTP credentials. The SMTP password will only show one time during user provisioning for security.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-smtp-user-credential-and-smtp-server-detail&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/smtp_hu723168efb4910bc035f808acecc7a6ae_196531_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;SMTP user credential and SMTP server detail&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/smtp_hu723168efb4910bc035f808acecc7a6ae_196531_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2436&#34; height=&#34;1188&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    SMTP user credential and SMTP server detail
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;which-smtp-port-to-use&#34;&gt;Which SMTP Port to Use&lt;/h3&gt;
&lt;p&gt;Short version: It depends on what your client can support.&lt;/p&gt;
&lt;p&gt;Long version:&lt;/p&gt;
&lt;p&gt;Mailgun indicates the following ports are open: 25, 587, and 465 (SSL/TLS)&lt;/p&gt;
&lt;p&gt;Port 25 is not recommended because many enterprise firewalls deny it for security reasons.&lt;/p&gt;
&lt;p&gt;Port 587 is the &lt;code&gt;STARTTLS&lt;/code&gt; version. In short, client first initiates a plain TCP connection. When server advises that it supports STARTTLS, client will respond with STARTTLS and proceed with reconnecting to the same 587 port, this time with TLS handshake. The protocol is such that server will deny TLS handshakes in the first place if client did not complete an initial TCP session and ask for STARTTLS.&lt;/p&gt;
&lt;p&gt;Port 465 is the &amp;ldquo;straight-in&amp;rdquo; SSL/TLS in that it deals with every session as TLS.&lt;/p&gt;
&lt;h2 id=&#34;postfix&#34;&gt;Postfix&lt;/h2&gt;
&lt;p&gt;Postfix can be easily installed on almost any Linux distro. On Ubuntu, run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;sudo apt install libsasl2-modules postfix ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then create a file &lt;code&gt;/etc/postfix/sasl/sasl_passwd_mailgun&lt;/code&gt;. Copy the following line into the file, replacing &lt;code&gt;your-username@mg.yourdomain.com:your-password-here&lt;/code&gt; with your actual SMTP credential.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;[smtp.mailgun.org]:587 your-username@mg.yourdomain.com:your-password-here
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;sudo postmap /etc/postfix/sasl/sasl_passwd_mailgun ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If all went well, you have a new file as &lt;code&gt;/etc/postfix/sasl/sasl_passwd_mailgun.db&lt;/code&gt;. It&amp;rsquo;s what Postfix will be reading from for Mailgun SMTP authentication.&lt;/p&gt;
&lt;h3 id=&#34;secure-the-passwords&#34;&gt;Secure the passwords&lt;/h3&gt;
&lt;p&gt;Both &lt;code&gt;sasl_passwd_mailgun&lt;/code&gt; and &lt;code&gt;sasl_passwd_mailgun.db&lt;/code&gt; contain plain text of your app password, to secure the access, you need to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;sudo chown root:root /etc/postfix/sasl/sasl_passwd_mailgun /etc/postfix/sasl/sasl_passwd_mailgun.db ;
sudo chmod 0600 /etc/postfix/sasl/sasl_passwd_mailgun /etc/postfix/sasl/sasl_passwd_mailgun.db ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;setting-up&#34;&gt;Setting up&lt;/h3&gt;
&lt;p&gt;Postfix&amp;rsquo;s main configuration file is &lt;code&gt;/etc/postfix/main.cf&lt;/code&gt;. See the following my own configuration for your reference.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/ecf545d57925a815b274a981b1775622.js&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;myhostname&lt;/code&gt; indicates the hostname of the Postfix&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mynetworks&lt;/code&gt; is the IP CIDRs that are allowed to relay mails through Postfix. It should only contain your local networks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;smtp_sasl_password_maps&lt;/code&gt; is where the sasl_passwd file is located&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;relayhost&lt;/code&gt; is the server name and port. Replace it with&lt;code&gt;[smtp.mailgun.org]:587&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Edit the values respectively.&lt;/p&gt;
&lt;p&gt;For security reason, do not expose Postfix service to anywhere outside of your trusted networks.&lt;/p&gt;
&lt;p&gt;In the example above, I am allowing anonymous SMTP authentication from mynetworks. The argument can be made that attackers will be after more valuable targets than fiddling with Postfix relay service provided the local network is compromised.&lt;/p&gt;
&lt;h3 id=&#34;testing-and-troubleshooting&#34;&gt;Testing and Troubleshooting&lt;/h3&gt;
&lt;p&gt;When config file is done, reload Postfix configurations without having to restart the service:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;sudo postfix reload ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For SMTP testing, I personally like to use 
&lt;a href=&#34;http://www.jetmore.org/john/code/swaks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;swaks&lt;/a&gt;, a purpose-built Perl script.&lt;/p&gt;
&lt;p&gt;With swaks installed, it will be just a one-liner to send out a testing mail:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./swaks &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --server &amp;lt;your-postfix-server-ip&amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --port &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --from yourname@yourdomain.com &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --to anymailbox@wherever.com &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --h-Subject: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello world&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --body &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Testing some Mailgun awesomness!&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you suspect something went wrong, go check the logs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo tail -f /var/log/syslog ;
&lt;span style=&#34;color:#75715e&#34;&gt;# and&lt;/span&gt;
sudo tail -f /var/log/mail.err ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s it!&lt;/p&gt;
&lt;p&gt;On a side note, there are lots of tweaks can be done on the Postfix end depending on what you need to achieve, but this simple guide should be able to get you started quickly.&lt;/p&gt;
&lt;p&gt;Let me know if you have any questions or comments.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting up a Gmail Relay With Postfix</title>
      <link>https://davidxiao.me/post/setting-up-a-gmail-relay-with-postfix/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/setting-up-a-gmail-relay-with-postfix/</guid>
      <description>&lt;p&gt;You would need the following to set up a gmail relay on Postfix:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;An app password obtained from your Gmail account. It will be effectively your Gmail SMTP password.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Admin privilege on a Linux box to set up Postfix server. Outbound internet access is required.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;google-app-password&#34;&gt;Google App Password&lt;/h2&gt;
&lt;p&gt;App passwords let you sign in to your Google Account from apps that don&amp;rsquo;t support 2-Step Verification. 
&lt;a href=&#34;https://support.google.com/mail/answer/185833&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;This post&lt;/a&gt; from Google explains how to obtain an app password.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-sign-up-for-an-app-password-on-your-google-account&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/setting-up-a-gmail-relay-with-postfix/apppassword_huf0e32fe416f4639906687779d0edc497_215049_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Sign up for an App Password on your Google Account&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/setting-up-a-gmail-relay-with-postfix/apppassword_huf0e32fe416f4639906687779d0edc497_215049_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2382&#34; height=&#34;1482&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Sign up for an App Password on your Google Account
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Essentially, first you need to go to 
&lt;a href=&#34;https://myaccount.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Account&lt;/a&gt; and enable two Factor Authentication. Without enabling 2FA, app password option is disabled on Google.&lt;/p&gt;
&lt;p&gt;Then click on &amp;lsquo;Security&amp;rsquo; from the left, click on &amp;lsquo;App passwords&amp;rsquo; under &amp;lsquo;Signing in to Google&amp;rsquo; and click on &amp;lsquo;Generate&amp;rsquo; button, here you go. Copy the password as we will need it later.&lt;/p&gt;
&lt;p&gt;The rest of the post is using Ubuntu as an example, but the approach should work for most recent Linux distro in general.&lt;/p&gt;
&lt;h2 id=&#34;postfix&#34;&gt;Postfix&lt;/h2&gt;
&lt;p&gt;Postfix can be easily installed on almost any Linux distro. On Ubuntu, run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt install libsasl2-modules postfix ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then create a file &lt;code&gt;/etc/postfix/sasl/sasl_passwd&lt;/code&gt;. Copy the following line into the file, replacing &lt;code&gt;your@gmail.com&lt;/code&gt; with your actual Gmail; &lt;code&gt;abcdefghijk123&lt;/code&gt; with your actual app password.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;[smtp.gmail.com]:587 your@gmail.com:abcdefghijk123
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo postmap /etc/postfix/sasl/sasl_passwd ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If all went well, you have a new file as &lt;code&gt;/etc/postfix/sasl/sasl_passwd.db&lt;/code&gt;. It&amp;rsquo;s what Postfix will be reading from for Gmail SMTP authentication.&lt;/p&gt;
&lt;h3 id=&#34;secure-the-passwords&#34;&gt;Secure the passwords&lt;/h3&gt;
&lt;p&gt;Both &lt;code&gt;sasl_passwd&lt;/code&gt; and &lt;code&gt;sasl_passwd.db&lt;/code&gt; contain plain text of your app password, to secure the access, you need to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo chown root:root /etc/postfix/sasl/sasl_passwd /etc/postfix/sasl/sasl_passwd.db ;
sudo chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;0600&lt;/span&gt; /etc/postfix/sasl/sasl_passwd /etc/postfix/sasl/sasl_passwd.db ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;setting-up&#34;&gt;Setting up&lt;/h3&gt;
&lt;p&gt;Postfix&amp;rsquo;s main configuration file is &lt;code&gt;/etc/postfix/main.cf&lt;/code&gt;. See the following my own configuration for your reference.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/ecf545d57925a815b274a981b1775622.js&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;myhostname&lt;/code&gt; indicates the hostname of the Postfix&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mynetworks&lt;/code&gt; is the IP CIDRs that are allowed to relay mails through Postfix. It should only contain your local networks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;smtp_sasl_password_maps&lt;/code&gt; is where the sasl_passwd file is located&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;relayhost&lt;/code&gt; is the server name and port&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Edit the values respectively.&lt;/p&gt;
&lt;p&gt;For security reason, do not expose Postfix service to anywhere outside of your trusted networks.&lt;/p&gt;
&lt;p&gt;In the example above, I am allowing anonymous SMTP authentication from mynetworks. The argument can be made that attackers will be after more valuable targets than fiddling with Postfix relay service provided the local network is compromised.&lt;/p&gt;
&lt;h3 id=&#34;testing-and-troubleshooting&#34;&gt;Testing and Troubleshooting&lt;/h3&gt;
&lt;p&gt;When config file is done, reload Postfix configurations without having to restart the service:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo postfix reload ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For SMTP testing, I personally like to use 
&lt;a href=&#34;http://www.jetmore.org/john/code/swaks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;swaks&lt;/a&gt;, a purpose-built Perl script.&lt;/p&gt;
&lt;p&gt;With swaks installed, it will be just a one-liner to send out a testing mail:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./swaks &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --server &amp;lt;your-postfix-server-ip&amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --port &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --from yourmail@gmail.com &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --to anymailbox@wherever.com &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --h-Subject: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello world&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --body &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Testing some Mailgun awesomness!&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you suspect something went wrong, go check the logs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo tail -f /var/log/syslog ;
&lt;span style=&#34;color:#75715e&#34;&gt;# and&lt;/span&gt;
sudo tail -f /var/log/mail.err ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s it!&lt;/p&gt;
&lt;p&gt;On a side note, there are lots of tweaks can be done on the Postfix end depending on what you need to achieve, but this simple guide should be able to get you started quickly.&lt;/p&gt;
&lt;p&gt;Let me know if you have any questions or comments. On my post I will be discussing setting up a 
&lt;a href=&#34;https://www.mailgun.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mailgun&lt;/a&gt; relay. Stay tuned!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Homelab Setup From Hardware to KVM - Part 2</title>
      <link>https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-2/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-2/</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Wikipedia:Too_long;_didn%27t_read&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TL;DR&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Install and configure Proxmox as KVM hypervisor.&lt;/em&gt;&lt;/p&gt;















&lt;figure id=&#34;figure-playing-ä¸åå¿xiiihttpsstoresteampoweredcomapp363150romance_of_the_three_kingdoms_xiii-on-win10-guest-through-remote-desktop&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;playsan13.png&#34; data-caption=&#34;Playing ä¸åå¿XIII on Win10 guest through Remote Desktop&#34;&gt;


  &lt;img src=&#34;playsan13.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Playing &lt;a href=&#34;https://store.steampowered.com/app/363150/ROMANCE_OF_THE_THREE_KINGDOMS_XIII/&#34;&gt;ä¸åå¿XIII&lt;/a&gt; on Win10 guest through Remote Desktop
  &lt;/figcaption&gt;


&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>My Homelab Setup From Hardware to KVM - Part 1</title>
      <link>https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/</link>
      <pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Wikipedia:Too_long;_didn%27t_read&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TL;DR&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I plan on writing a few posts about my Homelab project. This is the first one focusing on the hardware spec and networking.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Last year I decided to set up a homelab to learn technologies, to run some services for my own use and more importantly, to have fun.&lt;/p&gt;
&lt;p&gt;There is a budget and a few high level requirements on the infrastructure side I worked on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Be able to run a hypervisor that supports both Linux and Windows virtual machine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One single host. No clustering&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use open source as long as the it&amp;rsquo;s mature enough&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Easy to manage and operate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cost effective&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No dedicated networking hardware&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I plan on writing a few posts with respect to the HW spec I chose, the architecture decisions I made along the way and how I built the whole lab. This is the first post.&lt;/p&gt;
&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;
&lt;style&gt;
table th:nth-of-type(1){
    width: 20%;
}
table th:nth-of-type(2) {
    width: 30%;
}
table th:nth-of-type(3) {
    width: 50%;
}
&lt;/style&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Spec&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;AMD Ryzen 7 3700x&lt;/td&gt;
&lt;td&gt;65W TDP. 8-core, 16-thread, 7nm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Motherboard&lt;/td&gt;
&lt;td&gt;ASUS PRIME X470-PRO&lt;/td&gt;
&lt;td&gt;See my 
&lt;a href=&#34;#motherboard&#34;&gt;notes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Memory&lt;/td&gt;
&lt;td&gt;16gb x2 ECC UDIMM&lt;/td&gt;
&lt;td&gt;Unbuffered ECC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;System Storage&lt;/td&gt;
&lt;td&gt;250GB SATA SSD&lt;/td&gt;
&lt;td&gt;See my 
&lt;a href=&#34;#storage&#34;&gt;notes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data Storage&lt;/td&gt;
&lt;td&gt;4TB HDD&lt;/td&gt;
&lt;td&gt;As temporary data storage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Networking&lt;/td&gt;
&lt;td&gt;On-board Gigabit Ethernet&lt;/td&gt;
&lt;td&gt;See my 
&lt;a href=&#34;#networking&#34;&gt;notes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Graphics Card #1&lt;/td&gt;
&lt;td&gt;Asus GeForce GTX 1660 Super&lt;/td&gt;
&lt;td&gt;model: TUF-GTX1660S-O6G-GAMING See my 
&lt;a href=&#34;#gpu-passthrough&#34;&gt;notes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Graphics Card #2&lt;/td&gt;
&lt;td&gt;MSI GeForce GT 710 1GB&lt;/td&gt;
&lt;td&gt;Fanless design&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Accessories such as case and power supply are not listed but included in the total cost.&lt;/p&gt;
&lt;h2 id=&#34;total-cost&#34;&gt;Total Cost&lt;/h2&gt;
&lt;p&gt;The hardware cost of my homelab is around CA $1,400 when I bought them back in December 2019.&lt;/p&gt;
&lt;h2 id=&#34;motherboard&#34;&gt;Motherboard&lt;/h2&gt;
&lt;p&gt;If you need to use ECC memory, you have to pick a motherboard that support ECC. In consumer grade motherboard market, look no further than ASUS and ASROCK. Those two are know for building consumer grade ECC-enabled motherboards.&lt;/p&gt;
&lt;p&gt;If you need to manage your homelab hypervisor from a remote location, and be able to access it when troubleshooting something low level, e.g. when hypervisor is crashed or configuring BIOS, you have two choices: Phyical Access or IPMI.&lt;/p&gt;
&lt;h3 id=&#34;phyical-access&#34;&gt;Phyical Access&lt;/h3&gt;
&lt;p&gt;It means hook up a display, a keyboard and a mouse to your server and sit in front of it when troubleshooting.&lt;/p&gt;
&lt;h3 id=&#34;ipmi&#34;&gt;IPMI&lt;/h3&gt;
&lt;p&gt;With IPMI, tasks such as power on/off the machine, configure BIOS settings and monitor console output all can be done from remote wia a web portal. Motherboards that support IPMI typically provide a dedicated Ethernet port for IPMI management. Learn more about IPMI 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Intelligent_Platform_Management_Interface&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;ASROCK has some pretty good IPMI-enabled workstartion motherboards. For AMD cpu, take a look at ASROCK X470D4U or x470d4u2-2t with 10G networking. There are also x570d4i-2t to be released in 2020.&lt;/p&gt;
&lt;h2 id=&#34;storage&#34;&gt;Storage&lt;/h2&gt;
&lt;p&gt;To have flexability and speed, I need two kinds of storage. 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Direct-attached_storage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Direct Attached Storage&lt;/a&gt; (DAS) for hypervisor and guest OS images and 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Network-attached_storage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Network Attached Storage&lt;/a&gt; (NAS) for data such as video and photos.&lt;/p&gt;
&lt;h3 id=&#34;ssd-as-das&#34;&gt;SSD as DAS&lt;/h3&gt;
&lt;p&gt;M2.SSD is my primary choice for DAS since it&amp;rsquo;s much faster than SATA SSD both on paper and in reality. So I bought a 
&lt;a href=&#34;https://www.xpg.com/us/feature/637/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;XPG SX8800 PRO&lt;/a&gt; 1TB and installed it on my server.&lt;/p&gt;
&lt;p&gt;Unfortunately my server started freezing up randomly every a few hours to a few days. Troubleshooting proved to be one hell of an effort when my server is in the basement without a dedicated display. I&amp;rsquo;d have to take an external display from my home office down to the basement for troubleshooting. IPMI could have saved my day.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-error-messages-showing-io-error-on-nvme0n1&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/m2ssderror_huf31a9320da0c1a5686802b65e9bd1936_7726651_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Error messages showing I/O error on nvme0n1&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/m2ssderror_huf31a9320da0c1a5686802b65e9bd1936_7726651_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2624&#34; height=&#34;1520&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Error messages showing I/O error on nvme0n1
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;It took some time to reproduce the problem and troubleshoot the issues. Finally I was able to conclude that the controller chip that XPG SX8800 PRO uses may have compatibility issue with PRIME X470-PRO. After I replaced the M2.SSD with an old SATA SSD that I have, the server runs smoothly without any issues.&lt;/p&gt;
&lt;h3 id=&#34;synology-nas&#34;&gt;Synology NAS&lt;/h3&gt;
&lt;p&gt;I have a Synology DS416play. It&amp;rsquo;s a little home NAS with 4 bays and 1GB memory. I&amp;rsquo;ve since upgraded the memory to 8G and have it fitted with 4x10G HDD. In terms of usable space it has around 27T with one disk fault tolerance which is more than enough for me.&lt;/p&gt;
&lt;p&gt;The downside of this NAS is it only has Gigabit Ethernet. If you think 10G is appealing, I&amp;rsquo;m totally with you. QNAP is offering a number of 10G ready NAS. Check it out 
&lt;a href=&#34;https://www.qnap.com/solution/10gbe-ready/en-us/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; for detail.&lt;/p&gt;
&lt;h2 id=&#34;networking&#34;&gt;Networking&lt;/h2&gt;
&lt;p&gt;My home network topology is rather simple. Both homlab server and NAS are connected to the internet router. The router provides basic functionalities such as IP management and port mapping.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-home-network-diagram&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/network_hudc03804a00527dca3247c3973ee82eb5_250291_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Home Network Diagram&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/network_hudc03804a00527dca3247c3973ee82eb5_250291_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1216&#34; height=&#34;1069&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Home Network Diagram
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Given my home network cables are all Cat5 supporting up to 1 Gigabit, I have to stay with 1G network and the on-board Gigabit Ethernet works well in my setup.&lt;/p&gt;
&lt;p&gt;If you are considering 10G, you would need to make sure all critial devices on the network (e.g. router, NAS, Wifi etc.) are capable of dealing with the throughput, since any performance bottleneck can be the low watermark that undermines the overall network performance.&lt;/p&gt;
&lt;h2 id=&#34;gpu-passthrough&#34;&gt;GPU Passthrough&lt;/h2&gt;
&lt;p&gt;The KVM hypervisor supports passing graphics card(s) onto dedicated guest OS.&lt;/p&gt;
&lt;p&gt;On my setup, GTX1660 is the primary card for tasks such as streaming encoding/decoding whereas the GT710 is pass-through to a Win10 guest. This setup allows me to play a few not-so-demanding games on the Win10 through remote desktop.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-playing-ä¸åå¿xiiihttpsstoresteampoweredcomapp363150romance_of_the_three_kingdoms_xiii-on-win10-guest-through-remote-desktop&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/playsan13_hu0db209418eed430cc60aa3a34435c293_6154409_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Playing ä¸åå¿XIII on Win10 guest through Remote Desktop&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/playsan13_hu0db209418eed430cc60aa3a34435c293_6154409_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2732&#34; height=&#34;1746&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Playing &lt;a href=&#34;https://store.steampowered.com/app/363150/ROMANCE_OF_THE_THREE_KINGDOMS_XIII/&#34;&gt;ä¸åå¿XIII&lt;/a&gt; on Win10 guest through Remote Desktop
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;I will discuss more on GPU passthrough in the next post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building Your First App on Google Home in 10 minutes</title>
      <link>https://davidxiao.me/post/building-your-first-app-on-google-home/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/building-your-first-app-on-google-home/</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Wikipedia:Too_long;_didn%27t_read&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TL;DR&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post will show you how to build and deploy a voice-activated app on Google Cloud in 10 minutes. It responds to your commands and plays personalized music if you ask! Not a bad way to play on someone&amp;rsquo;s birthday, eh?&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;create-a-new-project-on-google-actions-console&#34;&gt;Create a New Project on Google Actions Console&lt;/h2&gt;
&lt;p&gt;The app is built on Google Cloud using Google Actions and Dialogflow. If you don&amp;rsquo;t have a Google Actions account, click 
&lt;a href=&#34;https://console.actions.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; to create a new one. It&amp;rsquo;s free.&lt;/p&gt;
&lt;p&gt;When the account is created, go ahead and create a new project. Google Actions allows you to add Actions support to existing GCP projects, but we will create a new one to keep it simple.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-create-a-new-project&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/newproject_hu743e9e3ec8e102a213e0e2f07b641661_182403_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Create a new project&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/newproject_hu743e9e3ec8e102a213e0e2f07b641661_182403_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2392&#34; height=&#34;1042&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Create a new project
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h2 id=&#34;specify-a-catchy-name-for-your-app&#34;&gt;Specify a Catchy Name for Your App&lt;/h2&gt;
&lt;p&gt;You need to specify a catchy name for the app so that every time when you say those &amp;ldquo;gateway words&amp;rdquo; to the Google Home device, it will activate the app for you.&lt;/p&gt;
&lt;p&gt;Go to the project dashboard, click on &amp;ldquo;Quick setup&amp;rdquo; followed by &amp;ldquo;Decide how your action is invoked&amp;rdquo; and put the app name here. It may reject the name if it&amp;rsquo;s too common or ambiguous, e.g. &amp;ldquo;Hello&amp;rdquo; is probably not a good choice here.&lt;/p&gt;
&lt;p&gt;For example, my app is called &amp;ldquo;Hello Jukebox&amp;rdquo;.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-specify-a-catchy-name-for-your-app&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/hellojukebox_hu00583f257256ac5d2540f09ced6a2a1c_203654_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Specify a catchy name for your app&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/hellojukebox_hu00583f257256ac5d2540f09ced6a2a1c_203654_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2398&#34; height=&#34;1514&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Specify a catchy name for your app
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h2 id=&#34;add-actions-to-your-app&#34;&gt;Add Actions to Your App&lt;/h2&gt;
&lt;p&gt;There is no secret sauce. An app is only as smart as what it&amp;rsquo;s taught. This app will respond to voice commands and act accordingly based on the intents developeed for it. &amp;ldquo;Intent&amp;rdquo; is a Google term referring to a combination of voice command and its response.&lt;/p&gt;
&lt;p&gt;Within one app, developer can create as many intents as they want as long as no intent is stepping on one another&amp;rsquo;s toes. For example, trying to create two separate intents both responding to the same command &amp;ldquo;what is my favoriate color&amp;rdquo; would be confusing to begin with.&lt;/p&gt;
&lt;p&gt;Within an intent, developer can decide on the kind of response it needs to give: it can be as simple as having Google Home say something or be more complicated with custom logic.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-add-a-new-action-to-your-app&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/addaction_hu5a34da406b359feaea235349c9d3070a_89800_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Add a new Action to your app&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/addaction_hu5a34da406b359feaea235349c9d3070a_89800_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1962&#34; height=&#34;800&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Add a new Action to your app
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;use-case-1-simple-voice-commands-and-text-responses&#34;&gt;Use Case 1: Simple Voice Commands and Text Responses&lt;/h3&gt;
&lt;p&gt;Scroll down the Actions dashboard until the Fulfillment section, click on &amp;ldquo;Edit in Dialogflow&amp;rdquo; and click on the Intents. Start adding intents.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-edit-in-dialogflow&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/editdialogflow_hu0a5e6ae8e7a5a9d21267103e72f6723b_121154_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Edit in Dialogflow&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/editdialogflow_hu0a5e6ae8e7a5a9d21267103e72f6723b_121154_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2290&#34; height=&#34;1378&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Edit in Dialogflow
  &lt;/figcaption&gt;


&lt;/figure&gt;






  
  











&lt;figure id=&#34;figure-add-new-intent&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/addintents_hu5caf5e9408c46163cab731953699f0c0_150879_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Add new Intent&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/addintents_hu5caf5e9408c46163cab731953699f0c0_150879_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2126&#34; height=&#34;848&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Add new Intent
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;For example, you may want to create an intent called &amp;ldquo;special-intent&amp;rdquo;, add &amp;ldquo;Do you know why today is so special&amp;rdquo; as voice command and add &amp;ldquo;Of course I know, David&amp;rdquo; as text responses to the intent. Those are what you would say to the app and what the app will say back respectively.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-a-list-of-intents-i-added&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/addnewintent_hu4379dc9c90fb0c256e025ee19dca75f6_98047_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;A list of intents I added&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/addnewintent_hu4379dc9c90fb0c256e025ee19dca75f6_98047_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1568&#34; height=&#34;866&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    A list of intents I added
  &lt;/figcaption&gt;


&lt;/figure&gt;






  
  











&lt;figure id=&#34;figure-text-responses&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/response_hu977f95ac59ecb13bada691ae3f06f746_90426_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Text Responses&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/response_hu977f95ac59ecb13bada691ae3f06f746_90426_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1570&#34; height=&#34;732&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Text Responses
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;use-case-2-implement-custom-logic-using-cloud-function&#34;&gt;Use Case 2: Implement custom logic using Cloud Function&lt;/h3&gt;
&lt;p&gt;The second use case is enabling webhook in an intent and developing a handler for it.&lt;/p&gt;
&lt;p&gt;This approach allows you to implement custom logic for an intent. GCP supports either running your custom code on a 
&lt;a href=&#34;https://cloud.google.com/functions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud Function&lt;/a&gt; or calling an external web service you specify.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-text-responses&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/inline_hu7df3c6f58ea55e824903f43390cf3d99_512086_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Text Responses&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/inline_hu7df3c6f58ea55e824903f43390cf3d99_512086_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2144&#34; height=&#34;1514&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Text Responses
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;I will use the Cloud Function way for this example since we don&amp;rsquo;t need to worry about resource or storage thanks to its serverless nature.&lt;/p&gt;
&lt;p&gt;First, you need to enable &amp;ldquo;Webhook&amp;rdquo; on the intent that needs to have custom logic. Second, click on the Fulfillment on the left navbar and enable Inline editor. Last, copy and paste the following code example and click on save. That&amp;rsquo;s it.&lt;/p&gt;
&lt;p&gt;The code example will first say something then play an audio clip. If you need to play something else, e.g. a peronalized audio clip, you can replace the URL with your own thing, but then you would have to deal with access control.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/8d0d35d3c88078e5fc96114d02c8ee6b.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;testing-your-new-app-on-simulator&#34;&gt;Testing Your New App on Simulator&lt;/h3&gt;
&lt;p&gt;Click on &amp;ldquo;Google Assistant&amp;rdquo; on the right bar to open the Simulator on Google Actions. From there you can tinker with your app until you&amp;rsquo;re satisfied with it :-)&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-text-responses&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/test_hu4c7ce97dca92ec99c2a240b81e7d53b6_267148_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Text Responses&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/test_hu4c7ce97dca92ec99c2a240b81e7d53b6_267148_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2854&#34; height=&#34;1422&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Text Responses
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;deploying-to-your-google-home-device&#34;&gt;Deploying to your Google Home Device&lt;/h3&gt;
&lt;p&gt;Making your app available on 
&lt;a href=&#34;https://assistant.google.com/explore&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Assistant Actions Portal&lt;/a&gt; sounds like a great idea, however the releasing process could take some time as Google needs to review and approve your app first before it can be released. Since my post promised you a 10-minute ride, let&amp;rsquo;s rolling to get the freshly baked app onto your own Google Home device.&lt;/p&gt;
&lt;p&gt;On Actions console, click on &amp;ldquo;Deploy&amp;rdquo;, choose &amp;ldquo;Alpha&amp;rdquo;, click on &amp;ldquo;Manage Alpha Testers&amp;rdquo;, and add your own Google Home device account email here. You can then switch to your Google Home account and use the opt-in link received on the invitation email to accept the invite.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-make-an-alpha-deployment&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/deploy_hub0f70cc191eb1433db74b863010b6132_192039_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Make an Alpha Deployment&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/deploy_hub0f70cc191eb1433db74b863010b6132_192039_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2290&#34; height=&#34;1364&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Make an Alpha Deployment
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;When it&amp;rsquo;s ready, click on &amp;ldquo;Create a release&amp;rdquo;, and wait it to complete. It can take a few minutes.&lt;/p&gt;
&lt;p&gt;Congrats! You&amp;rsquo;ve just developed and deployed your first Google Home app in 10 minutes! Try say to your Google Home: &amp;ldquo;Hey Google, Talk to your_app_name_here&amp;rdquo; and see what happens :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cross Compile MMDVMHost on Ubuntu</title>
      <link>https://davidxiao.me/post/cross-compile-mmdvmhost-on-ubuntu/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/cross-compile-mmdvmhost-on-ubuntu/</guid>
      <description>&lt;p&gt;A little teaser here: Raspberry Pi is not really ediable :-)&lt;/p&gt;
&lt;p&gt;So I have a 
&lt;a href=&#34;https://www.raspberrypi.org/blog/raspberry-pi-zero-w-joins-family/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Raspberry Pi Zero W&lt;/a&gt; for about one year now.&lt;/p&gt;
&lt;p&gt;It runs a few software. One of them is called Pi-Star. It&amp;rsquo;s an open source toolkit for digial voice over 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Amateur_radio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;amateur radio&lt;/a&gt;. Find more detail about Pi-Star 
&lt;a href=&#34;https://www.pistar.uk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Amateur radio is one of my hobbies. Figuring out how 
&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_amateur_radio_modes#Digital_voice&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;digital voice modes&lt;/a&gt; work in the amateur radio world took some time for me but it was rewarding. At the end of the day, listening to hams talking about their passions from all over the world on my little handheld radio feels amazing.&lt;/p&gt;
&lt;p&gt;Pi-Star works very well in my setup, so when I found out Pi-Star does not display my public IP address on OLED, I decided to write some code for it.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s what it looks like.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-oled-display-showing-my-public-ip&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/cross-compile-mmdvmhost-on-ubuntu/pistar-inetip_hu15853694f5406fd361772a3bb29a5fde_1182819_2000x2000_fit_q90_lanczos.jpg&#34; data-caption=&#34;OLED display showing my Public IP&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/cross-compile-mmdvmhost-on-ubuntu/pistar-inetip_hu15853694f5406fd361772a3bb29a5fde_1182819_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2842&#34; height=&#34;2131&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    OLED display showing my Public IP
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;1-download-the-toolchain-with-extra-libs-and-headers&#34;&gt;1. Download the Toolchain with Extra Libs and Headers&lt;/h2&gt;
&lt;p&gt;I use Ubuntu 20.04 on my homelab as cross compiling platform, but any recent Linux distro should work.&lt;/p&gt;
&lt;p&gt;My toolchain is a fork from the original toolchain with extra libs and headers for compiling MMDVMHost.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ~/code
$ git clone https://github.com/davxiao/tools.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;2-code-is-the-easy-part-3&#34;&gt;2. Code is the Easy Part &amp;lt;3&lt;/h2&gt;
&lt;p&gt;Pi-Star consists of a few components including a PHP frontend and a few programs as backend for data exchange over various digital voice networks.&lt;/p&gt;
&lt;p&gt;MMDVMHost is the program that interfaces to the digital voice modem (MMDVM) on one side, and a suitable network on the other. It&amp;rsquo;s written in standard C++ with dependencies to external libs such as 
&lt;a href=&#34;https://github.com/hallard/ArduiPi_OLED&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ArduiPi_OLED&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For my purpose, I added some code in &lt;code&gt;CNetworkinfo&lt;/code&gt; class and &lt;code&gt;COLED&lt;/code&gt; class. If you don&amp;rsquo;t know much about C++, no worries, just download all source code from my github repo.&lt;/p&gt;
&lt;p&gt;Download my repo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ~/code
$ git clone https://github.com/davxiao/MMDVMHost.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;3-prep-for-the-cross-compilation&#34;&gt;3. Prep for the Cross Compilation&lt;/h2&gt;
&lt;p&gt;In &lt;code&gt;MMDVMHost/cmake/CrossCompile.cmake&lt;/code&gt;, you wanted to update toolchain paths so that CMake will be able to generate correct Makefile afterwards.&lt;/p&gt;
&lt;p&gt;When it&amp;rsquo;s done, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd MMDVMHost/cmake
$ cmake ../ -DCMAKE_TOOLCHAIN_FILE=./CrossCompile.cmake
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you see warnings like this, try delete &lt;code&gt;CMakeCache.txt&lt;/code&gt; and run the cmake command again.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;CMake Warning:
  Manually-specified variables were not used by the project:
    CMAKE_TOOLCHAIN_FILE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4-last-step&#34;&gt;4. Last Step&lt;/h2&gt;
&lt;p&gt;When Cmake is done, a &lt;code&gt;Makefile&lt;/code&gt; was generated under the same directory. Run the following in the same directory:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When the complication is complete, you should see &lt;code&gt;MMDVMHost&lt;/code&gt; in the &lt;code&gt;cmake/&lt;/code&gt; directory. You may wish to run &lt;code&gt;file ./MMDVMHost&lt;/code&gt; to confirm the target platform is ARM as opposed to amd64. Here&amp;rsquo;s my output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt; ./MMDVMHost: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), 
 dynamically linked, interpreter /lib/ld-linux-armhf.so.3, for GNU/Linux 2.6.32,
 with debug_info, not stripped
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Congrats! You&amp;rsquo;ve built MMDVMHost using cross compilcation.&lt;/p&gt;
&lt;h2 id=&#34;deployment&#34;&gt;Deployment&lt;/h2&gt;
&lt;p&gt;You can skip this section if you have set up your own deployment pipeline.&lt;/p&gt;
&lt;p&gt;On my homelab, I mount the same Samba share folder on both the Ubuntu and the Pi, then just copy the MMDVMHost over. Before replacing the MMDVMHost, you need to confirm the SD card is mounted in R/W mode and MMDVMHost service is stopped. Make a backup of the original MMDVMHost is also a good idea.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ rpi-rw ; 
$ sudo systemctl stop mmdvmhost ; 
$ sudo systemctl stop mmdvmhost.timer ;
$ sudo cp ~/nas-dir/MMDVMHost.build /usr/local/bin/MMDVMHost ;
$ sudo systemctl start mmdvmhost ;
$ sudo systemctl start mmdvmhost.timer ;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;If you experience &lt;code&gt;mount error(115): Operation now in progress&lt;/code&gt; when mounting CIFS on Pi, it might be caused by the iptable rules set by Pi-Star.&lt;/p&gt;
&lt;p&gt;To troubleshooting the issue, run the following commands on Pi-Star and see if mount works.&lt;/p&gt;
&lt;p&gt;No worries, the following changes do not persist between restarts.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;    sudo iptables -P INPUT ACCEPT; 
    sudo iptables -P FORWARD ACCEPT; 
    sudo iptables -P OUTPUT ACCEPT; 
    sudo iptables -F; 
    sudo iptables -X ; 
    sudo iptables -nvL ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building a website in 2020</title>
      <link>https://davidxiao.me/post/building-a-website-in-2020/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/building-a-website-in-2020/</guid>
      <description>&lt;p&gt;In this post I will talk about how I built this website from the ground up using Hugo as site generator and Firebase as hosting provider. I wish you&amp;rsquo;ll find it helpful.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;span class=&#34;my-dropcap&#34;&gt;W&lt;/span&gt;eb development has come a long way. Back in the late 90&amp;rsquo;s when I first came across Internet, anyone who knows anything about 
&lt;a href=&#34;https://en.wikipedia.org/wiki/HTML&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTML&lt;/a&gt; would be considered very technical.&lt;/p&gt;
&lt;p&gt;Fast forward into 2020, social media and smart phone is ubiquitous, 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Web_hosting_service&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;web hosting services&lt;/a&gt; such as 
&lt;a href=&#34;https://www.wix.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wix&lt;/a&gt; and 
&lt;a href=&#34;https://wordpress.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wordpress&lt;/a&gt; have made 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Content_creation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;content creation&lt;/a&gt; possible for anyone who wishes to create a website without much headache.&lt;/p&gt;
&lt;p&gt;Why should you building a website from the ground up as opposed to using a web hosting service?&lt;/p&gt;
&lt;h2 id=&#34;maybe-its-for-you&#34;&gt;Maybe it&amp;rsquo;s for you&lt;/h2&gt;
&lt;p&gt;Building a website with a static site generator is not for everyone. George Cushen who is Hugo theme Academic&amp;rsquo;s main contributor once put:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;hellip;(it would) require a basic understanding of using the command line in the Terminal (Mac/Linux) or Command Prompt (Windows) app on your computer. If you are not interested in this, perhaps this is not for you&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Original post&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But if going beyond content creation and learning more about building a website that is lightweight and secure, cost effective yet no 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Vendor_lock-in&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;vendor lock-in&lt;/a&gt; is your thing, then let&amp;rsquo;s dive right in.&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;First and foremost, let&amp;rsquo;s take a look on what will be covered in the post.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Register a domain name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up Hugo as static site generator.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a kick-starter theme to get going quickly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deploy the site to Firebase.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add your domain to the new site.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;1-register-a-domain-name&#34;&gt;1. Register a domain name&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s pretty straightforward. You come up with a great domain name. It is better to be concise and easy to remember. Be creative &amp;lt;3.&lt;/p&gt;
&lt;p&gt;Then complete the domain registration on any 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain_name_registrar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Domain Name Registrar&lt;/a&gt; you prefer. &lt;del&gt;I use Google Domains but there are other good choices such as Namecheap and GoDaddy.&lt;/del&gt;&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-register-a-domain-name-on-google-domains&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-a-website-in-2020/googledomain_hua80840076dd6af33bd83daa8ff78b57a_385165_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Register a domain name on Google Domains&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-a-website-in-2020/googledomain_hua80840076dd6af33bd83daa8ff78b57a_385165_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2812&#34; height=&#34;1530&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Register a domain name on Google Domains
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;June 2020: For a few reasons, one being Google domains does not provide API for dynamic DNS (A records), I&amp;rsquo;ve changed my domain name registrar to 
&lt;a href=&#34;https://www.namecheap.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Namecheap&lt;/a&gt;, my DNS provider to 
&lt;a href=&#34;https://www.cloudflare.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloudflare&lt;/a&gt;].&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-setting-up-hugo&#34;&gt;2. Setting up Hugo&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; is a 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Web_template_system#Static_site_generators&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;static site generator&lt;/a&gt;. There are many other site generators, I picked Hugo for a few reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Open_source&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;open source&lt;/a&gt; and backed by an active developer team and support community.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s a monolithic program with no external dependencies.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s production ready.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In a nutshell, Hugo renders content into HTML files and uploads the files onto your choice of hosting provider. Your content is what you write as content creator. Hugo takes content files written in 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown&lt;/a&gt; (&lt;code&gt;.md&lt;/code&gt;), a format that is intended to be used by technical and non-technical writers alike. Since inception, Markdown has become the &lt;em&gt;de facto&lt;/em&gt; format in content creation and blogging.&lt;/p&gt;
&lt;p&gt;If you need to learn about Markdown syntax, there are good guides such as 
&lt;a href=&#34;https://www.markdownguide.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;installing-hugo&#34;&gt;Installing Hugo&lt;/h3&gt;
&lt;p&gt;On macOS, I recommend using a package manager such as 
&lt;a href=&#34;https://brew.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Homebrew&lt;/a&gt; to manage third-party packages. With Homebrew installed, to install Hugo, just run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew install hugo ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All set. In case you need to check which Hugo version is installed, run &lt;code&gt;hugo version&lt;/code&gt;. On my mac it returns &lt;code&gt;Hugo Static Site Generator v0.70.0/extended darwin/amd64&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For installing Hugo on Windows or Linux, refer to Hugo&amp;rsquo;s documentation.&lt;/p&gt;
&lt;h2 id=&#34;3-use-a-kick-starter-theme&#34;&gt;3. Use a kick-starter theme&lt;/h2&gt;
&lt;p&gt;Hugo has built-in theme mechanism that allows developers to quickly run a theme and see the results. It also provides all the necessary building blocks for user to personalize the theme. There are many themes available on Hugo, for my own website I use Academic Theme. It also comes with a 
&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;academic-kickstart repo&lt;/a&gt; on github for teasers.&lt;/p&gt;
&lt;p&gt;The easy way to get started is to just fork the repo, download the code and run it.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-fork-the-kickstart-into-your-own-repo&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-a-website-in-2020/forkrepo_hub00e36fa908e191c517c523b2f035a7a_337164_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Fork the kickstart into your own repo&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-a-website-in-2020/forkrepo_hub00e36fa908e191c517c523b2f035a7a_337164_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2068&#34; height=&#34;1406&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Fork the kickstart into your own repo
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Download the code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone &amp;lt;replace-it-with-your-own-repo-url&amp;gt; ;
$ cd &amp;lt;your-repo-root-dir&amp;gt; ;
$ git submodule update --init --recursive ; # get the latest Academic theme
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run Hugo to serve the test site:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo server -D ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now visit 
&lt;a href=&#34;http://127.0.0.1:1313/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://127.0.0.1:1313/&lt;/a&gt; on your web browser and you should see the homepage.&lt;/p&gt;
&lt;p&gt;Congrats! You&amp;rsquo;ve got your first Hugo website up and running on your local environment!&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Hugo only binds to local network address for &lt;a href=&#34;https://en.wikipedia.org/wiki/Secure_by_default&#34;&gt;security by default&lt;/a&gt;. If you need to test the site on another computer in your local network, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo server -D --bind=0.0.0.0 ;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;4-deploy-the-new-site-to-firebase&#34;&gt;4. Deploy the new site to Firebase&lt;/h2&gt;
&lt;p&gt;There are many out there: 
&lt;a href=&#34;https://http://firebase.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Firebase&lt;/a&gt;, 
&lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Pages&lt;/a&gt;, 
&lt;a href=&#34;https://www.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify&lt;/a&gt; and 
&lt;a href=&#34;http://aws.amazon.com/amplify/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS Amplify&lt;/a&gt; to name a few. Each one has its own offering. I picked Firebase as my hosting provider because they seem to offer a bit more on their free tier.&lt;/p&gt;
&lt;p&gt;First, install Firebase CLI and (optional) Google Cloud SDK CLI.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Firebase CLI. The recommended way is to run &lt;code&gt;npm i -g firebase-tools ;&lt;/code&gt; See its 
&lt;a href=&#34;https://github.com/firebase/firebase-tools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github repo&lt;/a&gt; for more detail. If you don&amp;rsquo;t have &lt;code&gt;npm&lt;/code&gt; installed yet, run: &lt;code&gt;brew install node ;&lt;/code&gt;. npm will be installed alongside node.js.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google Cloud SDK CLI. Run &lt;code&gt;brew cask install google-cloud-sdk ;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, go to 
&lt;a href=&#34;https://firebase.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Firebase&lt;/a&gt; to set up an account and create a new Firebase project. Make sure it uses the default free tier plan which is called &lt;code&gt;Spark&lt;/code&gt;. Be noted you need to specify GCP resource location under &lt;strong&gt;Project Overview&lt;/strong&gt; in Firebase Dashboard after project is created. The location can not be changed afterwards, so choose something close to you would be wise.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-specify-resource-location-under-project-overview-in-firebase-dashboard&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-a-website-in-2020/gcplocation_hud9b4ca14f10cd788bd7fa102c656d069_282084_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Specify resource location under Project Overview in Firebase Dashboard&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-a-website-in-2020/gcplocation_hud9b4ca14f10cd788bd7fa102c656d069_282084_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2356&#34; height=&#34;1516&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Specify resource location under Project Overview in Firebase Dashboard
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;set-up-service-account-authenication-on-firebase&#34;&gt;Set up service account authenication on Firebase&lt;/h3&gt;
&lt;p&gt;Authenticating with a service account allows you to use Firebase CLI to manage your Firebase project. Google has provided a step by step guide 
&lt;a href=&#34;https://firebase.google.com/docs/app-distribution/authenticate-service-account.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When authentication is set up, go to your project root directory and follow the recorded screens below to initialize firebase and deploy the very first version of your site onto firebase.&lt;/p&gt;
&lt;script id=&#34;asciicast-331048&#34; src=&#34;https://asciinema.org/a/331048.js&#34; async&gt;&lt;/script&gt;

&lt;p&gt;Congratulations! Your website is online! You should find your Hosting URL at the end of the Firebase deploy output, it&amp;rsquo;s typically something like: &lt;code&gt;https://your-project-id.web.app&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-add-your-domain-to-the-new-site&#34;&gt;5. Add your domain to the new site&lt;/h2&gt;
&lt;p&gt;Go to &lt;strong&gt;Hosting&lt;/strong&gt; on Firebase, click on &amp;ldquo;Add custom domain&amp;rdquo;. Typically you wanted to add your root domain name and a sub domain name such as &amp;ldquo;www&amp;rdquo;. For example, I added &amp;ldquo;davidxiao.me&amp;rdquo; for my website and added another entry for redirecting &lt;code&gt;www.davidxiao.me&lt;/code&gt; to &lt;code&gt;davidxiao.me&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When it&amp;rsquo;s complete, you will be able to visit your website by your custom domain regsitered on step 1.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-add-custom-domain-to-your-website&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-a-website-in-2020/customdomain_hu5078b5b3d5bdae7e24676b63cc4c7b97_300325_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Add custom domain to your website&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-a-website-in-2020/customdomain_hu5078b5b3d5bdae7e24676b63cc4c7b97_300325_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2318&#34; height=&#34;1026&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Add custom domain to your website
  &lt;/figcaption&gt;


&lt;/figure&gt;

</description>
    </item>
    
  </channel>
</rss>
