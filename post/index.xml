<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | DAVID&#39;S GARAGE</title>
    <link>https://davidxiao.me/post/</link>
      <atom:link href="https://davidxiao.me/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â©2020 David Xiao</copyright><lastBuildDate>Fri, 12 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://davidxiao.me/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Posts</title>
      <link>https://davidxiao.me/post/</link>
    </image>
    
    <item>
      <title>My Awesome GitHub CheatSheet</title>
      <link>https://davidxiao.me/post/my-awesome-github-cheatsheet/</link>
      <pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/my-awesome-github-cheatsheet/</guid>
      <description>&lt;h2 id=&#34;onboarding-an-existing-project-to-github&#34;&gt;Onboarding an existing project to GitHub&lt;/h2&gt;
&lt;p&gt;If the project is not yet initialized by git, do the following first&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git init ;
&lt;span style=&#34;color:#75715e&#34;&gt;# then create a .gitignore file if needed&lt;/span&gt;
git add . ;
git status -u ; &lt;span style=&#34;color:#75715e&#34;&gt;# will show you all the files to be committed.&lt;/span&gt;
git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;init commit&amp;#34;&lt;/span&gt; ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then connect it to GitHub&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git remote add origin git@github.com:davxiao/my-proj.git ;
git branch --set-upstream-to&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;origin/master master ;
git pull origin master --allow-unrelated-histories ;
git push ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Secure Your HTTPS / SSL / TLS</title>
      <link>https://davidxiao.me/post/secure-your-https-ssl-tls/</link>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/secure-your-https-ssl-tls/</guid>
      <description>&lt;p&gt;If you own a personal site and like to make both your site and visitors secure, read this: Just because you&amp;rsquo;ve enabled HTTPS does not mean it&amp;rsquo;s sound and secure.&lt;/p&gt;
&lt;p&gt;TLS v1.0 and v1.1 are known to be vulnerable and should not be allowed on your site. It is a security best practice to make TLS v1.2 the minimum version allowed on your site.&lt;/p&gt;
&lt;p&gt;For more detail, check out 
&lt;a href=&#34;https://security.googleblog.com/2018/10/modernizing-transport-security.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this post&lt;/a&gt; on Google Security Blog and 
&lt;a href=&#34;https://developers.google.com/web/updates/2020/02/chrome-81-deps-rems#remove_tls_10_and_tls_11&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this post&lt;/a&gt; on Google Chrome Browser Updates.&lt;/p&gt;
&lt;h2 id=&#34;get-a-test-on-your-site&#34;&gt;Get a Test on your Site&lt;/h2&gt;
&lt;p&gt;You can use 
&lt;a href=&#34;https://www.ssllabs.com/ssltest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SSLLabs&lt;/a&gt; to conduct a quick test on your site.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-initial-test-results&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport1_hu4983f44c036a3ff7c6c18a3e1d69f764_337807_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Initial test results&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport1_hu4983f44c036a3ff7c6c18a3e1d69f764_337807_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2230&#34; height=&#34;1516&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Initial test results
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Click on any of the server will give you a brief explaination on the findings.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-see-explaination-here&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport2_hu3b6b7884631da49756285134b8c40644_167991_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;See explaination here&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport2_hu3b6b7884631da49756285134b8c40644_167991_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2236&#34; height=&#34;1184&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    See explaination here
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;I&amp;rsquo;m using Cloudflare as CDN for api.davidxiao.me, so I went on to the Cloudflare portal and updated the &amp;ldquo;Minimum TLS Version&amp;rdquo; to &amp;ldquo;TLS 1.2&amp;rdquo;.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-updating-minimum-tls-version-to-12&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/tls_hu8dc6d5d801d6201179ba0c66dc555f46_76902_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Updating minimum TLS version to 1.2&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/tls_hu8dc6d5d801d6201179ba0c66dc555f46_76902_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2072&#34; height=&#34;806&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Updating minimum TLS version to 1.2
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Then performed a re-scan. It looks much better this time.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-the-new-results&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport3_hu06b46150dc388fe5c30dd7fb161e2545_330910_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;The new results&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/secure-your-https-ssl-tls/sslreport3_hu06b46150dc388fe5c30dd7fb161e2545_330910_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2232&#34; height=&#34;1512&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    The new results
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Hope this is helpful!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dynamic DNS on Cloudflare in 5 Minutes</title>
      <link>https://davidxiao.me/post/dynamic-dns-on-cloudflare/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/dynamic-dns-on-cloudflare/</guid>
      <description>&lt;p&gt;You will need the following to get dynamic DNS working on Cloudflare:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cloudflare as your DNS provider. Migrating from your current DNS provider over to Cloudflare is easy and free whether you are using Godaddy, Namecheap or another one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get API token set up on Cloudflare.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install 
&lt;a href=&#34;https://github.com/danielpigott/cloudflare-cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cloudflare-cli&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;





  
  











&lt;figure id=&#34;figure-cloudflare-api-token&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/dynamic-dns-on-cloudflare/token_hucd115d0ccd33b06635afdf2056bad027_83044_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Cloudflare API token&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/dynamic-dns-on-cloudflare/token_hucd115d0ccd33b06635afdf2056bad027_83044_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2076&#34; height=&#34;548&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Cloudflare API token
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Cloudflare Token is preferred way over API key as token enables added security by allowing to specify access level with permissions and resources.&lt;/p&gt;
&lt;p&gt;Token can be disabled when not in use.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;When those are met, a one-liner like the following will update A record &lt;code&gt;api.davidxiao.me&lt;/code&gt; with your public internet IP.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOTE: If you are only using DDNS on Cloudflare and not using its CDN, remove &lt;code&gt;--activate&lt;/code&gt; from the command below.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    $ env CF_API_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your-own-cloudflare-token-NOT-api-key&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;        CF_API_DOMAIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your-own-TLD-such-as-davidxiao.me&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;        cfcli --activate --type A edit your-subdomain-such-as-api.davidxiao.me &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;curl -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://ip.seeip.org/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, put the code it into crontab will automate the process.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hosting Multiple Apps With Nginx Rewrite Rules</title>
      <link>https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/</guid>
      <description>&lt;p&gt;&lt;span class=&#34;my-dropcap&#34;&gt;S&lt;/span&gt;uppose you plan on hosting multiple API endpoints on one domain, make it &lt;code&gt;api.your-domain.com&lt;/code&gt;, one way to do it is to put each endpoint under a distinctive path, each one would look like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    https://api.your-domain.com/myapp1/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




  
  











&lt;figure id=&#34;figure-tunneling-through-a-nginx-reverse-proxy&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/rewrite_hube19bdb3e2a40b92a2fbfcd1b97b96f6_90876_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Tunneling through a Nginx reverse proxy&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/rewrite_hube19bdb3e2a40b92a2fbfcd1b97b96f6_90876_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;860&#34; height=&#34;984&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Tunneling through a Nginx reverse proxy
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Configure a reverse proxy such as Nginx and set up rewrite rules can get it done quickly.&lt;/p&gt;
&lt;p&gt;See below my example:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/c4f16ebbcdb2ec0701bcaad24640d12c.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Depending on your Linux distro and Nginx, most would need to put the conf file under &lt;code&gt;/etc/nginx/sites-available/&lt;/code&gt; directory and create a symbol link in &lt;code&gt;/etc/nginx/sites-enabled/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Restart nginx service by &lt;code&gt;sudo systemctl restart nginx ;&lt;/code&gt; and it&amp;rsquo;s working!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Integrating a Self-Hosting Commenting System to Your Site</title>
      <link>https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/</guid>
      <description>&lt;p&gt;&lt;em&gt;TLDR ð It talks about hosting remark42 commenting system as Docker container; Leveraging Cloudflare to protect the remark42 endpoint; Integrating remark42 to a Hugo static site which is built on Hugo and using academic theme.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Before getting started, have a look at any post on my blog at 
&lt;a href=&#34;https://davidxiao.me/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;davidxiao.me&lt;/a&gt; and see the way commenting works. If you like what you saw, please read on.&lt;/p&gt;
&lt;h2 id=&#34;what-will-be-covered-in-this-post&#34;&gt;What Will be Covered in This Post&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Deploy remark42 container on Docker&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Protect your remark42 endpoint with Cloudflare CDN&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integrate remark42 to your Hugo site&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-1-hosting-remark42&#34;&gt;Step 1. Hosting Remark42&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://remark42.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Remark42&lt;/a&gt; is an open source commenting system that can be deployed as container. It&amp;rsquo;s self-contained with little external dependencies. You can find deployement guide on its Remark42&amp;rsquo;s git repo.&lt;/p&gt;
&lt;p&gt;Feel free to do container your way but if you are interested in what tool I use for docker management, it&amp;rsquo;s 
&lt;a href=&#34;https://github.com/portainer/portainer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Portainer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have the following parameters on my remark42 container:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;REMARK_URL              make sure it has the full path if you are using reverse proxy and rewrites, e.g. https://api.davidxiao.me/remark42
SITE	                site id. For example: davidxiao
SECRET	                required. can be a long and hard-to-guess string
DEBUG	                true
AUTH_GOOGLE_CID         your own value
AUTH_GOOGLE_CSEC        same
AUTH_FACEBOOK_CID       same
AUTH_FACEBOOK_CSEC      same
AUTH_TWITTER_CID        same
AUTH_TWITTER_CSEC       same
AUTH_GITHUB_CID         same
AUTH_GITHUB_CSEC        same
ADMIN_SHARED_EMAIL      mail address that will receive notifications such as new comments
NOTIFY_EMAIL_ADMIN	true
NOTIFY_TYPE	        email
NOTIFY_EMAIL_FROM	mail address that is in the same domain see Mailgun settings. For example, mine is remark42@davidxiao.me
AUTH_EMAIL_FROM	        same as above
ADMIN_SHARED_ID	        OAuth authenticated user id that has admin access. see https://github.com/umputun/remark42#admin-users
SMTP_HOST	        smtp.mailgun.org
SMTP_PORT	        465
SMTP_TLS	        true
SMTP_USERNAME	        SMTP credential from Mailgun
SMTP_PASSWORD	        
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;NOTES: for more detail on Remark42 email configuration, check this 
&lt;a href=&#34;https://github.com/umputun/remark42/blob/master/docs/email.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;page&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;app-registration-on-the-oauth-providers&#34;&gt;App Registration on the OAuth Providers&lt;/h3&gt;
&lt;p&gt;Before you can complete app registration on the 
&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_OAuth_providers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OAuth providers&lt;/a&gt; supported by Remark42 (Google, facebook, twitter, github), you would need to determine the domain name of your Remark42 api endpoint.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-my-app-registration-page-on-facebook-as-an-example&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/facebook_hu9747433adb773f60d55694d972e5edfc_320108_2000x2000_fit_q90_lanczos.jpg&#34; data-caption=&#34;My app registration page on facebook as an example&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/facebook_hu9747433adb773f60d55694d972e5edfc_320108_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2682&#34; height=&#34;1342&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    My app registration page on facebook as an example
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Using a dynamic DNS (DDNS) would allow you to update IP address when your endpoint IP changes. If you are hosting Remark42 container on cloud such as AWS EC2 or on your homelab, DDNS can be helpful.&lt;/p&gt;
&lt;p&gt;Selecting a proper one as your DDNS provider is important to your solution. There are a few reasons.&lt;/p&gt;
&lt;p&gt;Each OAuth provider has its own rules over what kind of OAuth redirect URIs is allowed, some just don&amp;rsquo;t allow certain DDNS domains. For instance, facebook does not allow any &lt;code&gt;duckdns.org&lt;/code&gt; domain as part of redirect URIs at time of writing.&lt;/p&gt;
&lt;p&gt;Second, a typical DDNS provider would resolve your domain to your public IP. It&amp;rsquo;s what DDNS does. But for our purpose of hosting web apps, it&amp;rsquo;s not a great idea to expose your public IP as it could be exploited during an attack. CDN is a better approach but some DDNS providers may not offer that.&lt;/p&gt;
&lt;p&gt;Service availability is another concern. Without any service level agreement, your API will become inaccessible when the DDNS it relies on stops working.&lt;/p&gt;
&lt;p&gt;Last, the security posture of some DDNS providers can be doubtful. When the service platform itself gets compromised, bad things could happen really quickly before you are made aware of as end user.&lt;/p&gt;
&lt;p&gt;ð See my solution in twofold:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use a large-scale commercial DNS provider that supports DNS management over API, or even better - when it offers CDN protection over your origin endpoint.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a reverse proxy such as Nginx to rewrite URLs so that multiple apps can be &amp;ldquo;tunneled through&amp;rdquo; a single domain name when needed. See 
&lt;a href=&#34;https://davidxiao.me/post/hosting-multiple-containers-with-nginx-rewrite-rules/&#34;&gt;here&lt;/a&gt; for detail.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With respect to DDNS provider, I landed on Cloudflare after having reviewed a few choices including Cloudflare, Duckdns, No-IP. See my Cloudflare DDNS setup 
&lt;a href=&#34;https://davidxiao.me/post/dynamic-dns-on-cloudflare/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;step-2-protecttunnel-your-endpoint&#34;&gt;Step 2. Protect(tunnel) your Endpoint&lt;/h2&gt;
&lt;p&gt;I assume you are using Cloudflare as DNS provider as it&amp;rsquo;s a prerequisite if you need to enable Cloudflare CDN.&lt;/p&gt;
&lt;p&gt;To enable CDN, first go to Cloudflare portal and enable CDN for your remark42 subdomain. In my case that&amp;rsquo;s &lt;code&gt;api.davidxiao.me&lt;/code&gt;.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-enabling-proxy-by-clicking-on-the-proxy-status-icon&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/cdn_hu16e75ec25f0125b652450b7f91b4df42_98125_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Enabling Proxy by clicking on the Proxy status icon&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/cdn_hu16e75ec25f0125b652450b7f91b4df42_98125_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2096&#34; height=&#34;758&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Enabling Proxy by clicking on the Proxy status icon
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Second, modify caching level to &amp;ldquo;No query string&amp;rdquo;. No Query String means it only delivers files from cache when there is no query string. It&amp;rsquo;s the caching behavior we expect for an API endpoint, isn&amp;rsquo;t it?&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-enabling-proxied-by-clicking-on-proxy-status-icon&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/caching_hu1b96b407d2d894423ea0f28de5f404e7_230832_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Enabling Proxied by clicking on Proxy status icon&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/caching_hu1b96b407d2d894423ea0f28de5f404e7_230832_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2126&#34; height=&#34;1352&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Enabling Proxied by clicking on Proxy status icon
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h2 id=&#34;step-21-enable-end-to-end-https-with-cloudflare&#34;&gt;Step 2.1 Enable End-to-end HTTPS with Cloudflare&lt;/h2&gt;
&lt;p&gt;There are several SSL options provided by Cloudflare. Check 
&lt;a href=&#34;https://support.cloudflare.com/hc/en-us/articles/200170416-End-to-end-HTTPS-with-Cloudflare-Part-3-SSL-options#h_845b3d60-9a03-4db0-8de6-20edc5b11057&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this&lt;/a&gt; out to understand the difference.&lt;/p&gt;
&lt;p&gt;Based on my own needs, I&amp;rsquo;ve set up a &amp;ldquo;Full&amp;rdquo; mode in Cloudflare, which ensures a secure connection between both the web browser and Cloudflare and between Cloudflare and my endpoint. This option uses a self-signed certificate at the my endpoint web server.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-enabling-ssl-in-full-mode&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/ssl1_hu718aada9808213d1863d35c04aab4c8f_284146_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Enabling SSL in Full mode&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/ssl1_hu718aada9808213d1863d35c04aab4c8f_284146_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2178&#34; height=&#34;1348&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Enabling SSL in Full mode
  &lt;/figcaption&gt;


&lt;/figure&gt;






  
  











&lt;figure id=&#34;figure-generate-and-download-cloudflares-self-signed-certificates&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/ssl2_hu40bb48d6d163b284766543eb6db65c71_208391_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Generate and download Cloudflare&amp;rsquo;s self-signed certificates&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/adding-your-own-commenting-system-to-a-static-site/ssl2_hu40bb48d6d163b284766543eb6db65c71_208391_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2140&#34; height=&#34;1128&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Generate and download Cloudflare&amp;rsquo;s self-signed certificates
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Save the origin certificat as &lt;code&gt;origin-cert.pem&lt;/code&gt; and the private key as &lt;code&gt;priv.key&lt;/code&gt;, place both files on your host and make sure they both have ownership of &lt;code&gt;root&lt;/code&gt; and have &lt;code&gt;0600&lt;/code&gt; permissions.&lt;/p&gt;
&lt;p&gt;Then you just need to add the file locations in your nginx configuration file. See below my configruation files for example:&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/c4f16ebbcdb2ec0701bcaad24640d12c.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;step-3-integrate-remark42-to-your-hugo-site&#34;&gt;Step 3. Integrate Remark42 to Your Hugo Site&lt;/h2&gt;
&lt;p&gt;Override the &lt;code&gt;comments.html&lt;/code&gt; template by:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cp your-project-root/themes/academic/layouts/partials/comments.html your-project-root/layouts/partials/comments.html
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and modify the new one as you see fit.&lt;/p&gt;
&lt;p&gt;The following is my modified version of &lt;code&gt;comments.html&lt;/code&gt;.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/2c4373dbbf55823ccb3460cd79b37ee5.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Congrats! You&amp;rsquo;ve got the remark42 commenting system integrated to your Hugo site. Comment, Suggestion, and Feedback are all welcome!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting Up a Mailgun Relay With Postfix</title>
      <link>https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/</link>
      <pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/</guid>
      <description>&lt;p&gt;&lt;span class=&#34;my-dropcap&#34;&gt;M&lt;/span&gt;ailgun is a SaaS that provides email services (both sending and receiving) through both conventional SMTP and RESTful APIs. Find more detail 
&lt;a href=&#34;https://www.mailgun.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this post we will cover the SMTP option as it can be easily integrated with Postfix.&lt;/p&gt;
&lt;h2 id=&#34;whats-required&#34;&gt;What&amp;rsquo;s Required&lt;/h2&gt;
&lt;p&gt;You would need the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A custom domain name, something like &lt;code&gt;yourcompany.com&lt;/code&gt;. You also need to have admin access to your DNS provider.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Mailgun account that allows you to send out mails using your custom domain name. Payment information is required when signing up but no charges will take place at the moment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Admin privilege on a Linux box to set up Postfix server. Outbound internet access is required.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;onboarding-mailgun&#34;&gt;Onboarding Mailgun&lt;/h2&gt;
&lt;p&gt;Make sure you fill out payment information when signing up a new account on Mailgun. There&amp;rsquo;s no charge for small volume mail delivery but it&amp;rsquo;s a Mailgun requirement if you plan on delivering emails with your custom mail address like &lt;code&gt;yourname@yourdomain.com&lt;/code&gt;.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-sign-up-on-mailgun&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/signup_hu867205e8853227b914c922186800e8cc_196605_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Sign up on Mailgun&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/signup_hu867205e8853227b914c922186800e8cc_196605_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1996&#34; height=&#34;1418&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Sign up on Mailgun
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Mailgun provides multiple plans, the &lt;code&gt;Flex Trial&lt;/code&gt; is essentially a pay-as-you-go option that works very well if you don&amp;rsquo;t need to deliver a large volume of emails everyday.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-flex-trial-is-pay-as-you-go&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/plan_hu43c153f088264a5e4e95f76b3262b01c_51876_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Flex Trial is pay-as-you-go&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/plan_hu43c153f088264a5e4e95f76b3262b01c_51876_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;612&#34; height=&#34;514&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Flex Trial is pay-as-you-go
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;dns-settings&#34;&gt;DNS Settings&lt;/h3&gt;
&lt;p&gt;For &lt;strong&gt;Sending&lt;/strong&gt; on Mailgun to work properly, you&amp;rsquo;ve got to update a few DNS settings. First, you&amp;rsquo;d have to add a subdomain to your domain for Mailgun MX. For example, I&amp;rsquo;ve added &lt;code&gt;mg.davidxiao.me&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then you&amp;rsquo;d have to add a few TXT records on DNS.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-adding-txt-records-for-sending-emails&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/dns_hub98922f910e183e0ae40b95602dd546f_374557_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Adding TXT records for sending emails&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/dns_hub98922f910e183e0ae40b95602dd546f_374557_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2878&#34; height=&#34;1304&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Adding TXT records for sending emails
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;what-about-receiving&#34;&gt;What About Receiving&lt;/h3&gt;
&lt;p&gt;Receiving and forwarding incoming mails is a premium feature on Mailgun that requires spending commitments.&lt;/p&gt;
&lt;p&gt;I will write another post talking about using a free-of-charge mail forwading service. Stay tuned.&lt;/p&gt;
&lt;h3 id=&#34;smtp-credential&#34;&gt;SMTP Credential&lt;/h3&gt;
&lt;p&gt;On Mailgun portal, under Settings/Domain Settings and click on SMTP credentials, you will be able to provision new SMTP credentials. The SMTP password will only show one time during user provisioning for security.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-smtp-user-credential-and-smtp-server-detail&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/smtp_hu723168efb4910bc035f808acecc7a6ae_196531_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;SMTP user credential and SMTP server detail&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/setting-up-a-mailgun-relay-with-postfix/smtp_hu723168efb4910bc035f808acecc7a6ae_196531_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2436&#34; height=&#34;1188&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    SMTP user credential and SMTP server detail
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;which-smtp-port-to-use&#34;&gt;Which SMTP Port to Use&lt;/h3&gt;
&lt;p&gt;Short version: It depends on what your client can support.&lt;/p&gt;
&lt;p&gt;Long version:&lt;/p&gt;
&lt;p&gt;Mailgun indicates the following ports are open: 25, 587, and 465 (SSL/TLS)&lt;/p&gt;
&lt;p&gt;Port 25 is not recommended because many enterprise firewalls deny it for security reasons.&lt;/p&gt;
&lt;p&gt;Port 587 is the &lt;code&gt;STARTTLS&lt;/code&gt; version. In short, client first initiates a plain TCP connection. When server advises that it supports STARTTLS, client will respond with STARTTLS and proceed with reconnecting to the same 587 port, this time with TLS handshake. The protocol is such that server will deny TLS handshakes in the first place if client did not complete an initial TCP session and ask for STARTTLS.&lt;/p&gt;
&lt;p&gt;Port 465 is the &amp;ldquo;straight-in&amp;rdquo; SSL/TLS in that it deals with every session as TLS.&lt;/p&gt;
&lt;h2 id=&#34;postfix&#34;&gt;Postfix&lt;/h2&gt;
&lt;p&gt;Postfix can be easily installed on almost any Linux distro. On Ubuntu, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install libsasl2-modules postfix ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then create a file &lt;code&gt;/etc/postfix/sasl/sasl_passwd_mailgun&lt;/code&gt;. Copy the following line into the file, replacing &lt;code&gt;your-username@mg.yourdomain.com:your-password-here&lt;/code&gt; with your actual SMTP credential.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[smtp.mailgun.org]:587 your-username@mg.yourdomain.com:your-password-here
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo postmap /etc/postfix/sasl/sasl_passwd_mailgun ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If all went well, you have a new file as &lt;code&gt;/etc/postfix/sasl/sasl_passwd_mailgun.db&lt;/code&gt;. It&amp;rsquo;s what Postfix will be reading from for Mailgun SMTP authentication.&lt;/p&gt;
&lt;h3 id=&#34;secure-the-passwords&#34;&gt;Secure the passwords&lt;/h3&gt;
&lt;p&gt;Both &lt;code&gt;sasl_passwd_mailgun&lt;/code&gt; and &lt;code&gt;sasl_passwd_mailgun.db&lt;/code&gt; contain plain text of your app password, to secure the access, you need to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo chown root:root /etc/postfix/sasl/sasl_passwd_mailgun /etc/postfix/sasl/sasl_passwd_mailgun.db ;
sudo chmod 0600 /etc/postfix/sasl/sasl_passwd_mailgun /etc/postfix/sasl/sasl_passwd_mailgun.db ;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;setting-up&#34;&gt;Setting up&lt;/h3&gt;
&lt;p&gt;Postfix&amp;rsquo;s main configuration file is &lt;code&gt;/etc/postfix/main.cf&lt;/code&gt;. See the following my own configuration for your reference.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/ecf545d57925a815b274a981b1775622.js&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;myhostname&lt;/code&gt; indicates the hostname of the Postfix&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mynetworks&lt;/code&gt; is the IP CIDRs that are allowed to relay mails through Postfix. It should only contain your local networks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;smtp_sasl_password_maps&lt;/code&gt; is where the sasl_passwd file is located&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;relayhost&lt;/code&gt; is the server name and port. Replace it with&lt;code&gt;[smtp.mailgun.org]:587&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Edit the values respectively.&lt;/p&gt;
&lt;p&gt;For security reason, do not expose Postfix service to anywhere outside of your trusted networks.&lt;/p&gt;
&lt;p&gt;In the example above, I am allowing anonymous SMTP authentication from mynetworks. The argument can be made that attackers will be after more valuable targets than fiddling with Postfix relay service provided the local network is compromised.&lt;/p&gt;
&lt;h3 id=&#34;testing-and-troubleshooting&#34;&gt;Testing and Troubleshooting&lt;/h3&gt;
&lt;p&gt;When config file is done, reload Postfix configurations without having to restart the service:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo postfix reload ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For SMTP testing, I personally like to use 
&lt;a href=&#34;http://www.jetmore.org/john/code/swaks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;swaks&lt;/a&gt;, a purpose-built Perl script.&lt;/p&gt;
&lt;p&gt;With swaks installed, it will be just a one-liner to send out a testing mail:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./swaks &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --server &amp;lt;your-postfix-server-ip&amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --port &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --from yourname@yourdomain.com &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --to anymailbox@wherever.com &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --h-Subject: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello world&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --body &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Testing some Mailgun awesomness!&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you suspect something went wrong, go check the logs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo tail -f /var/log/syslog ;
# and
sudo tail -f /var/log/mail.err ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&amp;rsquo;s it!&lt;/p&gt;
&lt;p&gt;On a side note, there are lots of tweaks can be done on the Postfix end depending on what you need to achieve, but this simple guide should be able to get you started quickly.&lt;/p&gt;
&lt;p&gt;Let me know if you have any questions or comments.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting up a Gmail Relay With Postfix</title>
      <link>https://davidxiao.me/post/setting-up-a-gmail-relay-with-postfix/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/setting-up-a-gmail-relay-with-postfix/</guid>
      <description>&lt;p&gt;You would need the following to set up a gmail relay on Postfix:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;An app password obtained from your Gmail account. It will be effectively your Gmail SMTP password.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Admin privilege on a Linux box to set up Postfix server. Outbound internet access is required.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;google-app-password&#34;&gt;Google App Password&lt;/h2&gt;
&lt;p&gt;App passwords let you sign in to your Google Account from apps that don&amp;rsquo;t support 2-Step Verification. 
&lt;a href=&#34;https://support.google.com/mail/answer/185833&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;This post&lt;/a&gt; from Google explains how to obtain an app password.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-sign-up-for-an-app-password-on-your-google-account&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/setting-up-a-gmail-relay-with-postfix/apppassword_huf0e32fe416f4639906687779d0edc497_215049_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Sign up for an App Password on your Google Account&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/setting-up-a-gmail-relay-with-postfix/apppassword_huf0e32fe416f4639906687779d0edc497_215049_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2382&#34; height=&#34;1482&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Sign up for an App Password on your Google Account
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Essentially, first you need to go to 
&lt;a href=&#34;https://myaccount.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Account&lt;/a&gt; and enable two Factor Authentication. Without enabling 2FA, app password option is disabled on Google.&lt;/p&gt;
&lt;p&gt;Then click on &amp;lsquo;Security&amp;rsquo; from the left, click on &amp;lsquo;App passwords&amp;rsquo; under &amp;lsquo;Signing in to Google&amp;rsquo; and click on &amp;lsquo;Generate&amp;rsquo; button, here you go. Copy the password as we will need it later.&lt;/p&gt;
&lt;p&gt;The rest of the post is using Ubuntu as an example, but the approach should work for most recent Linux distro in general.&lt;/p&gt;
&lt;h2 id=&#34;postfix&#34;&gt;Postfix&lt;/h2&gt;
&lt;p&gt;Postfix can be easily installed on almost any Linux distro. On Ubuntu, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install libsasl2-modules postfix ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then create a file &lt;code&gt;/etc/postfix/sasl/sasl_passwd&lt;/code&gt;. Copy the following line into the file, replacing &lt;code&gt;your@gmail.com&lt;/code&gt; with your actual Gmail; &lt;code&gt;abcdefghijk123&lt;/code&gt; with your actual app password.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[smtp.gmail.com]:587 your@gmail.com:abcdefghijk123
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo postmap /etc/postfix/sasl/sasl_passwd ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If all went well, you have a new file as &lt;code&gt;/etc/postfix/sasl/sasl_passwd.db&lt;/code&gt;. It&amp;rsquo;s what Postfix will be reading from for Gmail SMTP authentication.&lt;/p&gt;
&lt;h3 id=&#34;secure-the-passwords&#34;&gt;Secure the passwords&lt;/h3&gt;
&lt;p&gt;Both &lt;code&gt;sasl_passwd&lt;/code&gt; and &lt;code&gt;sasl_passwd.db&lt;/code&gt; contain plain text of your app password, to secure the access, you need to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo chown root:root /etc/postfix/sasl/sasl_passwd /etc/postfix/sasl/sasl_passwd.db ;
sudo chmod 0600 /etc/postfix/sasl/sasl_passwd /etc/postfix/sasl/sasl_passwd.db ;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;setting-up&#34;&gt;Setting up&lt;/h3&gt;
&lt;p&gt;Postfix&amp;rsquo;s main configuration file is &lt;code&gt;/etc/postfix/main.cf&lt;/code&gt;. See the following my own configuration for your reference.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/ecf545d57925a815b274a981b1775622.js&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;myhostname&lt;/code&gt; indicates the hostname of the Postfix&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mynetworks&lt;/code&gt; is the IP CIDRs that are allowed to relay mails through Postfix. It should only contain your local networks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;smtp_sasl_password_maps&lt;/code&gt; is where the sasl_passwd file is located&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;relayhost&lt;/code&gt; is the server name and port&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Edit the values respectively.&lt;/p&gt;
&lt;p&gt;For security reason, do not expose Postfix service to anywhere outside of your trusted networks.&lt;/p&gt;
&lt;p&gt;In the example above, I am allowing anonymous SMTP authentication from mynetworks. The argument can be made that attackers will be after more valuable targets than fiddling with Postfix relay service provided the local network is compromised.&lt;/p&gt;
&lt;h3 id=&#34;testing-and-troubleshooting&#34;&gt;Testing and Troubleshooting&lt;/h3&gt;
&lt;p&gt;When config file is done, reload Postfix configurations without having to restart the service:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo postfix reload ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For SMTP testing, I personally like to use 
&lt;a href=&#34;http://www.jetmore.org/john/code/swaks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;swaks&lt;/a&gt;, a purpose-built Perl script.&lt;/p&gt;
&lt;p&gt;With swaks installed, it will be just a one-liner to send out a testing mail:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./swaks &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --server &amp;lt;your-postfix-server-ip&amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --port &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --from yourmail@gmail.com &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --to anymailbox@wherever.com &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --h-Subject: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello world&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    --body &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Testing some Mailgun awesomness!&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you suspect something went wrong, go check the logs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo tail -f /var/log/syslog ;
# and
sudo tail -f /var/log/mail.err ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&amp;rsquo;s it!&lt;/p&gt;
&lt;p&gt;On a side note, there are lots of tweaks can be done on the Postfix end depending on what you need to achieve, but this simple guide should be able to get you started quickly.&lt;/p&gt;
&lt;p&gt;Let me know if you have any questions or comments. On my post I will be discussing setting up a 
&lt;a href=&#34;https://www.mailgun.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mailgun&lt;/a&gt; relay. Stay tuned!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Homelab Setup From Hardware to KVM - Part 2</title>
      <link>https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-2/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-2/</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Wikipedia:Too_long;_didn%27t_read&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TL;DR&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Install and configure Proxmox as KVM hypervisor.&lt;/em&gt;&lt;/p&gt;















&lt;figure id=&#34;figure-playing-ä¸åå¿xiiihttpsstoresteampoweredcomapp363150romance_of_the_three_kingdoms_xiii-on-win10-guest-through-remote-desktop&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;playsan13.png&#34; data-caption=&#34;Playing ä¸åå¿XIII on Win10 guest through Remote Desktop&#34;&gt;


  &lt;img src=&#34;playsan13.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Playing &lt;a href=&#34;https://store.steampowered.com/app/363150/ROMANCE_OF_THE_THREE_KINGDOMS_XIII/&#34;&gt;ä¸åå¿XIII&lt;/a&gt; on Win10 guest through Remote Desktop
  &lt;/figcaption&gt;


&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>My Homelab Setup From Hardware to KVM - Part 1</title>
      <link>https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/</link>
      <pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Wikipedia:Too_long;_didn%27t_read&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TL;DR&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I plan on writing a few posts about my Homelab project. This is the first one focusing on the hardware spec and networking.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Last year I decided to set up a homelab to learn technologies, to run some services for my own use and more importantly, to have fun.&lt;/p&gt;
&lt;p&gt;There is a budget and a few high level requirements on the infrastructure side I worked on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Be able to run a hypervisor that supports both Linux and Windows virtual machine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One single host. No clustering&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use open source as long as the it&amp;rsquo;s mature enough&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Easy to manage and operate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cost effective&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No dedicated networking hardware&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I plan on writing a few posts with respect to the HW spec I chose, the architecture decisions I made along the way and how I built the whole lab. This is the first post.&lt;/p&gt;
&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;
&lt;style&gt;
table th:nth-of-type(1){
    width: 20%;
}
table th:nth-of-type(2) {
    width: 30%;
}
table th:nth-of-type(3) {
    width: 50%;
}
&lt;/style&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Spec&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;AMD Ryzen 7 3700x&lt;/td&gt;
&lt;td&gt;65W TDP. 8-core, 16-thread, 7nm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Motherboard&lt;/td&gt;
&lt;td&gt;ASUS PRIME X470-PRO&lt;/td&gt;
&lt;td&gt;See my 
&lt;a href=&#34;#motherboard&#34;&gt;notes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Memory&lt;/td&gt;
&lt;td&gt;16gb x2 ECC UDIMM&lt;/td&gt;
&lt;td&gt;Unbuffered ECC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;System Storage&lt;/td&gt;
&lt;td&gt;250GB SATA SSD&lt;/td&gt;
&lt;td&gt;See my 
&lt;a href=&#34;#storage&#34;&gt;notes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data Storage&lt;/td&gt;
&lt;td&gt;4TB HDD&lt;/td&gt;
&lt;td&gt;As temporary data storage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Networking&lt;/td&gt;
&lt;td&gt;On-board Gigabit Ethernet&lt;/td&gt;
&lt;td&gt;See my 
&lt;a href=&#34;#networking&#34;&gt;notes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Graphics Card #1&lt;/td&gt;
&lt;td&gt;Asus GeForce GTX 1660 Super&lt;/td&gt;
&lt;td&gt;model: TUF-GTX1660S-O6G-GAMING See my 
&lt;a href=&#34;#gpu-passthrough&#34;&gt;notes&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Graphics Card #2&lt;/td&gt;
&lt;td&gt;MSI GeForce GT 710 1GB&lt;/td&gt;
&lt;td&gt;Fanless design&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Accessories such as case and power supply are not listed but included in the total cost.&lt;/p&gt;
&lt;h2 id=&#34;total-cost&#34;&gt;Total Cost&lt;/h2&gt;
&lt;p&gt;The hardware cost of my homelab is around CA $1,400 when I bought them back in December 2019.&lt;/p&gt;
&lt;h2 id=&#34;motherboard&#34;&gt;Motherboard&lt;/h2&gt;
&lt;p&gt;If you need to use ECC memory, you have to pick a motherboard that support ECC. In consumer grade motherboard market, look no further than ASUS and ASROCK. Those two are know for building consumer grade ECC-enabled motherboards.&lt;/p&gt;
&lt;p&gt;If you need to manage your homelab hypervisor from a remote location, and be able to access it when troubleshooting something low level, e.g. when hypervisor is crashed or configuring BIOS, you have two choices: Phyical Access or IPMI.&lt;/p&gt;
&lt;h3 id=&#34;phyical-access&#34;&gt;Phyical Access&lt;/h3&gt;
&lt;p&gt;It means hook up a display, a keyboard and a mouse to your server and sit in front of it when troubleshooting.&lt;/p&gt;
&lt;h3 id=&#34;ipmi&#34;&gt;IPMI&lt;/h3&gt;
&lt;p&gt;With IPMI, tasks such as power on/off the machine, configure BIOS settings and monitor console output all can be done from remote wia a web portal. Motherboards that support IPMI typically provide a dedicated Ethernet port for IPMI management. Learn more about IPMI 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Intelligent_Platform_Management_Interface&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;ASROCK has some pretty good IPMI-enabled workstartion motherboards. For AMD cpu, take a look at ASROCK X470D4U or x470d4u2-2t with 10G networking. There are also x570d4i-2t to be released in 2020.&lt;/p&gt;
&lt;h2 id=&#34;storage&#34;&gt;Storage&lt;/h2&gt;
&lt;p&gt;To have flexability and speed, I need two kinds of storage. 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Direct-attached_storage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Direct Attached Storage&lt;/a&gt; (DAS) for hypervisor and guest OS images and 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Network-attached_storage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Network Attached Storage&lt;/a&gt; (NAS) for data such as video and photos.&lt;/p&gt;
&lt;h3 id=&#34;ssd-as-das&#34;&gt;SSD as DAS&lt;/h3&gt;
&lt;p&gt;M2.SSD is my primary choice for DAS since it&amp;rsquo;s much faster than SATA SSD both on paper and in reality. So I bought a 
&lt;a href=&#34;https://www.xpg.com/us/feature/637/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;XPG SX8800 PRO&lt;/a&gt; 1TB and installed it on my server.&lt;/p&gt;
&lt;p&gt;Unfortunately my server started freezing up randomly every a few hours to a few days. Troubleshooting proved to be one hell of an effort when my server is in the basement without a dedicated display. I&amp;rsquo;d have to take an external display from my home office down to the basement for troubleshooting. IPMI could have saved my day.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-error-messages-showing-io-error-on-nvme0n1&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/m2ssderror_huf31a9320da0c1a5686802b65e9bd1936_7726651_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Error messages showing I/O error on nvme0n1&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/m2ssderror_huf31a9320da0c1a5686802b65e9bd1936_7726651_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2624&#34; height=&#34;1520&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Error messages showing I/O error on nvme0n1
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;It took some time to reproduce the problem and troubleshoot the issues. Finally I was able to conclude that the controller chip that XPG SX8800 PRO uses may have compatibility issue with PRIME X470-PRO. After I replaced the M2.SSD with an old SATA SSD that I have, the server runs smoothly without any issues.&lt;/p&gt;
&lt;h3 id=&#34;synology-nas&#34;&gt;Synology NAS&lt;/h3&gt;
&lt;p&gt;I have a Synology DS416play. It&amp;rsquo;s a little home NAS with 4 bays and 1GB memory. I&amp;rsquo;ve since upgraded the memory to 8G and have it fitted with 4x10G HDD. In terms of usable space it has around 27T with one disk fault tolerance which is more than enough for me.&lt;/p&gt;
&lt;p&gt;The downside of this NAS is it only has Gigabit Ethernet. If you think 10G is appealing, I&amp;rsquo;m totally with you. QNAP is offering a number of 10G ready NAS. Check it out 
&lt;a href=&#34;https://www.qnap.com/solution/10gbe-ready/en-us/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; for detail.&lt;/p&gt;
&lt;h2 id=&#34;networking&#34;&gt;Networking&lt;/h2&gt;
&lt;p&gt;My home network topology is rather simple. Both homlab server and NAS are connected to the internet router. The router provides basic functionalities such as IP management and port mapping.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-home-network-diagram&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/network_hudc03804a00527dca3247c3973ee82eb5_250291_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Home Network Diagram&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/network_hudc03804a00527dca3247c3973ee82eb5_250291_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1216&#34; height=&#34;1069&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Home Network Diagram
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Given my home network cables are all Cat5 supporting up to 1 Gigabit, I have to stay with 1G network and the on-board Gigabit Ethernet works well in my setup.&lt;/p&gt;
&lt;p&gt;If you are considering 10G, you would need to make sure all critial devices on the network (e.g. router, NAS, Wifi etc.) are capable of dealing with the throughput, since any performance bottleneck can be the low watermark that undermines the overall network performance.&lt;/p&gt;
&lt;h2 id=&#34;gpu-passthrough&#34;&gt;GPU Passthrough&lt;/h2&gt;
&lt;p&gt;The KVM hypervisor supports passing graphics card(s) onto dedicated guest OS.&lt;/p&gt;
&lt;p&gt;On my setup, GTX1660 is the primary card for tasks such as streaming encoding/decoding whereas the GT710 is pass-through to a Win10 guest. This setup allows me to play a few not-so-demanding games on the Win10 through remote desktop.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-playing-ä¸åå¿xiiihttpsstoresteampoweredcomapp363150romance_of_the_three_kingdoms_xiii-on-win10-guest-through-remote-desktop&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/playsan13_hu0db209418eed430cc60aa3a34435c293_6154409_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Playing ä¸åå¿XIII on Win10 guest through Remote Desktop&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/my-homelab-setup-from-hardware-to-kvm-part-1/playsan13_hu0db209418eed430cc60aa3a34435c293_6154409_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2732&#34; height=&#34;1746&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Playing &lt;a href=&#34;https://store.steampowered.com/app/363150/ROMANCE_OF_THE_THREE_KINGDOMS_XIII/&#34;&gt;ä¸åå¿XIII&lt;/a&gt; on Win10 guest through Remote Desktop
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;I will discuss more on GPU passthrough in the next post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building Your First App on Google Home in 10 minutes</title>
      <link>https://davidxiao.me/post/building-your-first-app-on-google-home/</link>
      <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/building-your-first-app-on-google-home/</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Wikipedia:Too_long;_didn%27t_read&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TL;DR&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post will show you how to build and deploy a voice-activated app on Google Cloud in 10 minutes. It responds to your commands and plays personalized music if you ask! Not a bad way to play on someone&amp;rsquo;s birthday, eh?&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;create-a-new-project-on-google-actions-console&#34;&gt;Create a New Project on Google Actions Console&lt;/h2&gt;
&lt;p&gt;The app is built on Google Cloud using Google Actions and Dialogflow. If you don&amp;rsquo;t have a Google Actions account, click 
&lt;a href=&#34;https://console.actions.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; to create a new one. It&amp;rsquo;s free.&lt;/p&gt;
&lt;p&gt;When the account is created, go ahead and create a new project. Google Actions allows you to add Actions support to existing GCP projects, but we will create a new one to keep it simple.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-create-a-new-project&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/newproject_hu743e9e3ec8e102a213e0e2f07b641661_182403_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Create a new project&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/newproject_hu743e9e3ec8e102a213e0e2f07b641661_182403_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2392&#34; height=&#34;1042&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Create a new project
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h2 id=&#34;specify-a-catchy-name-for-your-app&#34;&gt;Specify a Catchy Name for Your App&lt;/h2&gt;
&lt;p&gt;You need to specify a catchy name for the app so that every time when you say those &amp;ldquo;gateway words&amp;rdquo; to the Google Home device, it will activate the app for you.&lt;/p&gt;
&lt;p&gt;Go to the project dashboard, click on &amp;ldquo;Quick setup&amp;rdquo; followed by &amp;ldquo;Decide how your action is invoked&amp;rdquo; and put the app name here. It may reject the name if it&amp;rsquo;s too common or ambiguous, e.g. &amp;ldquo;Hello&amp;rdquo; is probably not a good choice here.&lt;/p&gt;
&lt;p&gt;For example, my app is called &amp;ldquo;Hello Jukebox&amp;rdquo;.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-specify-a-catchy-name-for-your-app&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/hellojukebox_hu00583f257256ac5d2540f09ced6a2a1c_203654_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Specify a catchy name for your app&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/hellojukebox_hu00583f257256ac5d2540f09ced6a2a1c_203654_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2398&#34; height=&#34;1514&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Specify a catchy name for your app
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h2 id=&#34;add-actions-to-your-app&#34;&gt;Add Actions to Your App&lt;/h2&gt;
&lt;p&gt;There is no secret sauce. An app is only as smart as what it&amp;rsquo;s taught. This app will respond to voice commands and act accordingly based on the intents developeed for it. &amp;ldquo;Intent&amp;rdquo; is a Google term referring to a combination of voice command and its response.&lt;/p&gt;
&lt;p&gt;Within one app, developer can create as many intents as they want as long as no intent is stepping on one another&amp;rsquo;s toes. For example, trying to create two separate intents both responding to the same command &amp;ldquo;what is my favoriate color&amp;rdquo; would be confusing to begin with.&lt;/p&gt;
&lt;p&gt;Within an intent, developer can decide on the kind of response it needs to give: it can be as simple as having Google Home say something or be more complicated with custom logic.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-add-a-new-action-to-your-app&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/addaction_hu5a34da406b359feaea235349c9d3070a_89800_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Add a new Action to your app&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/addaction_hu5a34da406b359feaea235349c9d3070a_89800_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1962&#34; height=&#34;800&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Add a new Action to your app
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;use-case-1-simple-voice-commands-and-text-responses&#34;&gt;Use Case 1: Simple Voice Commands and Text Responses&lt;/h3&gt;
&lt;p&gt;Scroll down the Actions dashboard until the Fulfillment section, click on &amp;ldquo;Edit in Dialogflow&amp;rdquo; and click on the Intents. Start adding intents.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-edit-in-dialogflow&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/editdialogflow_hu0a5e6ae8e7a5a9d21267103e72f6723b_121154_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Edit in Dialogflow&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/editdialogflow_hu0a5e6ae8e7a5a9d21267103e72f6723b_121154_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2290&#34; height=&#34;1378&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Edit in Dialogflow
  &lt;/figcaption&gt;


&lt;/figure&gt;






  
  











&lt;figure id=&#34;figure-add-new-intent&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/addintents_hu5caf5e9408c46163cab731953699f0c0_150879_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Add new Intent&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/addintents_hu5caf5e9408c46163cab731953699f0c0_150879_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2126&#34; height=&#34;848&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Add new Intent
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;For example, you may want to create an intent called &amp;ldquo;special-intent&amp;rdquo;, add &amp;ldquo;Do you know why today is so special&amp;rdquo; as voice command and add &amp;ldquo;Of course I know, David&amp;rdquo; as text responses to the intent. Those are what you would say to the app and what the app will say back respectively.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-a-list-of-intents-i-added&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/addnewintent_hu4379dc9c90fb0c256e025ee19dca75f6_98047_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;A list of intents I added&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/addnewintent_hu4379dc9c90fb0c256e025ee19dca75f6_98047_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1568&#34; height=&#34;866&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    A list of intents I added
  &lt;/figcaption&gt;


&lt;/figure&gt;






  
  











&lt;figure id=&#34;figure-text-responses&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/response_hu977f95ac59ecb13bada691ae3f06f746_90426_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Text Responses&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/response_hu977f95ac59ecb13bada691ae3f06f746_90426_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;1570&#34; height=&#34;732&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Text Responses
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;use-case-2-implement-custom-logic-using-cloud-function&#34;&gt;Use Case 2: Implement custom logic using Cloud Function&lt;/h3&gt;
&lt;p&gt;The second use case is enabling webhook in an intent and developing a handler for it.&lt;/p&gt;
&lt;p&gt;This approach allows you to implement custom logic for an intent. GCP supports either running your custom code on a 
&lt;a href=&#34;https://cloud.google.com/functions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud Function&lt;/a&gt; or calling an external web service you specify.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-text-responses&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/inline_hu7df3c6f58ea55e824903f43390cf3d99_512086_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Text Responses&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/inline_hu7df3c6f58ea55e824903f43390cf3d99_512086_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2144&#34; height=&#34;1514&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Text Responses
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;I will use the Cloud Function way for this example since we don&amp;rsquo;t need to worry about resource or storage thanks to its serverless nature.&lt;/p&gt;
&lt;p&gt;First, you need to enable &amp;ldquo;Webhook&amp;rdquo; on the intent that needs to have custom logic. Second, click on the Fulfillment on the left navbar and enable Inline editor. Last, copy and paste the following code example and click on save. That&amp;rsquo;s it.&lt;/p&gt;
&lt;p&gt;The code example will first say something then play an audio clip. If you need to play something else, e.g. a peronalized audio clip, you can replace the URL with your own thing, but then you would have to deal with access control.&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://gist.github.com/davxiao/8d0d35d3c88078e5fc96114d02c8ee6b.js&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;testing-your-new-app-on-simulator&#34;&gt;Testing Your New App on Simulator&lt;/h3&gt;
&lt;p&gt;Click on &amp;ldquo;Google Assistant&amp;rdquo; on the right bar to open the Simulator on Google Actions. From there you can tinker with your app until you&amp;rsquo;re satisfied with it :-)&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-text-responses&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/test_hu4c7ce97dca92ec99c2a240b81e7d53b6_267148_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Text Responses&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/test_hu4c7ce97dca92ec99c2a240b81e7d53b6_267148_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2854&#34; height=&#34;1422&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Text Responses
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;deploying-to-your-google-home-device&#34;&gt;Deploying to your Google Home Device&lt;/h3&gt;
&lt;p&gt;Making your app available on 
&lt;a href=&#34;https://assistant.google.com/explore&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Assistant Actions Portal&lt;/a&gt; sounds like a great idea, however the releasing process could take some time as Google needs to review and approve your app first before it can be released. Since my post promised you a 10-minute ride, let&amp;rsquo;s rolling to get the freshly baked app onto your own Google Home device.&lt;/p&gt;
&lt;p&gt;On Actions console, click on &amp;ldquo;Deploy&amp;rdquo;, choose &amp;ldquo;Alpha&amp;rdquo;, click on &amp;ldquo;Manage Alpha Testers&amp;rdquo;, and add your own Google Home device account email here. You can then switch to your Google Home account and use the opt-in link received on the invitation email to accept the invite.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-make-an-alpha-deployment&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/deploy_hub0f70cc191eb1433db74b863010b6132_192039_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Make an Alpha Deployment&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-your-first-app-on-google-home/deploy_hub0f70cc191eb1433db74b863010b6132_192039_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2290&#34; height=&#34;1364&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Make an Alpha Deployment
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;When it&amp;rsquo;s ready, click on &amp;ldquo;Create a release&amp;rdquo;, and wait it to complete. It can take a few minutes.&lt;/p&gt;
&lt;p&gt;Congrats! You&amp;rsquo;ve just developed and deployed your first Google Home app in 10 minutes! Try say to your Google Home: &amp;ldquo;Hey Google, Talk to your_app_name_here&amp;rdquo; and see what happens :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cross Compile MMDVMHost on Ubuntu</title>
      <link>https://davidxiao.me/post/cross-compile-mmdvmhost-on-ubuntu/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/cross-compile-mmdvmhost-on-ubuntu/</guid>
      <description>&lt;p&gt;A little teaser here: Raspberry Pi is not really ediable :-)&lt;/p&gt;
&lt;p&gt;So I have a 
&lt;a href=&#34;https://www.raspberrypi.org/blog/raspberry-pi-zero-w-joins-family/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Raspberry Pi Zero W&lt;/a&gt; for about one year now.&lt;/p&gt;
&lt;p&gt;It runs a few software. One of them is called Pi-Star. It&amp;rsquo;s an open source toolkit for digial voice over 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Amateur_radio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;amateur radio&lt;/a&gt;. Find more detail about Pi-Star 
&lt;a href=&#34;https://www.pistar.uk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Amateur radio is one of my hobbies. Figuring out how 
&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_amateur_radio_modes#Digital_voice&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;digital voice modes&lt;/a&gt; work in the amateur radio world took some time for me but it was rewarding. At the end of the day, listening to hams talking about their passions from all over the world on my little handheld radio feels amazing.&lt;/p&gt;
&lt;p&gt;Pi-Star works very well in my setup, so when I found out Pi-Star does not display my public IP address on OLED, I decided to write some code for it.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s what it looks like.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-oled-display-showing-my-public-ip&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/cross-compile-mmdvmhost-on-ubuntu/pistar-inetip_hu15853694f5406fd361772a3bb29a5fde_1182819_2000x2000_fit_q90_lanczos.jpg&#34; data-caption=&#34;OLED display showing my Public IP&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/cross-compile-mmdvmhost-on-ubuntu/pistar-inetip_hu15853694f5406fd361772a3bb29a5fde_1182819_2000x2000_fit_q90_lanczos.jpg&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2842&#34; height=&#34;2131&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    OLED display showing my Public IP
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;1-download-the-toolchain-with-extra-libs-and-headers&#34;&gt;1. Download the Toolchain with Extra Libs and Headers&lt;/h2&gt;
&lt;p&gt;I use Ubuntu 20.04 on my homelab as cross compiling platform, but any recent Linux distro should work.&lt;/p&gt;
&lt;p&gt;My toolchain is a fork from the original toolchain with extra libs and headers for compiling MMDVMHost.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ~/code
$ git clone https://github.com/davxiao/tools.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;2-code-is-the-easy-part-3&#34;&gt;2. Code is the Easy Part &amp;lt;3&lt;/h2&gt;
&lt;p&gt;Pi-Star consists of a few components including a PHP frontend and a few programs as backend for data exchange over various digital voice networks.&lt;/p&gt;
&lt;p&gt;MMDVMHost is the program that interfaces to the digital voice modem (MMDVM) on one side, and a suitable network on the other. It&amp;rsquo;s written in standard C++ with dependencies to external libs such as 
&lt;a href=&#34;https://github.com/hallard/ArduiPi_OLED&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ArduiPi_OLED&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For my purpose, I added some code in &lt;code&gt;CNetworkinfo&lt;/code&gt; class and &lt;code&gt;COLED&lt;/code&gt; class. If you don&amp;rsquo;t know much about C++, no worries, just download all source code from my github repo.&lt;/p&gt;
&lt;p&gt;Download my repo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ~/code
$ git clone https://github.com/davxiao/MMDVMHost.git
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;3-prep-for-the-cross-compilation&#34;&gt;3. Prep for the Cross Compilation&lt;/h2&gt;
&lt;p&gt;In &lt;code&gt;MMDVMHost/cmake/CrossCompile.cmake&lt;/code&gt;, you wanted to update toolchain paths so that CMake will be able to generate correct Makefile afterwards.&lt;/p&gt;
&lt;p&gt;When it&amp;rsquo;s done, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd MMDVMHost/cmake
$ cmake ../ -DCMAKE_TOOLCHAIN_FILE=./CrossCompile.cmake
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you see warnings like this, try delete &lt;code&gt;CMakeCache.txt&lt;/code&gt; and run the cmake command again.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;CMake Warning:
  Manually-specified variables were not used by the project:
    CMAKE_TOOLCHAIN_FILE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4-last-step&#34;&gt;4. Last Step&lt;/h2&gt;
&lt;p&gt;When Cmake is done, a &lt;code&gt;Makefile&lt;/code&gt; was generated under the same directory. Run the following in the same directory:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When the complication is complete, you should see &lt;code&gt;MMDVMHost&lt;/code&gt; in the &lt;code&gt;cmake/&lt;/code&gt; directory. You may wish to run &lt;code&gt;file ./MMDVMHost&lt;/code&gt; to confirm the target platform is ARM as opposed to amd64. Here&amp;rsquo;s my output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt; ./MMDVMHost: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), 
 dynamically linked, interpreter /lib/ld-linux-armhf.so.3, for GNU/Linux 2.6.32,
 with debug_info, not stripped
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Congrats! You&amp;rsquo;ve built MMDVMHost using cross compilcation.&lt;/p&gt;
&lt;h2 id=&#34;deployment&#34;&gt;Deployment&lt;/h2&gt;
&lt;p&gt;You can skip this section if you have set up your own deployment pipeline.&lt;/p&gt;
&lt;p&gt;On my homelab, I mount the same Samba share folder on both the Ubuntu and the Pi, then just copy the MMDVMHost over. Before replacing the MMDVMHost, you need to confirm the SD card is mounted in R/W mode and MMDVMHost service is stopped. Make a backup of the original MMDVMHost is also a good idea.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ rpi-rw ; 
$ sudo systemctl stop mmdvmhost ; 
$ sudo systemctl stop mmdvmhost.timer ;
$ sudo cp ~/nas-dir/MMDVMHost.build /usr/local/bin/MMDVMHost ;
$ sudo systemctl start mmdvmhost ;
$ sudo systemctl start mmdvmhost.timer ;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;If you experience &lt;code&gt;mount error(115): Operation now in progress&lt;/code&gt; when mounting CIFS on Pi, it might be caused by the iptable rules set by Pi-Star.&lt;/p&gt;
&lt;p&gt;To troubleshooting the issue, run the following commands on Pi-Star and see if mount works.&lt;/p&gt;
&lt;p&gt;No worries, the following changes do not persist between restarts.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;    sudo iptables -P INPUT ACCEPT; 
    sudo iptables -P FORWARD ACCEPT; 
    sudo iptables -P OUTPUT ACCEPT; 
    sudo iptables -F; 
    sudo iptables -X ; 
    sudo iptables -nvL ;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building a website in 2020</title>
      <link>https://davidxiao.me/post/building-a-website-in-2020/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://davidxiao.me/post/building-a-website-in-2020/</guid>
      <description>&lt;p&gt;In this post I will talk about how I built this website from the ground up using Hugo as site generator and Firebase as hosting provider. I wish you&amp;rsquo;ll find it helpful.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;span class=&#34;my-dropcap&#34;&gt;W&lt;/span&gt;eb development has come a long way. Back in the late 90&amp;rsquo;s when I first came across Internet, anyone who knows anything about 
&lt;a href=&#34;https://en.wikipedia.org/wiki/HTML&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTML&lt;/a&gt; would be considered very technical.&lt;/p&gt;
&lt;p&gt;Fast forward into 2020, social media and smart phone is ubiquitous, 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Web_hosting_service&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;web hosting services&lt;/a&gt; such as 
&lt;a href=&#34;https://www.wix.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wix&lt;/a&gt; and 
&lt;a href=&#34;https://wordpress.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wordpress&lt;/a&gt; have made 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Content_creation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;content creation&lt;/a&gt; possible for anyone who wishes to create a website without much headache.&lt;/p&gt;
&lt;p&gt;Why should you building a website from the ground up as opposed to using a web hosting service?&lt;/p&gt;
&lt;h2 id=&#34;maybe-its-for-you&#34;&gt;Maybe it&amp;rsquo;s for you&lt;/h2&gt;
&lt;p&gt;Building a website with a static site generator is not for everyone. George Cushen who is Hugo theme Academic&amp;rsquo;s main contributor once put:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;hellip;(it would) require a basic understanding of using the command line in the Terminal (Mac/Linux) or Command Prompt (Windows) app on your computer. If you are not interested in this, perhaps this is not for you&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Original post&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But if going beyond content creation and learning more about building a website that is lightweight and secure, cost effective yet no 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Vendor_lock-in&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;vendor lock-in&lt;/a&gt; is your thing, then let&amp;rsquo;s dive right in.&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;First and foremost, let&amp;rsquo;s take a look on what will be covered in the post.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Register a domain name.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up Hugo as static site generator.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a kick-starter theme to get going quickly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deploy the site to Firebase.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add your domain to the new site.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;1-register-a-domain-name&#34;&gt;1. Register a domain name&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s pretty straightforward. You come up with a great domain name. It is better to be concise and easy to remember. Be creative &amp;lt;3.&lt;/p&gt;
&lt;p&gt;Then complete the domain registration on any 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain_name_registrar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Domain Name Registrar&lt;/a&gt; you prefer. &lt;del&gt;I use Google Domains but there are other good choices such as Namecheap and GoDaddy.&lt;/del&gt;&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-register-a-domain-name-on-google-domains&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-a-website-in-2020/googledomain_hua80840076dd6af33bd83daa8ff78b57a_385165_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Register a domain name on Google Domains&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-a-website-in-2020/googledomain_hua80840076dd6af33bd83daa8ff78b57a_385165_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2812&#34; height=&#34;1530&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Register a domain name on Google Domains
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;June 2020: For a few reasons, one being Google domains does not provide API for dynamic DNS (A records), I&amp;rsquo;ve changed my domain name registrar to 
&lt;a href=&#34;https://www.namecheap.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Namecheap&lt;/a&gt;, my DNS provider to 
&lt;a href=&#34;https://www.cloudflare.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloudflare&lt;/a&gt;].&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-setting-up-hugo&#34;&gt;2. Setting up Hugo&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; is a 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Web_template_system#Static_site_generators&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;static site generator&lt;/a&gt;. There are many other site generators, I picked Hugo for a few reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Open_source&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;open source&lt;/a&gt; and backed by an active developer team and support community.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s a monolithic program with no external dependencies.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s production ready.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In a nutshell, Hugo renders content into HTML files and uploads the files onto your choice of hosting provider. Your content is what you write as content creator. Hugo takes content files written in 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown&lt;/a&gt; (&lt;code&gt;.md&lt;/code&gt;), a format that is intended to be used by technical and non-technical writers alike. Since inception, Markdown has become the &lt;em&gt;de facto&lt;/em&gt; format in content creation and blogging.&lt;/p&gt;
&lt;p&gt;If you need to learn about Markdown syntax, there are good guides such as 
&lt;a href=&#34;https://www.markdownguide.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;installing-hugo&#34;&gt;Installing Hugo&lt;/h3&gt;
&lt;p&gt;On macOS, I recommend using a package manager such as 
&lt;a href=&#34;https://brew.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Homebrew&lt;/a&gt; to manage third-party packages. With Homebrew installed, to install Hugo, just run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew install hugo ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All set. In case you need to check which Hugo version is installed, run &lt;code&gt;hugo version&lt;/code&gt;. On my mac it returns &lt;code&gt;Hugo Static Site Generator v0.70.0/extended darwin/amd64&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For installing Hugo on Windows or Linux, refer to Hugo&amp;rsquo;s documentation.&lt;/p&gt;
&lt;h2 id=&#34;3-use-a-kick-starter-theme&#34;&gt;3. Use a kick-starter theme&lt;/h2&gt;
&lt;p&gt;Hugo has built-in theme mechanism that allows developers to quickly run a theme and see the results. It also provides all the necessary building blocks for user to personalize the theme. There are many themes available on Hugo, for my own website I use Academic Theme. It also comes with a 
&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;academic-kickstart repo&lt;/a&gt; on github for teasers.&lt;/p&gt;
&lt;p&gt;The easy way to get started is to just fork the repo, download the code and run it.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-fork-the-kickstart-into-your-own-repo&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-a-website-in-2020/forkrepo_hub00e36fa908e191c517c523b2f035a7a_337164_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Fork the kickstart into your own repo&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-a-website-in-2020/forkrepo_hub00e36fa908e191c517c523b2f035a7a_337164_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2068&#34; height=&#34;1406&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Fork the kickstart into your own repo
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;Download the code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone &amp;lt;replace-it-with-your-own-repo-url&amp;gt; ;
$ cd &amp;lt;your-repo-root-dir&amp;gt; ;
$ git submodule update --init --recursive ; # get the latest Academic theme
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run Hugo to serve the test site:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo server -D ;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now visit 
&lt;a href=&#34;http://127.0.0.1:1313/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://127.0.0.1:1313/&lt;/a&gt; on your web browser and you should see the homepage.&lt;/p&gt;
&lt;p&gt;Congrats! You&amp;rsquo;ve got your first Hugo website up and running on your local environment!&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Hugo only binds to local network address for &lt;a href=&#34;https://en.wikipedia.org/wiki/Secure_by_default&#34;&gt;security by default&lt;/a&gt;. If you need to test the site on another computer in your local network, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo server -D --bind=0.0.0.0 ;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;4-deploy-the-new-site-to-firebase&#34;&gt;4. Deploy the new site to Firebase&lt;/h2&gt;
&lt;p&gt;There are many out there: 
&lt;a href=&#34;https://http://firebase.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Firebase&lt;/a&gt;, 
&lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Pages&lt;/a&gt;, 
&lt;a href=&#34;https://www.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify&lt;/a&gt; and 
&lt;a href=&#34;http://aws.amazon.com/amplify/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS Amplify&lt;/a&gt; to name a few. Each one has its own offering. I picked Firebase as my hosting provider because they seem to offer a bit more on their free tier.&lt;/p&gt;
&lt;p&gt;First, install Firebase CLI and (optional) Google Cloud SDK CLI.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Firebase CLI. The recommended way is to run &lt;code&gt;npm i -g firebase-tools ;&lt;/code&gt; See its 
&lt;a href=&#34;https://github.com/firebase/firebase-tools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github repo&lt;/a&gt; for more detail. If you don&amp;rsquo;t have &lt;code&gt;npm&lt;/code&gt; installed yet, run: &lt;code&gt;brew install node ;&lt;/code&gt;. npm will be installed alongside node.js.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google Cloud SDK CLI. Run &lt;code&gt;brew cask install google-cloud-sdk ;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, go to 
&lt;a href=&#34;https://firebase.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Firebase&lt;/a&gt; to set up an account and create a new Firebase project. Make sure it uses the default free tier plan which is called &lt;code&gt;Spark&lt;/code&gt;. Be noted you need to specify GCP resource location under &lt;strong&gt;Project Overview&lt;/strong&gt; in Firebase Dashboard after project is created. The location can not be changed afterwards, so choose something close to you would be wise.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-specify-resource-location-under-project-overview-in-firebase-dashboard&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-a-website-in-2020/gcplocation_hud9b4ca14f10cd788bd7fa102c656d069_282084_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Specify resource location under Project Overview in Firebase Dashboard&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-a-website-in-2020/gcplocation_hud9b4ca14f10cd788bd7fa102c656d069_282084_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2356&#34; height=&#34;1516&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Specify resource location under Project Overview in Firebase Dashboard
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h3 id=&#34;set-up-service-account-authenication-on-firebase&#34;&gt;Set up service account authenication on Firebase&lt;/h3&gt;
&lt;p&gt;Authenticating with a service account allows you to use Firebase CLI to manage your Firebase project. Google has provided a step by step guide 
&lt;a href=&#34;https://firebase.google.com/docs/app-distribution/authenticate-service-account.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When authentication is set up, go to your project root directory and follow the recorded screens below to initialize firebase and deploy the very first version of your site onto firebase.&lt;/p&gt;
&lt;script id=&#34;asciicast-331048&#34; src=&#34;https://asciinema.org/a/331048.js&#34; async&gt;&lt;/script&gt;

&lt;p&gt;Congratulations! Your website is online! You should find your Hosting URL at the end of the Firebase deploy output, it&amp;rsquo;s typically something like: &lt;code&gt;https://your-project-id.web.app&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-add-your-domain-to-the-new-site&#34;&gt;5. Add your domain to the new site&lt;/h2&gt;
&lt;p&gt;Go to &lt;strong&gt;Hosting&lt;/strong&gt; on Firebase, click on &amp;ldquo;Add custom domain&amp;rdquo;. Typically you wanted to add your root domain name and a sub domain name such as &amp;ldquo;www&amp;rdquo;. For example, I added &amp;ldquo;davidxiao.me&amp;rdquo; for my website and added another entry for redirecting &lt;code&gt;www.davidxiao.me&lt;/code&gt; to &lt;code&gt;davidxiao.me&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When it&amp;rsquo;s complete, you will be able to visit your website by your custom domain regsitered on step 1.&lt;/p&gt;





  
  











&lt;figure id=&#34;figure-add-custom-domain-to-your-website&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://davidxiao.me/post/building-a-website-in-2020/customdomain_hu5078b5b3d5bdae7e24676b63cc4c7b97_300325_2000x2000_fit_lanczos_2.png&#34; data-caption=&#34;Add custom domain to your website&#34;&gt;


  &lt;img data-src=&#34;https://davidxiao.me/post/building-a-website-in-2020/customdomain_hu5078b5b3d5bdae7e24676b63cc4c7b97_300325_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2318&#34; height=&#34;1026&#34;&gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Add custom domain to your website
  &lt;/figcaption&gt;


&lt;/figure&gt;

</description>
    </item>
    
  </channel>
</rss>
